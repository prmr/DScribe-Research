import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        java.lang.String str17 = byteOrderMark13.toString();
        byte[] byteArray18 = byteOrderMark13.getBytes();
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark13.equals(obj19);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int int10 = byteOrderMark0.length();
        java.lang.String str11 = byteOrderMark0.getCharsetName();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        java.lang.String str13 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16BE" + "'", str11, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        int[] intArray3 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray3);
        java.lang.String str6 = byteOrderMark5.toString();
        int int7 = byteOrderMark5.length();
        java.lang.String str8 = byteOrderMark5.toString();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[255]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-8: 0xFF]" + "'", str6, "ByteOrderMark[UTF-8: 0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-8: 0xFF]" + "'", str8, "ByteOrderMark[UTF-8: 0xFF]");
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int int15 = byteOrderMark13.get(0);
        java.lang.Class<?> wildcardClass16 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int11 = byteOrderMark0.get(0);
        byte[] byteArray12 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        int int18 = byteOrderMark17.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str12 = byteOrderMark0.toString();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray24);
        byte[] byteArray33 = byteOrderMark32.getBytes();
        boolean boolean34 = byteOrderMark0.equals((java.lang.Object) byteOrderMark32);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str12, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        byte[] byteArray18 = byteOrderMark15.getBytes();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int int13 = byteOrderMark0.get((int) (byte) 1);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray19);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        java.lang.String str23 = byteOrderMark0.toString();
        int int24 = byteOrderMark0.length();
        java.lang.String str25 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 254 + "'", int13 == 254);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        java.lang.Class<?> wildcardClass22 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        int int20 = byteOrderMark19.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj22 = null;
        boolean boolean23 = byteOrderMark21.equals(obj22);
        int int24 = byteOrderMark21.length();
        boolean boolean26 = byteOrderMark21.equals((java.lang.Object) 0L);
        int int27 = byteOrderMark21.length();
        boolean boolean29 = byteOrderMark21.equals((java.lang.Object) 3);
        java.lang.String str30 = byteOrderMark21.getCharsetName();
        java.lang.String str31 = byteOrderMark21.getCharsetName();
        java.lang.String str32 = byteOrderMark21.toString();
        byte[] byteArray33 = byteOrderMark21.getBytes();
        boolean boolean34 = byteOrderMark19.equals((java.lang.Object) byteArray33);
        java.lang.Class<?> wildcardClass35 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16BE" + "'", str30, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16BE" + "'", str31, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str32, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark28.getCharsetName();
        byte[] byteArray31 = byteOrderMark28.getBytes();
        java.lang.String str32 = byteOrderMark28.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-32BE" + "'", str30, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int16 = byteOrderMark13.get((int) (short) 0);
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-32BE" + "'", str17, "UTF-32BE");
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int35 = byteOrderMark33.get(0);
        boolean boolean37 = byteOrderMark33.equals((java.lang.Object) (short) 0);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        boolean boolean48 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark0.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray50 = byteOrderMark33.getBytes();
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark33.equals(obj51);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = byteOrderMark33.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 255 + "'", int35 == 255);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        int[] intArray3 = new int[] { (byte) -1 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray3);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str6, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray9);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean19 = byteOrderMark17.equals((java.lang.Object) (-1L));
        java.lang.String str20 = byteOrderMark17.toString();
        byte[] byteArray21 = byteOrderMark17.getBytes();
        int int23 = byteOrderMark17.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray25 = byteOrderMark24.getBytes();
        java.lang.String str26 = byteOrderMark24.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int29 = byteOrderMark27.get((int) (byte) 0);
        byte[] byteArray30 = byteOrderMark27.getBytes();
        byte[] byteArray31 = byteOrderMark27.getBytes();
        boolean boolean32 = byteOrderMark24.equals((java.lang.Object) byteOrderMark27);
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray42);
        boolean boolean49 = byteOrderMark24.equals((java.lang.Object) intArray42);
        boolean boolean50 = byteOrderMark17.equals((java.lang.Object) boolean49);
        boolean boolean51 = byteOrderMark15.equals((java.lang.Object) boolean49);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = byteOrderMark15.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 255 + "'", int23 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-32BE" + "'", str26, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 239 + "'", int29 == 239);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark17.equals(obj19);
        byte[] byteArray21 = byteOrderMark17.getBytes();
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteArray21);
        java.lang.Class<?> wildcardClass23 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj2 = null;
        boolean boolean3 = byteOrderMark1.equals(obj2);
        int int4 = byteOrderMark1.length();
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) 0L);
        int int7 = byteOrderMark1.length();
        int int8 = byteOrderMark1.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        boolean boolean19 = byteOrderMark1.equals((java.lang.Object) intArray15);
        byte[] byteArray20 = byteOrderMark1.getBytes();
        int int21 = byteOrderMark1.length();
        java.lang.String str22 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray24 = byteOrderMark23.getBytes();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        boolean boolean41 = byteOrderMark23.equals((java.lang.Object) intArray34);
        boolean boolean42 = byteOrderMark1.equals((java.lang.Object) intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray34);
        java.lang.String str44 = byteOrderMark43.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16BE" + "'", str22, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str44, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        int int16 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        int int29 = byteOrderMark27.length();
        java.lang.String str30 = byteOrderMark27.toString();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        int int12 = byteOrderMark9.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        java.lang.String str17 = byteOrderMark13.toString();
        byte[] byteArray18 = byteOrderMark13.getBytes();
        java.lang.Class<?> wildcardClass19 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        int int7 = byteOrderMark4.length();
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) 0L);
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) int10);
        java.lang.Class<?> wildcardClass12 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        int int14 = byteOrderMark13.length();
        java.lang.Class<?> wildcardClass15 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray29);
        java.lang.Class<?> wildcardClass36 = intArray29.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark30.length();
        java.lang.String str48 = byteOrderMark30.toString();
        java.lang.String str49 = byteOrderMark30.toString();
        byte[] byteArray50 = byteOrderMark30.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str49, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 97, 35]");
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        int int11 = byteOrderMark9.length();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        java.lang.String str13 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        java.lang.Class<?> wildcardClass22 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj3 = null;
        boolean boolean4 = byteOrderMark2.equals(obj3);
        byte[] byteArray5 = byteOrderMark2.getBytes();
        java.lang.String str6 = byteOrderMark2.toString();
        java.lang.String str7 = byteOrderMark2.getCharsetName();
        java.lang.String str8 = byteOrderMark2.toString();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        boolean boolean25 = byteOrderMark2.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("", intArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("", intArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        java.lang.String str18 = byteOrderMark15.toString();
        java.lang.String str19 = byteOrderMark15.getCharsetName();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        int[] intArray5 = new int[] { 1, 35, 3 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[1, 35, 3]");
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int int23 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark3.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str18 = byteOrderMark12.toString();
        int int19 = byteOrderMark12.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        java.lang.String str12 = byteOrderMark9.toString();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray17 = byteOrderMark16.getBytes();
        byte[] byteArray18 = byteOrderMark16.getBytes();
        boolean boolean19 = byteOrderMark0.equals((java.lang.Object) byteArray18);
        java.lang.Class<?> wildcardClass20 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark30.length();
        java.lang.String str48 = byteOrderMark30.toString();
        byte[] byteArray49 = byteOrderMark30.getBytes();
        int int50 = byteOrderMark30.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean53 = byteOrderMark51.equals((java.lang.Object) 1L);
        java.lang.String str54 = byteOrderMark51.getCharsetName();
        int int55 = byteOrderMark51.length();
        boolean boolean57 = byteOrderMark51.equals((java.lang.Object) (byte) -1);
        byte[] byteArray58 = byteOrderMark51.getBytes();
        java.lang.String str59 = byteOrderMark51.getCharsetName();
        java.lang.String str60 = byteOrderMark51.getCharsetName();
        java.lang.String str61 = byteOrderMark51.toString();
        int int62 = byteOrderMark51.length();
        int int64 = byteOrderMark51.get((int) (byte) 1);
        int[] intArray70 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = new org.apache.commons.io.ByteOrderMark("hi!", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray70);
        boolean boolean73 = byteOrderMark51.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        java.lang.String str74 = byteOrderMark51.toString();
        boolean boolean75 = byteOrderMark30.equals((java.lang.Object) str74);
        int int76 = byteOrderMark30.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-16LE" + "'", str59, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-16LE" + "'", str60, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str61, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 254 + "'", int64 == 254);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str74, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 3 + "'", int76 == 3);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str16 = byteOrderMark14.toString();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        int int27 = byteOrderMark26.length();
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        java.lang.String str34 = byteOrderMark33.getCharsetName();
        java.lang.Object obj35 = null;
        boolean boolean36 = byteOrderMark33.equals(obj35);
        boolean boolean37 = byteOrderMark26.equals(obj35);
        java.lang.Class<?> wildcardClass38 = byteOrderMark26.getClass();
        boolean boolean39 = byteOrderMark14.equals((java.lang.Object) wildcardClass38);
        java.lang.Class<?> wildcardClass40 = byteOrderMark14.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.toString();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean9 = byteOrderMark7.equals((java.lang.Object) 1L);
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        int int11 = byteOrderMark7.length();
        boolean boolean13 = byteOrderMark7.equals((java.lang.Object) (byte) -1);
        byte[] byteArray14 = byteOrderMark7.getBytes();
        java.lang.String str15 = byteOrderMark7.getCharsetName();
        byte[] byteArray16 = byteOrderMark7.getBytes();
        int int18 = byteOrderMark7.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean20 = byteOrderMark7.equals((java.lang.Object) byteOrderMark19);
        int int21 = byteOrderMark7.length();
        int int22 = byteOrderMark7.length();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) int22);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = byteOrderMark0.get(2);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 255 + "'", int18 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        int int20 = byteOrderMark19.length();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark19.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        byte[] byteArray5 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int8 = byteOrderMark6.get(0);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 0L);
        int int16 = byteOrderMark10.length();
        boolean boolean17 = byteOrderMark6.equals((java.lang.Object) int16);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark6);
        byte[] byteArray19 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark0.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 255 + "'", int8 == 255);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        java.lang.String str12 = byteOrderMark9.toString();
        java.lang.Class<?> wildcardClass13 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        java.lang.String str20 = byteOrderMark19.toString();
        int int21 = byteOrderMark19.length();
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        int int24 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        java.lang.String str21 = byteOrderMark19.toString();
        java.lang.Class<?> wildcardClass22 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        int int16 = byteOrderMark13.length();
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str15, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str17, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        int int21 = byteOrderMark9.length();
        java.lang.String str22 = byteOrderMark9.toString();
        byte[] byteArray23 = byteOrderMark9.getBytes();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean4 = byteOrderMark2.equals((java.lang.Object) (-1L));
        java.lang.String str5 = byteOrderMark2.getCharsetName();
        java.lang.String str6 = byteOrderMark2.getCharsetName();
        boolean boolean7 = byteOrderMark0.equals((java.lang.Object) str6);
        int int8 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        java.lang.Class<?> wildcardClass21 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark5);
        java.lang.Object obj10 = null;
        boolean boolean11 = byteOrderMark5.equals(obj10);
        byte[] byteArray12 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        java.lang.Class<?> wildcardClass13 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.Class<?> wildcardClass15 = byteArray14.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str30 = byteOrderMark29.toString();
        boolean boolean32 = byteOrderMark29.equals((java.lang.Object) ' ');
        java.lang.String str33 = byteOrderMark29.toString();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        byte[] byteArray35 = byteOrderMark29.getBytes();
        boolean boolean36 = byteOrderMark27.equals((java.lang.Object) byteArray35);
        java.lang.String str37 = byteOrderMark27.toString();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str33, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-32BE" + "'", str34, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str37, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        byte[] byteArray26 = byteOrderMark0.getBytes();
        byte[] byteArray27 = byteOrderMark0.getBytes();
        int int29 = byteOrderMark0.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        int int7 = byteOrderMark4.length();
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) 0L);
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) int10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        byte[] byteArray21 = byteOrderMark12.getBytes();
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray23 = byteOrderMark12.getBytes();
        byte[] byteArray24 = byteOrderMark12.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -2]");
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray21);
        boolean boolean24 = byteOrderMark14.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        java.lang.String str25 = byteOrderMark14.toString();
        int int26 = byteOrderMark14.length();
        java.lang.String str27 = byteOrderMark14.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str27, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        java.lang.String str15 = byteOrderMark14.toString();
        int int16 = byteOrderMark14.length();
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) int16);
        int int18 = byteOrderMark0.length();
        java.lang.String str19 = byteOrderMark0.toString();
        int int20 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str18 = byteOrderMark11.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark11.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        int int13 = byteOrderMark5.get((int) (short) 0);
        java.lang.String str14 = byteOrderMark5.toString();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        int int14 = byteOrderMark13.length();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj2 = null;
        boolean boolean3 = byteOrderMark1.equals(obj2);
        byte[] byteArray4 = byteOrderMark1.getBytes();
        java.lang.String str5 = byteOrderMark1.toString();
        java.lang.String str6 = byteOrderMark1.getCharsetName();
        java.lang.String str7 = byteOrderMark1.toString();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        boolean boolean24 = byteOrderMark1.equals((java.lang.Object) intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        java.lang.Class<?> wildcardClass26 = byteOrderMark25.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.String str9 = byteOrderMark7.toString();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        int int11 = byteOrderMark7.length();
        int int12 = byteOrderMark7.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean15 = byteOrderMark13.equals((java.lang.Object) 1L);
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        int int17 = byteOrderMark13.length();
        java.lang.String str18 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) 1L);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) byteOrderMark24);
        byte[] byteArray26 = byteOrderMark24.getBytes();
        int int27 = byteOrderMark24.length();
        int int28 = byteOrderMark24.length();
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        boolean boolean45 = byteOrderMark24.equals((java.lang.Object) intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        boolean boolean47 = byteOrderMark13.equals((java.lang.Object) intArray38);
        boolean boolean48 = byteOrderMark7.equals((java.lang.Object) boolean47);
        java.lang.String str49 = byteOrderMark7.getCharsetName();
        java.lang.String str50 = byteOrderMark7.getCharsetName();
        int int51 = byteOrderMark7.length();
        java.lang.String str52 = byteOrderMark7.toString();
        java.lang.String str53 = byteOrderMark7.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-16LE" + "'", str49, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16LE" + "'", str50, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str52, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-16LE" + "'", str53, "UTF-16LE");
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        boolean boolean38 = byteOrderMark18.equals((java.lang.Object) int37);
        byte[] byteArray39 = byteOrderMark18.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int41 = byteOrderMark18.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int int13 = byteOrderMark0.get((int) (byte) 1);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray19);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        byte[] byteArray23 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 254 + "'", int13 == 254);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        boolean boolean20 = byteOrderMark2.equals((java.lang.Object) intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray13);
        java.lang.Class<?> wildcardClass23 = intArray13.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        int int8 = byteOrderMark0.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark0.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        int int25 = byteOrderMark24.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj27 = null;
        boolean boolean28 = byteOrderMark26.equals(obj27);
        byte[] byteArray29 = byteOrderMark26.getBytes();
        java.lang.String str30 = byteOrderMark26.toString();
        int int32 = byteOrderMark26.get((int) (byte) 0);
        boolean boolean33 = byteOrderMark24.equals((java.lang.Object) byteOrderMark26);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int36 = byteOrderMark34.get(0);
        byte[] byteArray37 = byteOrderMark34.getBytes();
        byte[] byteArray38 = byteOrderMark34.getBytes();
        int int39 = byteOrderMark34.length();
        int[] intArray50 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray50);
        boolean boolean58 = byteOrderMark34.equals((java.lang.Object) byteOrderMark57);
        boolean boolean59 = byteOrderMark24.equals((java.lang.Object) byteOrderMark57);
        boolean boolean60 = byteOrderMark3.equals((java.lang.Object) byteOrderMark57);
        java.lang.Class<?> wildcardClass61 = byteOrderMark3.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 254 + "'", int32 == 254);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 255 + "'", int36 == 255);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray17 = byteOrderMark16.getBytes();
        java.lang.String str18 = byteOrderMark16.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int21 = byteOrderMark19.get((int) (byte) 0);
        byte[] byteArray22 = byteOrderMark19.getBytes();
        byte[] byteArray23 = byteOrderMark19.getBytes();
        boolean boolean24 = byteOrderMark16.equals((java.lang.Object) byteOrderMark19);
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray34);
        boolean boolean41 = byteOrderMark16.equals((java.lang.Object) intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray34);
        java.lang.String str43 = byteOrderMark42.toString();
        boolean boolean44 = byteOrderMark13.equals((java.lang.Object) str43);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 239 + "'", int21 == 239);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str43, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        int int20 = byteOrderMark19.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj22 = null;
        boolean boolean23 = byteOrderMark21.equals(obj22);
        int int24 = byteOrderMark21.length();
        boolean boolean26 = byteOrderMark21.equals((java.lang.Object) 0L);
        int int27 = byteOrderMark21.length();
        boolean boolean29 = byteOrderMark21.equals((java.lang.Object) 3);
        java.lang.String str30 = byteOrderMark21.getCharsetName();
        java.lang.String str31 = byteOrderMark21.getCharsetName();
        java.lang.String str32 = byteOrderMark21.toString();
        byte[] byteArray33 = byteOrderMark21.getBytes();
        boolean boolean34 = byteOrderMark19.equals((java.lang.Object) byteArray33);
        java.lang.Class<?> wildcardClass35 = byteArray33.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16BE" + "'", str30, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16BE" + "'", str31, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str32, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean3 = byteOrderMark1.equals((java.lang.Object) 1L);
        java.lang.String str4 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) byteOrderMark5);
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        int int9 = byteOrderMark5.length();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        boolean boolean26 = byteOrderMark5.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray19);
        java.lang.Class<?> wildcardClass28 = byteOrderMark27.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) '#');
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = byteOrderMark0.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = byteOrderMark0.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str5, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str14 = byteOrderMark12.toString();
        byte[] byteArray15 = byteOrderMark12.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str14, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-17, -69, -65]");
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray14);
        byte[] byteArray26 = byteOrderMark25.getBytes();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int13 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass14 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass11 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark28.getCharsetName();
        byte[] byteArray31 = byteOrderMark28.getBytes();
        int int33 = byteOrderMark28.get(1);
        java.lang.Class<?> wildcardClass34 = byteOrderMark28.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-32BE" + "'", str30, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 97 + "'", int33 == 97);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        int int14 = byteOrderMark13.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        byte[] byteArray29 = byteOrderMark28.getBytes();
        int int30 = byteOrderMark28.length();
        java.lang.String str31 = byteOrderMark28.toString();
        byte[] byteArray32 = byteOrderMark28.getBytes();
        boolean boolean33 = byteOrderMark13.equals((java.lang.Object) byteArray32);
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray47);
        boolean boolean58 = byteOrderMark13.equals((java.lang.Object) byteOrderMark57);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str31, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = byteOrderMark0.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray29);
        java.lang.Class<?> wildcardClass36 = byteOrderMark35.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int6 = byteOrderMark0.length();
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray16);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        java.lang.String str23 = byteOrderMark21.toString();
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) str23);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        java.lang.Class<?> wildcardClass18 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        java.lang.String str21 = byteOrderMark19.toString();
        byte[] byteArray22 = byteOrderMark19.getBytes();
        java.lang.Class<?> wildcardClass23 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int int10 = byteOrderMark0.length();
        java.lang.String str11 = byteOrderMark0.getCharsetName();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int13 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16BE" + "'", str11, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        int int9 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray33);
        boolean boolean38 = byteOrderMark0.equals((java.lang.Object) byteOrderMark37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray40 = byteOrderMark39.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean43 = byteOrderMark41.equals((java.lang.Object) 1L);
        java.lang.String str44 = byteOrderMark41.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean46 = byteOrderMark41.equals((java.lang.Object) byteOrderMark45);
        boolean boolean47 = byteOrderMark39.equals((java.lang.Object) byteOrderMark41);
        byte[] byteArray48 = byteOrderMark41.getBytes();
        boolean boolean49 = byteOrderMark37.equals((java.lang.Object) byteOrderMark41);
        int[] intArray58 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray58);
        byte[] byteArray64 = byteOrderMark63.getBytes();
        int int65 = byteOrderMark63.length();
        java.lang.String str66 = byteOrderMark63.toString();
        int[] intArray72 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray72);
        byte[] byteArray75 = byteOrderMark74.getBytes();
        boolean boolean76 = byteOrderMark63.equals((java.lang.Object) byteOrderMark74);
        boolean boolean77 = byteOrderMark41.equals((java.lang.Object) byteOrderMark63);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-16LE" + "'", str44, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str66, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        java.lang.String str17 = byteOrderMark13.toString();
        java.lang.String str18 = byteOrderMark13.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int8 = byteOrderMark0.get(0);
        java.lang.String str9 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 254 + "'", int8 == 254);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass7 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        int[] intArray7 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("", intArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 10, -1]");
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32LE;
        int int1 = byteOrderMark0.length();
        byte[] byteArray2 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = byteOrderMark0.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 4 + "'", int1 == 4);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, -2, 0, 0]");
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (short) 1);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int10 = byteOrderMark8.get(0);
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) 0L);
        int int18 = byteOrderMark12.length();
        boolean boolean19 = byteOrderMark8.equals((java.lang.Object) int18);
        boolean boolean20 = byteOrderMark5.equals((java.lang.Object) boolean19);
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) boolean20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean24 = byteOrderMark22.equals((java.lang.Object) 1L);
        java.lang.String str25 = byteOrderMark22.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean27 = byteOrderMark22.equals((java.lang.Object) byteOrderMark26);
        boolean boolean29 = byteOrderMark26.equals((java.lang.Object) (short) -1);
        java.lang.String str30 = byteOrderMark26.getCharsetName();
        int int31 = byteOrderMark26.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) int31);
        java.lang.String str33 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 187 + "'", int7 == 187);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 255 + "'", int10 == 255);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16BE" + "'", str30, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str33, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) 1L);
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        int int12 = byteOrderMark8.length();
        boolean boolean14 = byteOrderMark8.equals((java.lang.Object) (byte) -1);
        byte[] byteArray15 = byteOrderMark8.getBytes();
        java.lang.String str16 = byteOrderMark8.getCharsetName();
        java.lang.String str17 = byteOrderMark8.getCharsetName();
        java.lang.String str18 = byteOrderMark8.getCharsetName();
        boolean boolean19 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        java.lang.String str20 = byteOrderMark4.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark4.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        int int13 = byteOrderMark11.get((int) (byte) 0);
        java.lang.String str14 = byteOrderMark11.toString();
        java.lang.Class<?> wildcardClass15 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int13 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = byteOrderMark0.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray11 = byteOrderMark10.getBytes();
        int int12 = byteOrderMark10.length();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        java.lang.String str25 = byteOrderMark24.toString();
        int int26 = byteOrderMark24.length();
        boolean boolean27 = byteOrderMark10.equals((java.lang.Object) int26);
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) int26);
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) intArray34);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int22 = byteOrderMark21.length();
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        byte[] byteArray24 = byteOrderMark21.getBytes();
        byte[] byteArray25 = byteOrderMark21.getBytes();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass6 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        int int20 = byteOrderMark17.length();
        int int21 = byteOrderMark17.length();
        java.lang.String str22 = byteOrderMark17.getCharsetName();
        java.lang.Class<?> wildcardClass23 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray5);
        java.lang.Class<?> wildcardClass8 = byteOrderMark7.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        byte[] byteArray21 = byteOrderMark20.getBytes();
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteArray21);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark9.equals(obj13);
        java.lang.Class<?> wildcardClass15 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int18 = byteOrderMark16.get((int) (byte) 0);
        int[] intArray28 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray28);
        int int35 = byteOrderMark34.length();
        boolean boolean36 = byteOrderMark16.equals((java.lang.Object) byteOrderMark34);
        int[] intArray46 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray46);
        boolean boolean53 = byteOrderMark16.equals((java.lang.Object) intArray46);
        int int54 = byteOrderMark16.length();
        boolean boolean55 = byteOrderMark13.equals((java.lang.Object) int54);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16BE" + "'", str15, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 239 + "'", int18 == 239);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        boolean boolean38 = byteOrderMark18.equals((java.lang.Object) int37);
        byte[] byteArray39 = byteOrderMark18.getBytes();
        byte[] byteArray40 = byteOrderMark18.getBytes();
        int int41 = byteOrderMark18.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        int int20 = byteOrderMark17.length();
        java.lang.String str21 = byteOrderMark17.getCharsetName();
        java.lang.String str22 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str21, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int8 = byteOrderMark7.length();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.Class<?> wildcardClass10 = byteOrderMark7.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str10 = byteOrderMark4.toString();
        int int11 = byteOrderMark4.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) (-1L));
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        byte[] byteArray16 = byteOrderMark12.getBytes();
        boolean boolean17 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) boolean17);
        java.lang.String str19 = byteOrderMark0.getCharsetName();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.String str22 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = byteOrderMark0.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("", intArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        byte[] byteArray9 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass10 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        java.lang.String str9 = byteOrderMark5.toString();
        java.lang.String str10 = byteOrderMark5.toString();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass7 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = byteOrderMark0.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        byte[] byteArray24 = byteOrderMark21.getBytes();
        int int25 = byteOrderMark21.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.String str9 = byteOrderMark7.toString();
        java.lang.String str10 = byteOrderMark7.toString();
        byte[] byteArray11 = byteOrderMark7.getBytes();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str30 = byteOrderMark29.toString();
        boolean boolean32 = byteOrderMark29.equals((java.lang.Object) ' ');
        java.lang.String str33 = byteOrderMark29.toString();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        byte[] byteArray35 = byteOrderMark29.getBytes();
        boolean boolean36 = byteOrderMark27.equals((java.lang.Object) byteArray35);
        java.lang.String str37 = byteOrderMark27.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str33, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-32BE" + "'", str34, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str37, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        int int21 = byteOrderMark15.length();
        java.lang.String str22 = byteOrderMark15.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) "hi!");
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray42);
        byte[] byteArray48 = byteOrderMark47.getBytes();
        int int49 = byteOrderMark47.length();
        java.lang.String str50 = byteOrderMark47.toString();
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        byte[] byteArray59 = byteOrderMark58.getBytes();
        boolean boolean60 = byteOrderMark47.equals((java.lang.Object) byteOrderMark58);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str62 = byteOrderMark61.toString();
        java.lang.String str63 = byteOrderMark61.toString();
        int int65 = byteOrderMark61.get(2);
        boolean boolean67 = byteOrderMark61.equals((java.lang.Object) (byte) 10);
        boolean boolean68 = byteOrderMark47.equals((java.lang.Object) boolean67);
        byte[] byteArray69 = byteOrderMark47.getBytes();
        boolean boolean70 = byteOrderMark15.equals((java.lang.Object) byteArray69);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = byteOrderMark15.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str50, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(byteOrderMark61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str62, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str63, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 254 + "'", int65 == 254);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray14 = byteOrderMark12.getBytes();
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        java.lang.Class<?> wildcardClass17 = byteOrderMark12.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        int int15 = byteOrderMark11.length();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark11.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.String str9 = byteOrderMark7.toString();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        int int11 = byteOrderMark7.length();
        int int12 = byteOrderMark7.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean15 = byteOrderMark13.equals((java.lang.Object) 1L);
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        int int17 = byteOrderMark13.length();
        java.lang.String str18 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) 1L);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) byteOrderMark24);
        byte[] byteArray26 = byteOrderMark24.getBytes();
        int int27 = byteOrderMark24.length();
        int int28 = byteOrderMark24.length();
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        boolean boolean45 = byteOrderMark24.equals((java.lang.Object) intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        boolean boolean47 = byteOrderMark13.equals((java.lang.Object) intArray38);
        boolean boolean48 = byteOrderMark7.equals((java.lang.Object) boolean47);
        java.lang.String str49 = byteOrderMark7.getCharsetName();
        java.lang.String str50 = byteOrderMark7.getCharsetName();
        int int51 = byteOrderMark7.length();
        java.lang.String str52 = byteOrderMark7.toString();
        java.lang.String str53 = byteOrderMark7.toString();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-16LE" + "'", str49, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16LE" + "'", str50, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str52, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str53, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray10 = byteOrderMark9.getBytes();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        int int13 = byteOrderMark0.get((int) (short) 0);
        java.lang.Class<?> wildcardClass14 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 255 + "'", int13 == 255);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        byte[] byteArray17 = byteOrderMark16.getBytes();
        java.lang.String str18 = byteOrderMark16.toString();
        byte[] byteArray19 = byteOrderMark16.getBytes();
        int int20 = byteOrderMark16.length();
        int int21 = byteOrderMark16.length();
        int int23 = byteOrderMark16.get((int) (short) 1);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark16);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass6 = byteArray5.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        int[] intArray3 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray3);
        java.lang.String str6 = byteOrderMark5.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark5.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[255]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-8: 0xFF]" + "'", str6, "ByteOrderMark[UTF-8: 0xFF]");
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int4 = byteOrderMark0.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray19 = byteOrderMark18.getBytes();
        java.lang.String str20 = byteOrderMark18.toString();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean37 = byteOrderMark18.equals((java.lang.Object) intArray30);
        boolean boolean38 = byteOrderMark17.equals((java.lang.Object) byteOrderMark18);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = byteOrderMark18.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass6 = byteArray5.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        int[] intArray6 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 254, 100]");
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) 1L);
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean34 = byteOrderMark29.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray35 = byteOrderMark33.getBytes();
        int int36 = byteOrderMark33.length();
        int int37 = byteOrderMark33.length();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        boolean boolean54 = byteOrderMark33.equals((java.lang.Object) intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        boolean boolean56 = byteOrderMark9.equals((java.lang.Object) byteOrderMark55);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = byteOrderMark55.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        int int19 = byteOrderMark16.length();
        boolean boolean21 = byteOrderMark16.equals((java.lang.Object) 0L);
        int int22 = byteOrderMark16.length();
        int int23 = byteOrderMark16.length();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean34 = byteOrderMark16.equals((java.lang.Object) intArray30);
        boolean boolean35 = byteOrderMark13.equals((java.lang.Object) intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray30);
        java.lang.Class<?> wildcardClass38 = intArray30.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int5 = byteOrderMark3.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        byte[] byteArray10 = byteOrderMark6.getBytes();
        boolean boolean11 = byteOrderMark3.equals((java.lang.Object) byteOrderMark6);
        java.lang.Class<?> wildcardClass12 = byteOrderMark3.getClass();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str14 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 255 + "'", int5 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark9.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int22 = byteOrderMark21.length();
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        byte[] byteArray24 = byteOrderMark21.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = byteOrderMark21.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean28 = byteOrderMark26.equals((java.lang.Object) (-1L));
        java.lang.String str29 = byteOrderMark26.toString();
        java.lang.String str30 = byteOrderMark26.getCharsetName();
        boolean boolean31 = byteOrderMark25.equals((java.lang.Object) byteOrderMark26);
        boolean boolean32 = byteOrderMark13.equals((java.lang.Object) byteOrderMark25);
        java.lang.String str33 = byteOrderMark13.getCharsetName();
        byte[] byteArray34 = byteOrderMark13.getBytes();
        java.lang.Class<?> wildcardClass35 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str29, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16BE" + "'", str33, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean9 = byteOrderMark7.equals((java.lang.Object) 1L);
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean12 = byteOrderMark7.equals((java.lang.Object) byteOrderMark11);
        byte[] byteArray13 = byteOrderMark11.getBytes();
        int int14 = byteOrderMark11.length();
        int int15 = byteOrderMark11.length();
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        boolean boolean32 = byteOrderMark11.equals((java.lang.Object) intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray25);
        boolean boolean34 = byteOrderMark0.equals((java.lang.Object) intArray25);
        java.lang.Class<?> wildcardClass35 = intArray25.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        int int17 = byteOrderMark15.get(2);
        byte[] byteArray18 = byteOrderMark15.getBytes();
        int int19 = byteOrderMark15.length();
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray27);
        java.lang.Class<?> wildcardClass32 = byteOrderMark31.getClass();
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) wildcardClass32);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark5);
        java.lang.Object obj10 = null;
        boolean boolean11 = byteOrderMark5.equals(obj10);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = byteOrderMark5.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("", intArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray5);
        int int8 = byteOrderMark7.length();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark0.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        int int12 = byteOrderMark11.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int18 = byteOrderMark16.get((int) (byte) 0);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        byte[] byteArray20 = byteOrderMark16.getBytes();
        boolean boolean21 = byteOrderMark13.equals((java.lang.Object) byteOrderMark16);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        boolean boolean38 = byteOrderMark13.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        java.lang.Class<?> wildcardClass41 = byteOrderMark39.getClass();
        boolean boolean42 = byteOrderMark13.equals((java.lang.Object) wildcardClass41);
        int int43 = byteOrderMark13.length();
        int int44 = byteOrderMark13.length();
        boolean boolean45 = byteOrderMark11.equals((java.lang.Object) byteOrderMark13);
        int int46 = byteOrderMark11.length();
        java.lang.String str47 = byteOrderMark11.toString();
        java.lang.Class<?> wildcardClass48 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-32BE" + "'", str15, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 239 + "'", int18 == 239);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16LE" + "'", str40, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str47, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray8);
        java.lang.Class<?> wildcardClass14 = intArray8.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark19.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        boolean boolean10 = byteOrderMark3.equals((java.lang.Object) '\ufeff');
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray22);
        boolean boolean31 = byteOrderMark3.equals((java.lang.Object) intArray22);
        byte[] byteArray32 = byteOrderMark3.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-17, -69, -65]");
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        byte[] byteArray21 = byteOrderMark9.getBytes();
        java.lang.String str22 = byteOrderMark9.getCharsetName();
        java.lang.String str23 = byteOrderMark9.getCharsetName();
        byte[] byteArray24 = byteOrderMark9.getBytes();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = byteOrderMark0.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.toString();
        boolean boolean27 = byteOrderMark21.equals((java.lang.Object) byteOrderMark23);
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray39);
        boolean boolean48 = byteOrderMark23.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        int int49 = byteOrderMark23.length();
        java.lang.Class<?> wildcardClass50 = byteOrderMark23.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        java.lang.String str19 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark0.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = byteOrderMark9.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str15 = byteOrderMark14.toString();
        java.lang.String str16 = byteOrderMark14.toString();
        int int18 = byteOrderMark14.get(2);
        byte[] byteArray19 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int22 = byteOrderMark20.get(0);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark24.equals(obj25);
        int int27 = byteOrderMark24.length();
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) 0L);
        int int30 = byteOrderMark24.length();
        boolean boolean31 = byteOrderMark20.equals((java.lang.Object) int30);
        boolean boolean32 = byteOrderMark14.equals((java.lang.Object) byteOrderMark20);
        byte[] byteArray33 = byteOrderMark20.getBytes();
        java.lang.String str34 = byteOrderMark20.getCharsetName();
        boolean boolean35 = byteOrderMark13.equals((java.lang.Object) byteOrderMark20);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = byteOrderMark13.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 254 + "'", int18 == 254);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 255 + "'", int22 == 255);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark0.getCharsetName();
        byte[] byteArray31 = byteOrderMark0.getBytes();
        java.lang.String str32 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass33 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str32, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean3 = byteOrderMark1.equals((java.lang.Object) 1L);
        java.lang.String str4 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) byteOrderMark5);
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        int int9 = byteOrderMark5.length();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        boolean boolean26 = byteOrderMark5.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray19);
        java.lang.Class<?> wildcardClass28 = intArray19.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.get(1);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj8 = null;
        boolean boolean9 = byteOrderMark7.equals(obj8);
        int int10 = byteOrderMark7.length();
        boolean boolean12 = byteOrderMark7.equals((java.lang.Object) 0L);
        int int13 = byteOrderMark7.length();
        int int14 = byteOrderMark7.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean17 = byteOrderMark15.equals((java.lang.Object) (-1L));
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int21 = byteOrderMark19.get(0);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        byte[] byteArray23 = byteOrderMark19.getBytes();
        boolean boolean24 = byteOrderMark15.equals((java.lang.Object) byteOrderMark19);
        boolean boolean25 = byteOrderMark7.equals((java.lang.Object) boolean24);
        java.lang.String str26 = byteOrderMark7.getCharsetName();
        boolean boolean27 = byteOrderMark0.equals((java.lang.Object) str26);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 255 + "'", int21 == 255);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16BE" + "'", str26, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.toString();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean9 = byteOrderMark7.equals((java.lang.Object) 1L);
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        int int11 = byteOrderMark7.length();
        boolean boolean13 = byteOrderMark7.equals((java.lang.Object) (byte) -1);
        byte[] byteArray14 = byteOrderMark7.getBytes();
        java.lang.String str15 = byteOrderMark7.getCharsetName();
        byte[] byteArray16 = byteOrderMark7.getBytes();
        int int18 = byteOrderMark7.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean20 = byteOrderMark7.equals((java.lang.Object) byteOrderMark19);
        int int21 = byteOrderMark7.length();
        int int22 = byteOrderMark7.length();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) int22);
        int int24 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 255 + "'", int18 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        int[] intArray3 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray3);
        java.lang.String str6 = byteOrderMark5.toString();
        int int7 = byteOrderMark5.length();
        java.lang.Class<?> wildcardClass8 = byteOrderMark5.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[255]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-8: 0xFF]" + "'", str6, "ByteOrderMark[UTF-8: 0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        java.lang.String str9 = byteOrderMark5.toString();
        int int11 = byteOrderMark5.get((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = byteOrderMark5.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 97 + "'", int11 == 97);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        java.lang.Class<?> wildcardClass20 = intArray11.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray33);
        boolean boolean38 = byteOrderMark0.equals((java.lang.Object) byteOrderMark37);
        java.lang.String str39 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-32BE" + "'", str39, "UTF-32BE");
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) (-1L));
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        byte[] byteArray16 = byteOrderMark12.getBytes();
        boolean boolean17 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) boolean17);
        java.lang.String str19 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass20 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean3 = byteOrderMark1.equals((java.lang.Object) 1L);
        java.lang.String str4 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) byteOrderMark5);
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        int int9 = byteOrderMark5.length();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        boolean boolean26 = byteOrderMark5.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = byteOrderMark27.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.String str19 = byteOrderMark17.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean36 = byteOrderMark17.equals((java.lang.Object) "hi!");
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int38 = byteOrderMark37.length();
        int int40 = byteOrderMark37.get((int) (short) 0);
        boolean boolean41 = byteOrderMark17.equals((java.lang.Object) byteOrderMark37);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = byteOrderMark17.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrderMark37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 254 + "'", int40 == 254);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str18 = byteOrderMark11.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark11.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        byte[] byteArray17 = byteOrderMark15.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark18.equals(obj19);
        int int21 = byteOrderMark18.length();
        boolean boolean23 = byteOrderMark18.equals((java.lang.Object) 0L);
        int int24 = byteOrderMark18.length();
        int int25 = byteOrderMark18.length();
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        boolean boolean36 = byteOrderMark18.equals((java.lang.Object) intArray32);
        boolean boolean37 = byteOrderMark15.equals((java.lang.Object) intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("", intArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        int int28 = byteOrderMark13.get((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = byteOrderMark13.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        java.lang.String str5 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int8 = byteOrderMark6.get((int) (byte) 0);
        byte[] byteArray9 = byteOrderMark6.getBytes();
        byte[] byteArray10 = byteOrderMark6.getBytes();
        boolean boolean11 = byteOrderMark3.equals((java.lang.Object) byteOrderMark6);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean28 = byteOrderMark3.equals((java.lang.Object) intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 239 + "'", int8 == 239);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        java.lang.String str11 = byteOrderMark7.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        byte[] byteArray20 = byteOrderMark17.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.toString();
        byte[] byteArray25 = byteOrderMark21.getBytes();
        boolean boolean26 = byteOrderMark17.equals((java.lang.Object) byteOrderMark21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int29 = byteOrderMark27.get(0);
        byte[] byteArray30 = byteOrderMark27.getBytes();
        byte[] byteArray31 = byteOrderMark27.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean34 = byteOrderMark32.equals((java.lang.Object) 1L);
        java.lang.String str35 = byteOrderMark32.getCharsetName();
        boolean boolean36 = byteOrderMark27.equals((java.lang.Object) byteOrderMark32);
        boolean boolean37 = byteOrderMark17.equals((java.lang.Object) boolean36);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 255 + "'", int29 == 255);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-16LE" + "'", str35, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        java.lang.String str15 = byteOrderMark13.toString();
        int int17 = byteOrderMark13.get(1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = byteOrderMark0.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray14 = byteOrderMark12.getBytes();
        int int15 = byteOrderMark12.length();
        byte[] byteArray16 = byteOrderMark12.getBytes();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int33 = byteOrderMark32.length();
        java.lang.String str34 = byteOrderMark32.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean37 = byteOrderMark35.equals((java.lang.Object) 1L);
        java.lang.String str38 = byteOrderMark35.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) byteOrderMark39);
        byte[] byteArray41 = byteOrderMark39.getBytes();
        boolean boolean42 = byteOrderMark32.equals((java.lang.Object) byteArray41);
        java.lang.String str43 = byteOrderMark32.toString();
        java.lang.Class<?> wildcardClass44 = byteOrderMark32.getClass();
        boolean boolean45 = byteOrderMark12.equals((java.lang.Object) wildcardClass44);
        java.lang.Class<?> wildcardClass46 = byteOrderMark12.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str34, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16LE" + "'", str38, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str43, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = byteOrderMark0.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int int5 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = byteOrderMark0.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        boolean boolean15 = byteOrderMark9.equals((java.lang.Object) "UTF-32BE");
        java.lang.String str16 = byteOrderMark9.getCharsetName();
        java.lang.String str17 = byteOrderMark9.toString();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.toString();
        byte[] byteArray12 = byteOrderMark5.getBytes();
        java.lang.String str13 = byteOrderMark5.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray15 = byteOrderMark14.getBytes();
        java.lang.String str16 = byteOrderMark14.getCharsetName();
        java.lang.Class<?> wildcardClass17 = byteOrderMark14.getClass();
        boolean boolean18 = byteOrderMark5.equals((java.lang.Object) wildcardClass17);
        java.lang.String str19 = byteOrderMark5.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str21 = byteOrderMark20.toString();
        java.lang.String str22 = byteOrderMark20.toString();
        int int24 = byteOrderMark20.get(2);
        java.lang.String str25 = byteOrderMark20.toString();
        int int26 = byteOrderMark20.length();
        java.lang.String str27 = byteOrderMark20.toString();
        java.lang.Class<?> wildcardClass28 = byteOrderMark20.getClass();
        boolean boolean29 = byteOrderMark5.equals((java.lang.Object) wildcardClass28);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-32BE" + "'", str16, "UTF-32BE");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 254 + "'", int24 == 254);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str27, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Class<?> wildcardClass1 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        boolean boolean15 = byteOrderMark9.equals((java.lang.Object) "UTF-32BE");
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark9.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        int int17 = byteOrderMark15.get(2);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark15.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str18, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int8 = byteOrderMark7.length();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark17.getClass();
        boolean boolean20 = byteOrderMark7.equals((java.lang.Object) byteOrderMark17);
        java.lang.String str21 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean3 = byteOrderMark1.equals((java.lang.Object) 1L);
        java.lang.String str4 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) byteOrderMark5);
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        int int9 = byteOrderMark5.length();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        boolean boolean26 = byteOrderMark5.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = byteOrderMark27.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        int int13 = byteOrderMark11.length();
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        java.lang.Class<?> wildcardClass15 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass5 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        boolean boolean20 = byteOrderMark2.equals((java.lang.Object) intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.Object obj30 = null;
        boolean boolean31 = byteOrderMark28.equals(obj30);
        byte[] byteArray32 = byteOrderMark28.getBytes();
        byte[] byteArray33 = byteOrderMark28.getBytes();
        int[] intArray38 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        boolean boolean40 = byteOrderMark28.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        boolean boolean41 = byteOrderMark22.equals((java.lang.Object) byteOrderMark28);
        byte[] byteArray42 = byteOrderMark28.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        java.lang.String str5 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int8 = byteOrderMark6.get((int) (byte) 0);
        byte[] byteArray9 = byteOrderMark6.getBytes();
        byte[] byteArray10 = byteOrderMark6.getBytes();
        boolean boolean11 = byteOrderMark3.equals((java.lang.Object) byteOrderMark6);
        boolean boolean13 = byteOrderMark6.equals((java.lang.Object) '\ufeff');
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray25);
        boolean boolean34 = byteOrderMark6.equals((java.lang.Object) intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("", intArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 239 + "'", int8 == 239);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int5 = byteOrderMark3.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        byte[] byteArray10 = byteOrderMark6.getBytes();
        boolean boolean11 = byteOrderMark3.equals((java.lang.Object) byteOrderMark6);
        java.lang.Class<?> wildcardClass12 = byteOrderMark3.getClass();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.Class<?> wildcardClass14 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 255 + "'", int5 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        byte[] byteArray15 = byteOrderMark14.getBytes();
        byte[] byteArray16 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        boolean boolean22 = byteOrderMark17.equals((java.lang.Object) 0L);
        int int23 = byteOrderMark17.length();
        int int24 = byteOrderMark17.length();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) intArray31);
        boolean boolean36 = byteOrderMark14.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray31);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = byteOrderMark39.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        java.lang.String str13 = byteOrderMark11.toString();
        int[] intArray19 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        boolean boolean22 = byteOrderMark11.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        int int24 = byteOrderMark11.get(0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.toString();
        byte[] byteArray19 = byteOrderMark13.getBytes();
        int int21 = byteOrderMark13.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray10 = byteOrderMark8.getBytes();
        int int11 = byteOrderMark8.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        java.lang.String str21 = byteOrderMark12.getCharsetName();
        java.lang.String str22 = byteOrderMark12.getCharsetName();
        boolean boolean23 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) boolean23);
        java.lang.String str25 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = byteOrderMark0.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str25, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = byteOrderMark0.equals(obj9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj12 = null;
        boolean boolean13 = byteOrderMark11.equals(obj12);
        int int14 = byteOrderMark11.length();
        boolean boolean16 = byteOrderMark11.equals((java.lang.Object) 0L);
        int int17 = byteOrderMark11.length();
        int int18 = byteOrderMark11.length();
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) intArray25);
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray37);
        int int42 = byteOrderMark41.length();
        boolean boolean43 = byteOrderMark11.equals((java.lang.Object) byteOrderMark41);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean46 = byteOrderMark44.equals((java.lang.Object) 1L);
        java.lang.String str47 = byteOrderMark44.getCharsetName();
        int int48 = byteOrderMark44.length();
        boolean boolean50 = byteOrderMark44.equals((java.lang.Object) (byte) -1);
        byte[] byteArray51 = byteOrderMark44.getBytes();
        java.lang.String str52 = byteOrderMark44.getCharsetName();
        java.lang.String str53 = byteOrderMark44.getCharsetName();
        java.lang.String str54 = byteOrderMark44.toString();
        int int55 = byteOrderMark44.length();
        int int56 = byteOrderMark44.length();
        boolean boolean57 = byteOrderMark41.equals((java.lang.Object) byteOrderMark44);
        int int59 = byteOrderMark41.get(2);
        java.lang.String str60 = byteOrderMark41.getCharsetName();
        boolean boolean61 = byteOrderMark0.equals((java.lang.Object) byteOrderMark41);
        java.lang.String str62 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteOrderMark11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteOrderMark44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-16LE" + "'", str47, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-16LE" + "'", str52, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-16LE" + "'", str53, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str54, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 35 + "'", int59 == 35);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str60, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UTF-16LE" + "'", str62, "UTF-16LE");
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.toString();
        java.lang.String str10 = byteOrderMark3.toString();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        byte[] byteArray23 = byteOrderMark22.getBytes();
        byte[] byteArray24 = byteOrderMark22.getBytes();
        byte[] byteArray25 = byteOrderMark22.getBytes();
        java.lang.Class<?> wildcardClass26 = byteOrderMark22.getClass();
        boolean boolean27 = byteOrderMark3.equals((java.lang.Object) wildcardClass26);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = byteOrderMark3.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str9, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str10, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("", intArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        boolean boolean7 = byteOrderMark4.equals((java.lang.Object) (short) -1);
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        java.lang.Class<?> wildcardClass9 = byteOrderMark4.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark11.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        int[] intArray5 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray5);
        int int9 = byteOrderMark7.get(1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 254, 100]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 254 + "'", int9 == 254);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean20 = byteOrderMark18.equals((java.lang.Object) 1L);
        java.lang.String str21 = byteOrderMark18.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean23 = byteOrderMark18.equals((java.lang.Object) byteOrderMark22);
        byte[] byteArray24 = byteOrderMark22.getBytes();
        int int25 = byteOrderMark22.length();
        int int26 = byteOrderMark22.length();
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        boolean boolean43 = byteOrderMark22.equals((java.lang.Object) intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray36);
        java.lang.Class<?> wildcardClass45 = byteOrderMark44.getClass();
        boolean boolean46 = byteOrderMark13.equals((java.lang.Object) wildcardClass45);
        byte[] byteArray47 = byteOrderMark13.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[10, 97, 35]");
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        java.lang.Class<?> wildcardClass12 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.String str9 = byteOrderMark7.toString();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        int int11 = byteOrderMark7.length();
        int int12 = byteOrderMark7.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean15 = byteOrderMark13.equals((java.lang.Object) 1L);
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        int int17 = byteOrderMark13.length();
        java.lang.String str18 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) 1L);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) byteOrderMark24);
        byte[] byteArray26 = byteOrderMark24.getBytes();
        int int27 = byteOrderMark24.length();
        int int28 = byteOrderMark24.length();
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        boolean boolean45 = byteOrderMark24.equals((java.lang.Object) intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        boolean boolean47 = byteOrderMark13.equals((java.lang.Object) intArray38);
        boolean boolean48 = byteOrderMark7.equals((java.lang.Object) boolean47);
        java.lang.String str49 = byteOrderMark7.getCharsetName();
        java.lang.String str50 = byteOrderMark7.toString();
        byte[] byteArray51 = byteOrderMark7.getBytes();
        java.lang.Class<?> wildcardClass52 = byteArray51.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-16LE" + "'", str49, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        java.lang.String str13 = byteOrderMark11.toString();
        int int14 = byteOrderMark11.length();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark11.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        int int10 = byteOrderMark0.get(0);
        java.lang.String str11 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass12 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 254 + "'", int10 == 254);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16BE" + "'", str11, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray6);
        java.lang.String str10 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        byte[] byteArray28 = byteOrderMark21.getBytes();
        java.lang.String str29 = byteOrderMark21.getCharsetName();
        java.lang.Class<?> wildcardClass30 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16LE" + "'", str29, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray8);
        java.lang.String str14 = byteOrderMark13.toString();
        int int15 = byteOrderMark13.length();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark13.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark19.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        int int14 = byteOrderMark13.length();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass7 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get((int) (byte) 0);
        java.lang.Class<?> wildcardClass5 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str2, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 255 + "'", int4 == 255);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int int13 = byteOrderMark0.get((int) (byte) 1);
        java.lang.String str14 = byteOrderMark0.getCharsetName();
        int int15 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 254 + "'", int13 == 254);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.toString();
        int int9 = byteOrderMark0.get((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark0.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 255 + "'", int9 == 255);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        byte[] byteArray9 = byteOrderMark0.getBytes();
        byte[] byteArray10 = byteOrderMark0.getBytes();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        java.lang.Class<?> wildcardClass29 = byteOrderMark28.getClass();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str32 = byteOrderMark31.toString();
        boolean boolean34 = byteOrderMark31.equals((java.lang.Object) ' ');
        boolean boolean36 = byteOrderMark31.equals((java.lang.Object) 3);
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.Class<?> wildcardClass38 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str32, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        boolean boolean64 = byteOrderMark47.equals((java.lang.Object) byteOrderMark61);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        java.lang.Object obj72 = null;
        boolean boolean73 = byteOrderMark70.equals(obj72);
        int int74 = byteOrderMark70.length();
        byte[] byteArray75 = byteOrderMark70.getBytes();
        java.lang.Class<?> wildcardClass76 = byteOrderMark70.getClass();
        boolean boolean77 = byteOrderMark61.equals((java.lang.Object) wildcardClass76);
        boolean boolean78 = byteOrderMark11.equals((java.lang.Object) byteOrderMark61);
        int int80 = byteOrderMark11.get(1);
        int[] intArray90 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark91 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark92 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark93 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark94 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark95 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark96 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray90);
        boolean boolean97 = byteOrderMark11.equals((java.lang.Object) byteOrderMark96);
        java.lang.String str98 = byteOrderMark11.getCharsetName();
        int int99 = byteOrderMark11.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 97 + "'", int80 == 97);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str98, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 3 + "'", int99 == 3);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) '4');
        int int7 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass8 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        boolean boolean34 = byteOrderMark17.equals((java.lang.Object) byteOrderMark31);
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        java.lang.String str41 = byteOrderMark40.getCharsetName();
        java.lang.Object obj42 = null;
        boolean boolean43 = byteOrderMark40.equals(obj42);
        int int44 = byteOrderMark40.length();
        byte[] byteArray45 = byteOrderMark40.getBytes();
        java.lang.Class<?> wildcardClass46 = byteOrderMark40.getClass();
        boolean boolean47 = byteOrderMark31.equals((java.lang.Object) wildcardClass46);
        java.lang.String str48 = byteOrderMark31.getCharsetName();
        java.lang.String str49 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark50.equals(obj51);
        int int53 = byteOrderMark50.length();
        boolean boolean55 = byteOrderMark50.equals((java.lang.Object) 0L);
        int int56 = byteOrderMark50.length();
        int int57 = byteOrderMark50.length();
        int[] intArray64 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        boolean boolean68 = byteOrderMark50.equals((java.lang.Object) intArray64);
        int[] intArray76 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("hi!", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("hi!", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray76);
        int int81 = byteOrderMark80.length();
        boolean boolean82 = byteOrderMark50.equals((java.lang.Object) byteOrderMark80);
        boolean boolean83 = byteOrderMark31.equals((java.lang.Object) byteOrderMark50);
        java.lang.String str84 = byteOrderMark50.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-32BE" + "'", str48, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-32BE" + "'", str49, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str84, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int11 = byteOrderMark0.get(0);
        int int12 = byteOrderMark0.length();
        java.lang.String str13 = byteOrderMark0.toString();
        java.lang.String str14 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray11);
        java.lang.Class<?> wildcardClass19 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) intArray16);
        int int24 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        int int13 = byteOrderMark11.get((int) (byte) 0);
        java.lang.String str14 = byteOrderMark11.toString();
        java.lang.String str15 = byteOrderMark11.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark11.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        java.lang.String str20 = byteOrderMark16.toString();
        java.lang.String str21 = byteOrderMark16.getCharsetName();
        int int23 = byteOrderMark16.get(0);
        int int24 = byteOrderMark16.length();
        int int25 = byteOrderMark16.length();
        boolean boolean26 = byteOrderMark15.equals((java.lang.Object) int25);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16BE" + "'", str21, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        int int15 = byteOrderMark11.length();
        int int17 = byteOrderMark11.get(0);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = byteOrderMark11.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        int int13 = byteOrderMark4.length();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray26);
        boolean boolean36 = byteOrderMark4.equals((java.lang.Object) intArray26);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray33);
        java.lang.String str42 = byteOrderMark41.getCharsetName();
        boolean boolean43 = byteOrderMark21.equals((java.lang.Object) byteOrderMark41);
        java.lang.Class<?> wildcardClass44 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str42, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        int int17 = byteOrderMark15.get(2);
        java.lang.String str18 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass9 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-32BE" + "'", str7, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int13 = byteOrderMark11.get((int) (short) 1);
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        int int16 = byteOrderMark11.length();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = byteOrderMark11.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        int int17 = byteOrderMark15.get(2);
        java.lang.Class<?> wildcardClass18 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) 1L);
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        int int12 = byteOrderMark8.length();
        boolean boolean14 = byteOrderMark8.equals((java.lang.Object) (byte) -1);
        byte[] byteArray15 = byteOrderMark8.getBytes();
        java.lang.String str16 = byteOrderMark8.getCharsetName();
        java.lang.String str17 = byteOrderMark8.getCharsetName();
        java.lang.String str18 = byteOrderMark8.getCharsetName();
        boolean boolean19 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray20 = byteOrderMark4.getBytes();
        java.lang.String str21 = byteOrderMark4.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int23 = byteOrderMark4.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16BE" + "'", str21, "UTF-16BE");
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.String str9 = byteOrderMark7.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark7.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark0.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray21);
        boolean boolean24 = byteOrderMark14.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        java.lang.String str25 = byteOrderMark14.toString();
        int int26 = byteOrderMark14.length();
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        byte[] byteArray35 = byteOrderMark34.getBytes();
        boolean boolean36 = byteOrderMark14.equals((java.lang.Object) byteArray35);
        byte[] byteArray37 = byteOrderMark14.getBytes();
        java.lang.Class<?> wildcardClass38 = byteOrderMark14.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark19.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        java.lang.String str23 = byteOrderMark21.toString();
        java.lang.String str24 = byteOrderMark21.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        int int27 = byteOrderMark26.length();
        int int28 = byteOrderMark26.length();
        boolean boolean29 = byteOrderMark5.equals((java.lang.Object) int28);
        byte[] byteArray30 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 97, 35]");
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int35 = byteOrderMark33.get(0);
        boolean boolean37 = byteOrderMark33.equals((java.lang.Object) (short) 0);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        boolean boolean48 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark0.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray50 = byteOrderMark33.getBytes();
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark33.equals(obj51);
        int[] intArray59 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        java.lang.String str63 = byteOrderMark62.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = org.apache.commons.io.ByteOrderMark.UTF_8;
        byte[] byteArray65 = byteOrderMark64.getBytes();
        boolean boolean66 = byteOrderMark62.equals((java.lang.Object) byteArray65);
        boolean boolean67 = byteOrderMark33.equals((java.lang.Object) byteOrderMark62);
        java.lang.String str68 = byteOrderMark33.getCharsetName();
        int int69 = byteOrderMark33.length();
        // The following exception was thrown during execution in test generation
        try {
            int int71 = byteOrderMark33.get(254);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 254 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 255 + "'", int35 == 255);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str63, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "UTF-16LE" + "'", str68, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.toString();
        int int21 = byteOrderMark19.length();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        byte[] byteArray36 = byteOrderMark35.getBytes();
        int int37 = byteOrderMark35.length();
        java.lang.String str38 = byteOrderMark35.toString();
        byte[] byteArray39 = byteOrderMark35.getBytes();
        java.lang.String str40 = byteOrderMark35.toString();
        byte[] byteArray41 = byteOrderMark35.getBytes();
        boolean boolean42 = byteOrderMark19.equals((java.lang.Object) byteArray41);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str38, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        byte[] byteArray21 = byteOrderMark20.getBytes();
        java.lang.String str22 = byteOrderMark20.getCharsetName();
        java.lang.String str23 = byteOrderMark20.toString();
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str25 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray14 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str16 = byteOrderMark15.toString();
        java.lang.String str17 = byteOrderMark15.toString();
        int int19 = byteOrderMark15.get(2);
        java.lang.String str20 = byteOrderMark15.toString();
        int int21 = byteOrderMark15.length();
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark15);
        java.lang.Class<?> wildcardClass23 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 254 + "'", int19 == 254);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        boolean boolean38 = byteOrderMark18.equals((java.lang.Object) int37);
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        byte[] byteArray53 = byteOrderMark52.getBytes();
        boolean boolean54 = byteOrderMark18.equals((java.lang.Object) byteOrderMark52);
        java.lang.String str55 = byteOrderMark52.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str55, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        byte[] byteArray23 = byteOrderMark22.getBytes();
        int int24 = byteOrderMark22.length();
        java.lang.String str25 = byteOrderMark22.toString();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        byte[] byteArray34 = byteOrderMark33.getBytes();
        boolean boolean35 = byteOrderMark22.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str37 = byteOrderMark36.toString();
        java.lang.String str38 = byteOrderMark36.toString();
        int int40 = byteOrderMark36.get(2);
        boolean boolean42 = byteOrderMark36.equals((java.lang.Object) (byte) 10);
        boolean boolean43 = byteOrderMark22.equals((java.lang.Object) boolean42);
        byte[] byteArray44 = byteOrderMark22.getBytes();
        boolean boolean45 = byteOrderMark0.equals((java.lang.Object) byteOrderMark22);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str37, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str38, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 254 + "'", int40 == 254);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        int int9 = byteOrderMark7.length();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark7.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        boolean boolean16 = byteOrderMark12.equals((java.lang.Object) (short) 0);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int33 = byteOrderMark32.length();
        java.lang.String str34 = byteOrderMark32.toString();
        boolean boolean35 = byteOrderMark12.equals((java.lang.Object) str34);
        int int36 = byteOrderMark12.length();
        boolean boolean37 = byteOrderMark5.equals((java.lang.Object) int36);
        java.lang.String str38 = byteOrderMark5.toString();
        java.lang.Class<?> wildcardClass39 = byteOrderMark5.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str38, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        byte[] byteArray21 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass22 = byteArray21.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj2 = null;
        boolean boolean3 = byteOrderMark1.equals(obj2);
        int int4 = byteOrderMark1.length();
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) 0L);
        int int7 = byteOrderMark1.length();
        int int8 = byteOrderMark1.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        boolean boolean19 = byteOrderMark1.equals((java.lang.Object) intArray15);
        byte[] byteArray20 = byteOrderMark1.getBytes();
        int int21 = byteOrderMark1.length();
        java.lang.String str22 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray24 = byteOrderMark23.getBytes();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        boolean boolean41 = byteOrderMark23.equals((java.lang.Object) intArray34);
        boolean boolean42 = byteOrderMark1.equals((java.lang.Object) intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray34);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = byteOrderMark43.get(254);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 254 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16BE" + "'", str22, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        java.lang.String str26 = byteOrderMark23.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int28 = byteOrderMark23.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-32BE" + "'", str26, "UTF-32BE");
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark30.length();
        java.lang.String str48 = byteOrderMark30.toString();
        byte[] byteArray49 = byteOrderMark30.getBytes();
        int int50 = byteOrderMark30.length();
        byte[] byteArray51 = byteOrderMark30.getBytes();
        java.lang.String str52 = byteOrderMark30.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str52, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        int int21 = byteOrderMark20.length();
        boolean boolean22 = byteOrderMark5.equals((java.lang.Object) byteOrderMark20);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = byteOrderMark20.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.toString();
        java.lang.String str10 = byteOrderMark3.toString();
        java.lang.Class<?> wildcardClass11 = byteOrderMark3.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str9, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str10, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.getCharsetName();
        java.lang.String str10 = byteOrderMark3.getCharsetName();
        java.lang.String str11 = byteOrderMark3.getCharsetName();
        int int12 = byteOrderMark3.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        java.lang.String str21 = byteOrderMark12.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) byteOrderMark33);
        boolean boolean35 = byteOrderMark11.equals((java.lang.Object) boolean34);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        java.lang.String str42 = byteOrderMark41.getCharsetName();
        java.lang.Object obj43 = null;
        boolean boolean44 = byteOrderMark41.equals(obj43);
        byte[] byteArray45 = byteOrderMark41.getBytes();
        byte[] byteArray46 = byteOrderMark41.getBytes();
        byte[] byteArray47 = byteOrderMark41.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int50 = byteOrderMark48.get(0);
        boolean boolean52 = byteOrderMark48.equals((java.lang.Object) (short) 0);
        int[] intArray62 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray62);
        int int69 = byteOrderMark68.length();
        java.lang.String str70 = byteOrderMark68.toString();
        boolean boolean71 = byteOrderMark48.equals((java.lang.Object) str70);
        int int72 = byteOrderMark48.length();
        boolean boolean73 = byteOrderMark41.equals((java.lang.Object) int72);
        java.lang.Class<?> wildcardClass74 = byteOrderMark41.getClass();
        boolean boolean75 = byteOrderMark11.equals((java.lang.Object) wildcardClass74);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 255 + "'", int50 == 255);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 3 + "'", int69 == 3);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str70, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        boolean boolean7 = byteOrderMark4.equals((java.lang.Object) (short) -1);
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        java.lang.String str9 = byteOrderMark4.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        int int27 = byteOrderMark26.length();
        int int28 = byteOrderMark26.length();
        boolean boolean29 = byteOrderMark5.equals((java.lang.Object) int28);
        int int30 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("", intArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass6 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.Class<?> wildcardClass28 = byteOrderMark27.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        java.lang.String str19 = byteOrderMark0.toString();
        java.lang.String str20 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16BE" + "'", str20, "UTF-16BE");
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int int13 = byteOrderMark11.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray15 = byteOrderMark14.getBytes();
        int int16 = byteOrderMark14.length();
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        java.lang.Class<?> wildcardClass18 = byteOrderMark14.getClass();
        boolean boolean19 = byteOrderMark11.equals((java.lang.Object) wildcardClass18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray21 = byteOrderMark20.getBytes();
        java.lang.String str22 = byteOrderMark20.toString();
        boolean boolean23 = byteOrderMark11.equals((java.lang.Object) byteOrderMark20);
        int int24 = byteOrderMark20.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        boolean boolean8 = byteOrderMark4.equals((java.lang.Object) (short) 0);
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int int10 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        int int7 = byteOrderMark0.length();
        int int9 = byteOrderMark0.get((int) (short) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str18 = byteOrderMark11.getCharsetName();
        int int20 = byteOrderMark11.get((int) (byte) 0);
        int int21 = byteOrderMark11.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        int int5 = byteOrderMark0.length();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        java.lang.String str22 = byteOrderMark20.toString();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        int int24 = byteOrderMark0.length();
        java.lang.String str25 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("", intArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        int[] intArray4 = new int[] { 1, 35, 3 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = byteOrderMark5.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 35, 3]");
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.String str7 = byteOrderMark5.getCharsetName();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        java.lang.Class<?> wildcardClass18 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        int int15 = byteOrderMark11.length();
        java.lang.String str16 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) 0L);
        int int18 = byteOrderMark12.length();
        int int19 = byteOrderMark12.length();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) intArray26);
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray38);
        int int43 = byteOrderMark42.length();
        boolean boolean44 = byteOrderMark12.equals((java.lang.Object) byteOrderMark42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int47 = byteOrderMark45.get(0);
        boolean boolean49 = byteOrderMark45.equals((java.lang.Object) (short) 0);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        boolean boolean60 = byteOrderMark45.equals((java.lang.Object) byteOrderMark59);
        boolean boolean61 = byteOrderMark12.equals((java.lang.Object) byteOrderMark45);
        byte[] byteArray62 = byteOrderMark45.getBytes();
        boolean boolean63 = byteOrderMark5.equals((java.lang.Object) byteArray62);
        java.lang.Class<?> wildcardClass64 = byteOrderMark5.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 255 + "'", int47 == 255);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int1 = byteOrderMark0.length();
        int int3 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) 1L);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        int int10 = byteOrderMark6.length();
        java.lang.String str11 = byteOrderMark6.toString();
        byte[] byteArray12 = byteOrderMark6.getBytes();
        byte[] byteArray13 = byteOrderMark6.getBytes();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) byteArray13);
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark0.get(254);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 254 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 254 + "'", int3 == 254);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        byte[] byteArray18 = byteOrderMark15.getBytes();
        java.lang.String str19 = byteOrderMark15.toString();
        byte[] byteArray20 = byteOrderMark15.getBytes();
        java.lang.String str21 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int10 = byteOrderMark4.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        java.lang.Class<?> wildcardClass10 = byteArray9.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        int int8 = byteOrderMark4.length();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        boolean boolean25 = byteOrderMark4.equals((java.lang.Object) intArray18);
        int int26 = byteOrderMark4.length();
        byte[] byteArray27 = byteOrderMark4.getBytes();
        byte[] byteArray28 = byteOrderMark4.getBytes();
        java.lang.String str29 = byteOrderMark4.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int31 = byteOrderMark4.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("", intArray12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        int int9 = byteOrderMark7.length();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark7.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark0.equals(obj7);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        byte[] byteArray21 = byteOrderMark9.getBytes();
        java.lang.String str22 = byteOrderMark9.getCharsetName();
        java.lang.String str23 = byteOrderMark9.getCharsetName();
        java.lang.String str24 = byteOrderMark9.getCharsetName();
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray33);
        java.lang.String str39 = byteOrderMark38.getCharsetName();
        java.lang.String str40 = byteOrderMark38.getCharsetName();
        boolean boolean41 = byteOrderMark9.equals((java.lang.Object) str40);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str39, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int int5 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        int int56 = byteOrderMark47.length();
        int int57 = byteOrderMark47.length();
        java.lang.String str58 = byteOrderMark47.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str58, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-16LE" + "'", str2, "UTF-16LE");
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str15 = byteOrderMark14.toString();
        java.lang.String str16 = byteOrderMark14.toString();
        int int18 = byteOrderMark14.get(2);
        byte[] byteArray19 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int22 = byteOrderMark20.get(0);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark24.equals(obj25);
        int int27 = byteOrderMark24.length();
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) 0L);
        int int30 = byteOrderMark24.length();
        boolean boolean31 = byteOrderMark20.equals((java.lang.Object) int30);
        boolean boolean32 = byteOrderMark14.equals((java.lang.Object) byteOrderMark20);
        byte[] byteArray33 = byteOrderMark20.getBytes();
        java.lang.String str34 = byteOrderMark20.getCharsetName();
        boolean boolean35 = byteOrderMark13.equals((java.lang.Object) byteOrderMark20);
        java.lang.Class<?> wildcardClass36 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 254 + "'", int18 == 254);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 255 + "'", int22 == 255);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.getCharsetName();
        byte[] byteArray19 = byteOrderMark13.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark13.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        java.lang.String str7 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.length();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray32);
        boolean boolean41 = byteOrderMark20.equals((java.lang.Object) intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        int int43 = byteOrderMark42.length();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        java.lang.Class<?> wildcardClass19 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        byte[] byteArray15 = byteOrderMark14.getBytes();
        byte[] byteArray16 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        boolean boolean22 = byteOrderMark17.equals((java.lang.Object) 0L);
        int int23 = byteOrderMark17.length();
        int int24 = byteOrderMark17.length();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) intArray31);
        boolean boolean36 = byteOrderMark14.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray31);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        java.lang.Class<?> wildcardClass23 = byteOrderMark22.getClass();
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark22);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass8 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        int int9 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray9);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        java.lang.String str14 = byteOrderMark10.getCharsetName();
        byte[] byteArray15 = byteOrderMark10.getBytes();
        boolean boolean16 = byteOrderMark4.equals((java.lang.Object) byteArray15);
        byte[] byteArray17 = byteOrderMark4.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        int int15 = byteOrderMark13.length();
        int int16 = byteOrderMark13.length();
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) str17);
        java.lang.String str19 = byteOrderMark0.toString();
        int int20 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int13 = byteOrderMark0.length();
        java.lang.String str14 = byteOrderMark0.getCharsetName();
        byte[] byteArray15 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-2, -1]");
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        int[] intArray5 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj9 = null;
        boolean boolean10 = byteOrderMark8.equals(obj9);
        int int11 = byteOrderMark8.length();
        boolean boolean13 = byteOrderMark8.equals((java.lang.Object) 0L);
        int int14 = byteOrderMark8.length();
        int int15 = byteOrderMark8.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        boolean boolean26 = byteOrderMark8.equals((java.lang.Object) intArray22);
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray34);
        int int39 = byteOrderMark38.length();
        boolean boolean40 = byteOrderMark8.equals((java.lang.Object) byteOrderMark38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int43 = byteOrderMark41.get(0);
        boolean boolean45 = byteOrderMark41.equals((java.lang.Object) (short) 0);
        int[] intArray52 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray52);
        boolean boolean56 = byteOrderMark41.equals((java.lang.Object) byteOrderMark55);
        boolean boolean57 = byteOrderMark8.equals((java.lang.Object) byteOrderMark41);
        byte[] byteArray58 = byteOrderMark41.getBytes();
        java.lang.Object obj59 = null;
        boolean boolean60 = byteOrderMark41.equals(obj59);
        int[] intArray67 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("hi!", intArray67);
        org.apache.commons.io.ByteOrderMark byteOrderMark69 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray67);
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray67);
        java.lang.String str71 = byteOrderMark70.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = org.apache.commons.io.ByteOrderMark.UTF_8;
        byte[] byteArray73 = byteOrderMark72.getBytes();
        boolean boolean74 = byteOrderMark70.equals((java.lang.Object) byteArray73);
        boolean boolean75 = byteOrderMark41.equals((java.lang.Object) byteOrderMark70);
        boolean boolean76 = byteOrderMark7.equals((java.lang.Object) byteOrderMark41);
        java.lang.String str77 = byteOrderMark41.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteOrderMark41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 255 + "'", int43 == 255);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str71, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark72);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UTF-16LE" + "'", str77, "UTF-16LE");
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark0.getBytes();
        java.lang.String str26 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        int int13 = byteOrderMark11.get((int) (byte) 0);
        java.lang.String str14 = byteOrderMark11.toString();
        java.lang.String str15 = byteOrderMark11.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark11.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        int int11 = byteOrderMark7.length();
        int[] intArray15 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        boolean boolean17 = byteOrderMark7.equals((java.lang.Object) byteOrderMark16);
        int int19 = byteOrderMark16.get(1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[239, 10]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray19 = byteOrderMark18.getBytes();
        int int20 = byteOrderMark18.length();
        java.lang.String str21 = byteOrderMark18.getCharsetName();
        java.lang.String str22 = byteOrderMark18.getCharsetName();
        java.lang.String str23 = byteOrderMark18.getCharsetName();
        int int24 = byteOrderMark18.length();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) int24);
        int int26 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark0.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        boolean boolean20 = byteOrderMark2.equals((java.lang.Object) intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray13);
        java.lang.String str23 = byteOrderMark22.toString();
        int int24 = byteOrderMark22.length();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        byte[] byteArray17 = byteOrderMark15.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark18.equals(obj19);
        int int21 = byteOrderMark18.length();
        boolean boolean23 = byteOrderMark18.equals((java.lang.Object) 0L);
        int int24 = byteOrderMark18.length();
        int int25 = byteOrderMark18.length();
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        boolean boolean36 = byteOrderMark18.equals((java.lang.Object) intArray32);
        boolean boolean37 = byteOrderMark15.equals((java.lang.Object) intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray32);
        java.lang.Class<?> wildcardClass42 = intArray32.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = byteOrderMark0.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int int18 = byteOrderMark17.length();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark17.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray11 = byteOrderMark10.getBytes();
        int int12 = byteOrderMark10.length();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        java.lang.String str25 = byteOrderMark24.toString();
        int int26 = byteOrderMark24.length();
        boolean boolean27 = byteOrderMark10.equals((java.lang.Object) int26);
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) int26);
        java.lang.String str29 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark0.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) 1.0d);
        int int4 = byteOrderMark0.length();
        int int6 = byteOrderMark0.get(1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 254 + "'", int6 == 254);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        int int18 = byteOrderMark17.length();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark17.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        boolean boolean20 = byteOrderMark2.equals((java.lang.Object) intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.Object obj30 = null;
        boolean boolean31 = byteOrderMark28.equals(obj30);
        byte[] byteArray32 = byteOrderMark28.getBytes();
        byte[] byteArray33 = byteOrderMark28.getBytes();
        int[] intArray38 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        boolean boolean40 = byteOrderMark28.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        boolean boolean41 = byteOrderMark22.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str42 = byteOrderMark28.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) wildcardClass40);
        int int43 = byteOrderMark0.get(0);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = byteOrderMark0.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        int int9 = byteOrderMark4.length();
        byte[] byteArray10 = byteOrderMark4.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean13 = byteOrderMark11.equals((java.lang.Object) (-1L));
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int17 = byteOrderMark15.get(0);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        boolean boolean20 = byteOrderMark11.equals((java.lang.Object) byteOrderMark15);
        byte[] byteArray21 = byteOrderMark15.getBytes();
        int int22 = byteOrderMark15.length();
        boolean boolean23 = byteOrderMark4.equals((java.lang.Object) int22);
        int int24 = byteOrderMark4.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 255 + "'", int17 == 255);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        byte[] byteArray5 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int8 = byteOrderMark6.get(0);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 0L);
        int int16 = byteOrderMark10.length();
        boolean boolean17 = byteOrderMark6.equals((java.lang.Object) int16);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark6);
        byte[] byteArray19 = byteOrderMark0.getBytes();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) str40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean44 = byteOrderMark42.equals((java.lang.Object) 1L);
        java.lang.String str45 = byteOrderMark42.getCharsetName();
        int int46 = byteOrderMark42.length();
        boolean boolean48 = byteOrderMark42.equals((java.lang.Object) (byte) -1);
        byte[] byteArray49 = byteOrderMark42.getBytes();
        java.lang.String str50 = byteOrderMark42.getCharsetName();
        byte[] byteArray51 = byteOrderMark42.getBytes();
        int int53 = byteOrderMark42.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray55 = byteOrderMark54.getBytes();
        java.lang.String str56 = byteOrderMark54.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int59 = byteOrderMark57.get((int) (byte) 0);
        byte[] byteArray60 = byteOrderMark57.getBytes();
        byte[] byteArray61 = byteOrderMark57.getBytes();
        boolean boolean62 = byteOrderMark54.equals((java.lang.Object) byteOrderMark57);
        boolean boolean63 = byteOrderMark42.equals((java.lang.Object) byteOrderMark54);
        java.lang.String str64 = byteOrderMark54.getCharsetName();
        boolean boolean65 = byteOrderMark0.equals((java.lang.Object) str64);
        java.lang.Class<?> wildcardClass66 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 255 + "'", int8 == 255);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteOrderMark42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-16LE" + "'", str45, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16LE" + "'", str50, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 255 + "'", int53 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "UTF-32BE" + "'", str56, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 239 + "'", int59 == 239);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UTF-32BE" + "'", str64, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        java.lang.String str14 = byteOrderMark0.toString();
        java.lang.String str15 = byteOrderMark0.toString();
        java.lang.String str16 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str16, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean20 = byteOrderMark18.equals((java.lang.Object) 1L);
        java.lang.String str21 = byteOrderMark18.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean23 = byteOrderMark18.equals((java.lang.Object) byteOrderMark22);
        byte[] byteArray24 = byteOrderMark22.getBytes();
        boolean boolean25 = byteOrderMark15.equals((java.lang.Object) byteArray24);
        java.lang.String str26 = byteOrderMark15.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int28 = byteOrderMark15.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int int5 = byteOrderMark0.length();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray8 = byteOrderMark7.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean11 = byteOrderMark9.equals((java.lang.Object) 1L);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean14 = byteOrderMark9.equals((java.lang.Object) byteOrderMark13);
        boolean boolean15 = byteOrderMark7.equals((java.lang.Object) byteOrderMark9);
        java.lang.String str16 = byteOrderMark9.getCharsetName();
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) str16);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj20 = null;
        boolean boolean21 = byteOrderMark19.equals(obj20);
        byte[] byteArray22 = byteOrderMark19.getBytes();
        java.lang.String str23 = byteOrderMark19.toString();
        byte[] byteArray24 = byteOrderMark19.getBytes();
        boolean boolean25 = byteOrderMark17.equals((java.lang.Object) byteOrderMark19);
        java.lang.String str26 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark33.length();
        java.lang.Class<?> wildcardClass48 = byteOrderMark33.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark0.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        java.lang.String str11 = byteOrderMark7.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) '\ufeff');
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray23);
        boolean boolean32 = byteOrderMark4.equals((java.lang.Object) intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray23);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = byteOrderMark33.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        int int20 = byteOrderMark17.length();
        byte[] byteArray21 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark0.equals(obj7);
        java.lang.Class<?> wildcardClass9 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        boolean boolean34 = byteOrderMark17.equals((java.lang.Object) byteOrderMark31);
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        java.lang.String str41 = byteOrderMark40.getCharsetName();
        java.lang.Object obj42 = null;
        boolean boolean43 = byteOrderMark40.equals(obj42);
        int int44 = byteOrderMark40.length();
        byte[] byteArray45 = byteOrderMark40.getBytes();
        java.lang.Class<?> wildcardClass46 = byteOrderMark40.getClass();
        boolean boolean47 = byteOrderMark31.equals((java.lang.Object) wildcardClass46);
        java.lang.String str48 = byteOrderMark31.getCharsetName();
        java.lang.String str49 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark50.equals(obj51);
        int int53 = byteOrderMark50.length();
        boolean boolean55 = byteOrderMark50.equals((java.lang.Object) 0L);
        int int56 = byteOrderMark50.length();
        int int57 = byteOrderMark50.length();
        int[] intArray64 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        boolean boolean68 = byteOrderMark50.equals((java.lang.Object) intArray64);
        int[] intArray76 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("hi!", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("hi!", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray76);
        int int81 = byteOrderMark80.length();
        boolean boolean82 = byteOrderMark50.equals((java.lang.Object) byteOrderMark80);
        boolean boolean83 = byteOrderMark31.equals((java.lang.Object) byteOrderMark50);
        byte[] byteArray84 = byteOrderMark50.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-32BE" + "'", str48, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-32BE" + "'", str49, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[-2, -1]");
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        int int7 = byteOrderMark4.length();
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) 0L);
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) int10);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str27 = byteOrderMark26.toString();
        java.lang.String str28 = byteOrderMark26.toString();
        int int30 = byteOrderMark26.get(2);
        byte[] byteArray31 = byteOrderMark26.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int34 = byteOrderMark32.get(0);
        java.lang.String str35 = byteOrderMark32.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj37 = null;
        boolean boolean38 = byteOrderMark36.equals(obj37);
        int int39 = byteOrderMark36.length();
        boolean boolean41 = byteOrderMark36.equals((java.lang.Object) 0L);
        int int42 = byteOrderMark36.length();
        boolean boolean43 = byteOrderMark32.equals((java.lang.Object) int42);
        boolean boolean44 = byteOrderMark26.equals((java.lang.Object) byteOrderMark32);
        byte[] byteArray45 = byteOrderMark32.getBytes();
        java.lang.String str46 = byteOrderMark32.getCharsetName();
        boolean boolean47 = byteOrderMark25.equals((java.lang.Object) byteOrderMark32);
        boolean boolean48 = byteOrderMark0.equals((java.lang.Object) byteOrderMark25);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str50 = byteOrderMark49.toString();
        boolean boolean52 = byteOrderMark49.equals((java.lang.Object) ' ');
        boolean boolean54 = byteOrderMark49.equals((java.lang.Object) 3);
        java.lang.String str55 = byteOrderMark49.toString();
        boolean boolean56 = byteOrderMark0.equals((java.lang.Object) byteOrderMark49);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str27, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 254 + "'", int30 == 254);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 255 + "'", int34 == 255);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-16LE" + "'", str35, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-16LE" + "'", str46, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteOrderMark49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str50, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str55, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int5 = byteOrderMark3.get(0);
        java.lang.String str6 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj8 = null;
        boolean boolean9 = byteOrderMark7.equals(obj8);
        int int10 = byteOrderMark7.length();
        boolean boolean12 = byteOrderMark7.equals((java.lang.Object) 0L);
        int int13 = byteOrderMark7.length();
        boolean boolean14 = byteOrderMark3.equals((java.lang.Object) int13);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) boolean14);
        byte[] byteArray16 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 255 + "'", int5 == 255);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-17, -69, -65]");
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.getCharsetName();
        byte[] byteArray10 = byteOrderMark3.getBytes();
        java.lang.String str11 = byteOrderMark3.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str11, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str18 = byteOrderMark11.getCharsetName();
        int int19 = byteOrderMark11.length();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        java.lang.String str41 = byteOrderMark39.toString();
        java.lang.String str42 = byteOrderMark39.getCharsetName();
        boolean boolean43 = byteOrderMark11.equals((java.lang.Object) byteOrderMark39);
        java.lang.String str44 = byteOrderMark39.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str41, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str44, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        boolean boolean10 = byteOrderMark3.equals((java.lang.Object) '\ufeff');
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray22);
        boolean boolean31 = byteOrderMark3.equals((java.lang.Object) intArray22);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = byteOrderMark3.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str24, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass8 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        int int14 = byteOrderMark13.length();
        java.lang.String str15 = byteOrderMark13.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        java.lang.Class<?> wildcardClass18 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass5 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        int int21 = byteOrderMark15.length();
        java.lang.String str22 = byteOrderMark15.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) "hi!");
        int int34 = byteOrderMark15.length();
        byte[] byteArray35 = byteOrderMark15.getBytes();
        java.lang.Class<?> wildcardClass36 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        int[] intArray3 = new int[] { (byte) -1 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray3);
        byte[] byteArray6 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1]");
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        boolean boolean10 = byteOrderMark3.equals((java.lang.Object) '\ufeff');
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray22);
        boolean boolean31 = byteOrderMark3.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int34 = byteOrderMark32.get(0);
        boolean boolean36 = byteOrderMark32.equals((java.lang.Object) (short) 0);
        java.lang.String str37 = byteOrderMark32.getCharsetName();
        java.lang.Class<?> wildcardClass38 = byteOrderMark32.getClass();
        boolean boolean39 = byteOrderMark3.equals((java.lang.Object) byteOrderMark32);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteOrderMark32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 255 + "'", int34 == 255);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.String str7 = byteOrderMark0.toString();
        int int9 = byteOrderMark0.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-32BE" + "'", str6, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        int[] intArray8 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str15 = byteOrderMark14.toString();
        java.lang.String str16 = byteOrderMark14.toString();
        int int18 = byteOrderMark14.get(2);
        java.lang.String str19 = byteOrderMark14.toString();
        java.lang.String str20 = byteOrderMark14.toString();
        int int21 = byteOrderMark14.length();
        java.lang.Class<?> wildcardClass22 = byteOrderMark14.getClass();
        boolean boolean23 = byteOrderMark13.equals((java.lang.Object) byteOrderMark14);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 254 + "'", int18 == 254);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str27 = byteOrderMark13.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int29 = byteOrderMark13.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-32BE" + "'", str27, "UTF-32BE");
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray23);
        java.lang.String str31 = byteOrderMark30.getCharsetName();
        boolean boolean32 = byteOrderMark4.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj34 = null;
        boolean boolean35 = byteOrderMark33.equals(obj34);
        int int36 = byteOrderMark33.length();
        boolean boolean38 = byteOrderMark33.equals((java.lang.Object) 0L);
        int int39 = byteOrderMark33.length();
        int int40 = byteOrderMark33.length();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        boolean boolean51 = byteOrderMark33.equals((java.lang.Object) intArray47);
        int[] intArray59 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray59);
        int int64 = byteOrderMark63.length();
        boolean boolean65 = byteOrderMark33.equals((java.lang.Object) byteOrderMark63);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int68 = byteOrderMark66.get(0);
        boolean boolean70 = byteOrderMark66.equals((java.lang.Object) (short) 0);
        int[] intArray77 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("hi!", intArray77);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray77);
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("hi!", intArray77);
        boolean boolean81 = byteOrderMark66.equals((java.lang.Object) byteOrderMark80);
        boolean boolean82 = byteOrderMark33.equals((java.lang.Object) byteOrderMark66);
        boolean boolean83 = byteOrderMark4.equals((java.lang.Object) byteOrderMark66);
        int int84 = byteOrderMark4.length();
        // The following exception was thrown during execution in test generation
        try {
            int int86 = byteOrderMark4.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str31, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(byteOrderMark66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 255 + "'", int68 == 255);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = byteOrderMark0.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = byteOrderMark7.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        int int9 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int1 = byteOrderMark0.length();
        int int3 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 254 + "'", int3 == 254);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass6 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        java.lang.Class<?> wildcardClass22 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        int int10 = byteOrderMark9.length();
        java.lang.Class<?> wildcardClass11 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.String str7 = byteOrderMark5.toString();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]" + "'", str7, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]");
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray10 = byteOrderMark8.getBytes();
        int int11 = byteOrderMark8.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        java.lang.String str21 = byteOrderMark12.getCharsetName();
        java.lang.String str22 = byteOrderMark12.getCharsetName();
        boolean boolean23 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) boolean23);
        java.lang.String str25 = byteOrderMark0.toString();
        java.lang.String str26 = byteOrderMark0.getCharsetName();
        int int28 = byteOrderMark0.get((int) (short) 1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str25, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 254 + "'", int28 == 254);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = byteOrderMark17.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.length();
        int int9 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int int19 = byteOrderMark17.get(2);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        java.lang.String str21 = byteOrderMark12.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) byteOrderMark33);
        boolean boolean35 = byteOrderMark11.equals((java.lang.Object) boolean34);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = byteOrderMark11.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) (-1L));
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        boolean boolean16 = byteOrderMark12.equals((java.lang.Object) (short) 0);
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        boolean boolean27 = byteOrderMark12.equals((java.lang.Object) byteOrderMark26);
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        int int29 = byteOrderMark12.length();
        int int30 = byteOrderMark12.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark19.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        boolean boolean20 = byteOrderMark2.equals((java.lang.Object) intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.Object obj30 = null;
        boolean boolean31 = byteOrderMark28.equals(obj30);
        byte[] byteArray32 = byteOrderMark28.getBytes();
        byte[] byteArray33 = byteOrderMark28.getBytes();
        int[] intArray38 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        boolean boolean40 = byteOrderMark28.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        boolean boolean41 = byteOrderMark22.equals((java.lang.Object) byteOrderMark28);
        int int42 = byteOrderMark22.length();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int14 = byteOrderMark0.get((int) (byte) 0);
        int int16 = byteOrderMark0.get((int) (short) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 254 + "'", int14 == 254);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 254 + "'", int16 == 254);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        boolean boolean64 = byteOrderMark47.equals((java.lang.Object) byteOrderMark61);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        java.lang.Object obj72 = null;
        boolean boolean73 = byteOrderMark70.equals(obj72);
        int int74 = byteOrderMark70.length();
        byte[] byteArray75 = byteOrderMark70.getBytes();
        java.lang.Class<?> wildcardClass76 = byteOrderMark70.getClass();
        boolean boolean77 = byteOrderMark61.equals((java.lang.Object) wildcardClass76);
        boolean boolean78 = byteOrderMark11.equals((java.lang.Object) byteOrderMark61);
        int int80 = byteOrderMark11.get(1);
        int[] intArray90 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark91 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark92 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark93 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark94 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark95 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark96 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray90);
        boolean boolean97 = byteOrderMark11.equals((java.lang.Object) byteOrderMark96);
        byte[] byteArray98 = byteOrderMark11.getBytes();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 97 + "'", int80 == 97);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(byteArray98);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray98), "[10, 97, 35]");
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        int int9 = byteOrderMark0.length();
        java.lang.String str10 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass11 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str10, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int int5 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass6 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.Class<?> wildcardClass30 = byteOrderMark28.getClass();
        boolean boolean31 = byteOrderMark2.equals((java.lang.Object) wildcardClass30);
        int int32 = byteOrderMark2.length();
        int int33 = byteOrderMark2.length();
        java.lang.String str34 = byteOrderMark2.toString();
        byte[] byteArray35 = byteOrderMark2.getBytes();
        boolean boolean36 = byteOrderMark0.equals((java.lang.Object) byteOrderMark2);
        int int37 = byteOrderMark0.length();
        byte[] byteArray38 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16LE" + "'", str29, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str34, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, -2]");
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        int int13 = byteOrderMark11.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray29);
        java.lang.String str36 = byteOrderMark35.toString();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray47);
        java.lang.String str55 = byteOrderMark54.getCharsetName();
        int int56 = byteOrderMark54.length();
        boolean boolean57 = byteOrderMark35.equals((java.lang.Object) byteOrderMark54);
        java.lang.String str58 = byteOrderMark35.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str36, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str55, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str58, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        int int9 = byteOrderMark0.length();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        byte[] byteArray11 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) 0L);
        int int18 = byteOrderMark12.length();
        int int19 = byteOrderMark12.length();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) intArray26);
        java.lang.String str31 = byteOrderMark12.toString();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) str31);
        java.lang.String str33 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-32BE" + "'", str10, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        byte[] byteArray26 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        int int9 = byteOrderMark4.length();
        byte[] byteArray10 = byteOrderMark4.getBytes();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray21);
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.String str30 = byteOrderMark28.getCharsetName();
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        boolean boolean47 = byteOrderMark28.equals((java.lang.Object) "hi!");
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int49 = byteOrderMark48.length();
        int int51 = byteOrderMark48.get((int) (short) 0);
        boolean boolean52 = byteOrderMark28.equals((java.lang.Object) byteOrderMark48);
        boolean boolean53 = byteOrderMark4.equals((java.lang.Object) byteOrderMark48);
        int int55 = byteOrderMark48.get(1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str29, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteOrderMark48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 254 + "'", int51 == 254);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 255 + "'", int55 == 255);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray10 = byteOrderMark4.getBytes();
        int int11 = byteOrderMark4.length();
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        java.lang.String str8 = byteOrderMark4.toString();
        int int9 = byteOrderMark4.length();
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        java.lang.String str13 = byteOrderMark4.getCharsetName();
        java.lang.String str14 = byteOrderMark4.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16BE" + "'", str13, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        int[] intArray6 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray6);
        java.lang.Class<?> wildcardClass10 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0, 254]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        int int20 = byteOrderMark19.length();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int int5 = byteOrderMark0.length();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        java.lang.String str5 = byteOrderMark0.toString();
        int int6 = byteOrderMark0.length();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark0.equals(obj7);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray21);
        boolean boolean24 = byteOrderMark14.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        java.lang.String str25 = byteOrderMark14.toString();
        int int27 = byteOrderMark14.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray14);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = byteOrderMark25.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        int int21 = byteOrderMark19.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = byteOrderMark0.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str16 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        byte[] byteArray21 = byteOrderMark17.getBytes();
        java.lang.String str22 = byteOrderMark17.toString();
        java.lang.String str23 = byteOrderMark17.getCharsetName();
        java.lang.String str24 = byteOrderMark17.getCharsetName();
        java.lang.String str25 = byteOrderMark17.getCharsetName();
        boolean boolean26 = byteOrderMark0.equals((java.lang.Object) byteOrderMark17);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = byteOrderMark0.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16BE" + "'", str23, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16BE" + "'", str24, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16BE" + "'", str25, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        java.lang.String str19 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        byte[] byteArray11 = byteOrderMark7.getBytes();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        java.lang.String str14 = byteOrderMark10.getCharsetName();
        byte[] byteArray15 = byteOrderMark10.getBytes();
        boolean boolean16 = byteOrderMark4.equals((java.lang.Object) byteArray15);
        java.lang.Class<?> wildcardClass17 = byteArray15.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        int int27 = byteOrderMark26.length();
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) int27);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str27 = byteOrderMark26.getCharsetName();
        java.lang.Class<?> wildcardClass28 = byteOrderMark26.getClass();
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) wildcardClass28);
        java.lang.Class<?> wildcardClass30 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray9);
        java.lang.Class<?> wildcardClass16 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark30.length();
        java.lang.String str48 = byteOrderMark30.toString();
        int int49 = byteOrderMark30.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        int int14 = byteOrderMark13.length();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark13.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj14 = null;
        boolean boolean15 = byteOrderMark13.equals(obj14);
        int int16 = byteOrderMark13.length();
        boolean boolean18 = byteOrderMark13.equals((java.lang.Object) 0L);
        int int19 = byteOrderMark13.length();
        int int20 = byteOrderMark13.length();
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        boolean boolean31 = byteOrderMark13.equals((java.lang.Object) intArray27);
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray39);
        int int44 = byteOrderMark43.length();
        boolean boolean45 = byteOrderMark13.equals((java.lang.Object) byteOrderMark43);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean48 = byteOrderMark46.equals((java.lang.Object) 1L);
        java.lang.String str49 = byteOrderMark46.getCharsetName();
        int int50 = byteOrderMark46.length();
        boolean boolean52 = byteOrderMark46.equals((java.lang.Object) (byte) -1);
        byte[] byteArray53 = byteOrderMark46.getBytes();
        java.lang.String str54 = byteOrderMark46.getCharsetName();
        java.lang.String str55 = byteOrderMark46.getCharsetName();
        java.lang.String str56 = byteOrderMark46.toString();
        int int57 = byteOrderMark46.length();
        int int58 = byteOrderMark46.length();
        boolean boolean59 = byteOrderMark43.equals((java.lang.Object) byteOrderMark46);
        int int60 = byteOrderMark43.length();
        java.lang.String str61 = byteOrderMark43.toString();
        java.lang.String str62 = byteOrderMark43.toString();
        boolean boolean63 = byteOrderMark4.equals((java.lang.Object) byteOrderMark43);
        java.lang.String str64 = byteOrderMark4.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteOrderMark46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-16LE" + "'", str49, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "UTF-16LE" + "'", str55, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str56, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str61, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str62, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UTF-16BE" + "'", str64, "UTF-16BE");
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        int int14 = byteOrderMark13.length();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        java.lang.String str16 = byteOrderMark13.toString();
        java.lang.Class<?> wildcardClass17 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray17);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.toString();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.String str8 = byteOrderMark0.toString();
        int int9 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark0.getCharsetName();
        byte[] byteArray31 = byteOrderMark0.getBytes();
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        byte[] byteArray46 = byteOrderMark45.getBytes();
        int int47 = byteOrderMark45.length();
        java.lang.String str48 = byteOrderMark45.toString();
        int[] intArray54 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray54);
        byte[] byteArray57 = byteOrderMark56.getBytes();
        boolean boolean58 = byteOrderMark45.equals((java.lang.Object) byteOrderMark56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str60 = byteOrderMark59.toString();
        java.lang.String str61 = byteOrderMark59.toString();
        int int63 = byteOrderMark59.get(2);
        boolean boolean65 = byteOrderMark59.equals((java.lang.Object) (byte) 10);
        boolean boolean66 = byteOrderMark45.equals((java.lang.Object) boolean65);
        boolean boolean67 = byteOrderMark0.equals((java.lang.Object) boolean66);
        java.lang.String str68 = byteOrderMark0.toString();
        int[] intArray79 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("hi!", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark81 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark82 = new org.apache.commons.io.ByteOrderMark("hi!", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark83 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark84 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark85 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark86 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray79);
        java.lang.String str87 = byteOrderMark86.getCharsetName();
        int int88 = byteOrderMark86.length();
        int int89 = byteOrderMark86.length();
        boolean boolean90 = byteOrderMark0.equals((java.lang.Object) byteOrderMark86);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrderMark59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str60, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str61, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 254 + "'", int63 == 254);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str68, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str87, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 3 + "'", int88 == 3);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 3 + "'", int89 == 3);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int22 = byteOrderMark21.length();
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        java.lang.Class<?> wildcardClass24 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        byte[] byteArray6 = byteOrderMark0.getBytes();
        int int7 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        int int20 = byteOrderMark19.length();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        byte[] byteArray20 = byteOrderMark17.getBytes();
        java.lang.String str21 = byteOrderMark17.toString();
        int int23 = byteOrderMark17.get((int) (byte) 0);
        boolean boolean24 = byteOrderMark15.equals((java.lang.Object) byteOrderMark17);
        java.lang.String str25 = byteOrderMark15.toString();
        java.lang.String str26 = byteOrderMark15.toString();
        int int27 = byteOrderMark15.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int30 = byteOrderMark28.get((int) (byte) 0);
        byte[] byteArray31 = byteOrderMark28.getBytes();
        boolean boolean32 = byteOrderMark15.equals((java.lang.Object) byteOrderMark28);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = byteOrderMark28.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 239 + "'", int30 == 239);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        boolean boolean7 = byteOrderMark4.equals((java.lang.Object) (short) -1);
        java.lang.Class<?> wildcardClass8 = byteOrderMark4.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        int int15 = byteOrderMark14.length();
        boolean boolean16 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray17 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = byteOrderMark0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str25 = byteOrderMark23.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean28 = byteOrderMark26.equals((java.lang.Object) 1L);
        java.lang.String str29 = byteOrderMark26.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean31 = byteOrderMark26.equals((java.lang.Object) byteOrderMark30);
        byte[] byteArray32 = byteOrderMark30.getBytes();
        int int33 = byteOrderMark30.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean36 = byteOrderMark34.equals((java.lang.Object) 1L);
        java.lang.String str37 = byteOrderMark34.getCharsetName();
        int int38 = byteOrderMark34.length();
        boolean boolean40 = byteOrderMark34.equals((java.lang.Object) (byte) -1);
        byte[] byteArray41 = byteOrderMark34.getBytes();
        java.lang.String str42 = byteOrderMark34.getCharsetName();
        java.lang.String str43 = byteOrderMark34.getCharsetName();
        java.lang.String str44 = byteOrderMark34.getCharsetName();
        boolean boolean45 = byteOrderMark30.equals((java.lang.Object) byteOrderMark34);
        boolean boolean46 = byteOrderMark23.equals((java.lang.Object) boolean45);
        java.lang.String str47 = byteOrderMark23.getCharsetName();
        int int48 = byteOrderMark23.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16LE" + "'", str29, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16LE" + "'", str43, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-16LE" + "'", str44, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str47, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int int16 = byteOrderMark14.length();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = byteOrderMark14.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        java.lang.String str9 = byteOrderMark4.getCharsetName();
        boolean boolean10 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int11 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        int[] intArray5 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray5);
        java.lang.String str10 = byteOrderMark9.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = byteOrderMark9.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[255]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]" + "'", str10, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]");
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        int int18 = byteOrderMark17.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        java.lang.String str25 = byteOrderMark24.getCharsetName();
        java.lang.Object obj26 = null;
        boolean boolean27 = byteOrderMark24.equals(obj26);
        boolean boolean28 = byteOrderMark17.equals(obj26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) (-1L));
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        java.lang.String str33 = byteOrderMark29.getCharsetName();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) byteOrderMark29);
        byte[] byteArray36 = byteOrderMark29.getBytes();
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) byteOrderMark29);
        byte[] byteArray38 = byteOrderMark29.getBytes();
        java.lang.String str39 = byteOrderMark29.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-16LE" + "'", str39, "UTF-16LE");
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        java.lang.String str21 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray19 = byteOrderMark18.getBytes();
        int int20 = byteOrderMark18.length();
        int int21 = byteOrderMark18.length();
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray33);
        boolean boolean42 = byteOrderMark18.equals((java.lang.Object) byteOrderMark41);
        boolean boolean43 = byteOrderMark17.equals((java.lang.Object) boolean42);
        java.lang.String str44 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str44, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        int int25 = byteOrderMark21.get((int) (short) 0);
        java.lang.String str26 = byteOrderMark21.toString();
        byte[] byteArray27 = byteOrderMark21.getBytes();
        int int28 = byteOrderMark21.length();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = byteOrderMark21.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-32BE" + "'", str14, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-32BE" + "'", str15, "UTF-32BE");
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        int int3 = byteOrderMark0.length();
        int int4 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int9 = byteOrderMark8.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark8.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) wildcardClass10);
        int int12 = byteOrderMark0.length();
        java.lang.String str13 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int16 = byteOrderMark14.get(0);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        java.lang.String str27 = byteOrderMark23.getCharsetName();
        int int28 = byteOrderMark23.length();
        int int29 = byteOrderMark23.length();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str31 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 255 + "'", int16 == 255);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16BE" + "'", str27, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str31, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        boolean boolean38 = byteOrderMark18.equals((java.lang.Object) int37);
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        byte[] byteArray53 = byteOrderMark52.getBytes();
        boolean boolean54 = byteOrderMark18.equals((java.lang.Object) byteOrderMark52);
        int int55 = byteOrderMark52.length();
        int[] intArray62 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray62);
        java.lang.String str66 = byteOrderMark65.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = org.apache.commons.io.ByteOrderMark.UTF_8;
        byte[] byteArray68 = byteOrderMark67.getBytes();
        boolean boolean69 = byteOrderMark65.equals((java.lang.Object) byteArray68);
        boolean boolean70 = byteOrderMark52.equals((java.lang.Object) byteOrderMark65);
        java.lang.Class<?> wildcardClass71 = byteOrderMark52.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str66, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark67);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        int int17 = byteOrderMark16.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark23.equals(obj25);
        boolean boolean27 = byteOrderMark16.equals(obj25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean30 = byteOrderMark28.equals((java.lang.Object) (-1L));
        java.lang.String str31 = byteOrderMark28.getCharsetName();
        java.lang.String str32 = byteOrderMark28.getCharsetName();
        java.lang.String str33 = byteOrderMark28.getCharsetName();
        boolean boolean34 = byteOrderMark16.equals((java.lang.Object) byteOrderMark28);
        boolean boolean35 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        int int37 = byteOrderMark0.get(1);
        int int38 = byteOrderMark0.length();
        java.lang.String str39 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 254 + "'", int37 == 254);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str39, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        int int21 = byteOrderMark15.length();
        java.lang.String str22 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass23 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int int19 = byteOrderMark0.length();
        int int20 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("", intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) wildcardClass40);
        java.lang.String str42 = byteOrderMark0.getCharsetName();
        java.lang.String str43 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int45 = byteOrderMark0.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-32BE" + "'", str42, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-32BE" + "'", str43, "UTF-32BE");
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        int int21 = byteOrderMark20.length();
        boolean boolean22 = byteOrderMark5.equals((java.lang.Object) byteOrderMark20);
        int int24 = byteOrderMark20.get(1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 97 + "'", int24 == 97);
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        java.lang.Class<?> wildcardClass26 = byteArray25.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        int int56 = byteOrderMark47.length();
        java.lang.String str57 = byteOrderMark47.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int59 = byteOrderMark47.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-16LE" + "'", str57, "UTF-16LE");
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) 1L);
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        int int12 = byteOrderMark8.length();
        boolean boolean14 = byteOrderMark8.equals((java.lang.Object) (byte) -1);
        byte[] byteArray15 = byteOrderMark8.getBytes();
        java.lang.String str16 = byteOrderMark8.getCharsetName();
        java.lang.String str17 = byteOrderMark8.getCharsetName();
        java.lang.String str18 = byteOrderMark8.getCharsetName();
        boolean boolean19 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray20 = byteOrderMark4.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark4.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark11.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int32 = byteOrderMark11.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int int13 = byteOrderMark0.get((int) (byte) 1);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray19);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        java.lang.String str23 = byteOrderMark0.toString();
        int[] intArray28 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray28);
        java.lang.Class<?> wildcardClass30 = byteOrderMark29.getClass();
        boolean boolean31 = byteOrderMark0.equals((java.lang.Object) wildcardClass30);
        java.lang.Class<?> wildcardClass32 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 254 + "'", int13 == 254);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        int int8 = byteOrderMark0.length();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 0L);
        int int16 = byteOrderMark10.length();
        int int17 = byteOrderMark10.length();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        boolean boolean28 = byteOrderMark10.equals((java.lang.Object) intArray24);
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray36);
        int int41 = byteOrderMark40.length();
        boolean boolean42 = byteOrderMark10.equals((java.lang.Object) byteOrderMark40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int45 = byteOrderMark43.get(0);
        boolean boolean47 = byteOrderMark43.equals((java.lang.Object) (short) 0);
        int[] intArray54 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        boolean boolean58 = byteOrderMark43.equals((java.lang.Object) byteOrderMark57);
        boolean boolean59 = byteOrderMark10.equals((java.lang.Object) byteOrderMark43);
        byte[] byteArray60 = byteOrderMark43.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int66 = byteOrderMark64.get((int) (byte) 0);
        byte[] byteArray67 = byteOrderMark64.getBytes();
        byte[] byteArray68 = byteOrderMark64.getBytes();
        boolean boolean69 = byteOrderMark61.equals((java.lang.Object) byteOrderMark64);
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int72 = byteOrderMark70.get(0);
        java.lang.String str73 = byteOrderMark70.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj75 = null;
        boolean boolean76 = byteOrderMark74.equals(obj75);
        int int77 = byteOrderMark74.length();
        boolean boolean79 = byteOrderMark74.equals((java.lang.Object) 0L);
        int int80 = byteOrderMark74.length();
        boolean boolean81 = byteOrderMark70.equals((java.lang.Object) int80);
        int int83 = byteOrderMark70.get(0);
        boolean boolean84 = byteOrderMark61.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark85 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean87 = byteOrderMark85.equals((java.lang.Object) (-1L));
        java.lang.String str88 = byteOrderMark85.toString();
        byte[] byteArray89 = byteOrderMark85.getBytes();
        java.lang.Class<?> wildcardClass90 = byteArray89.getClass();
        boolean boolean91 = byteOrderMark61.equals((java.lang.Object) wildcardClass90);
        boolean boolean92 = byteOrderMark43.equals((java.lang.Object) wildcardClass90);
        boolean boolean93 = byteOrderMark0.equals((java.lang.Object) wildcardClass90);
        java.lang.Class<?> wildcardClass94 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteOrderMark43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 255 + "'", int45 == 255);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 239 + "'", int66 == 239);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(byteOrderMark70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 255 + "'", int72 == 255);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "UTF-16LE" + "'", str73, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 255 + "'", int83 == 255);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(byteOrderMark85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str88, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        int int5 = byteOrderMark0.length();
        java.lang.String str6 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int int10 = byteOrderMark0.length();
        byte[] byteArray11 = byteOrderMark0.getBytes();
        int int13 = byteOrderMark0.get((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = byteOrderMark0.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 255 + "'", int13 == 255);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int24 = byteOrderMark22.get((int) (byte) 0);
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray34);
        int int41 = byteOrderMark40.length();
        boolean boolean42 = byteOrderMark22.equals((java.lang.Object) byteOrderMark40);
        int[] intArray52 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray52);
        int int59 = byteOrderMark58.length();
        boolean boolean60 = byteOrderMark40.equals((java.lang.Object) int59);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray69);
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray69);
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray69);
        byte[] byteArray75 = byteOrderMark74.getBytes();
        boolean boolean76 = byteOrderMark40.equals((java.lang.Object) byteOrderMark74);
        int[] intArray85 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark86 = new org.apache.commons.io.ByteOrderMark("hi!", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark87 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark88 = new org.apache.commons.io.ByteOrderMark("hi!", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark89 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark90 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray85);
        java.lang.String str91 = byteOrderMark90.getCharsetName();
        byte[] byteArray92 = byteOrderMark90.getBytes();
        boolean boolean93 = byteOrderMark40.equals((java.lang.Object) byteOrderMark90);
        boolean boolean94 = byteOrderMark21.equals((java.lang.Object) byteOrderMark90);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 239 + "'", int24 == 239);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "UTF-16BE" + "'", str91, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray92), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        int int15 = byteOrderMark13.length();
        int int16 = byteOrderMark13.length();
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) str17);
        java.lang.String str19 = byteOrderMark0.toString();
        java.lang.Object obj20 = null;
        boolean boolean21 = byteOrderMark0.equals(obj20);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray33);
        boolean boolean42 = byteOrderMark0.equals((java.lang.Object) intArray33);
        byte[] byteArray43 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean46 = byteOrderMark44.equals((java.lang.Object) 1L);
        java.lang.String str47 = byteOrderMark44.getCharsetName();
        int int48 = byteOrderMark44.length();
        boolean boolean50 = byteOrderMark44.equals((java.lang.Object) (byte) -1);
        byte[] byteArray51 = byteOrderMark44.getBytes();
        java.lang.String str52 = byteOrderMark44.getCharsetName();
        java.lang.String str53 = byteOrderMark44.getCharsetName();
        java.lang.String str54 = byteOrderMark44.toString();
        int int55 = byteOrderMark44.length();
        int int57 = byteOrderMark44.get((int) (byte) 1);
        int[] intArray63 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray63);
        boolean boolean66 = byteOrderMark44.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        java.lang.String str67 = byteOrderMark44.toString();
        int int68 = byteOrderMark44.length();
        java.lang.String str69 = byteOrderMark44.toString();
        byte[] byteArray70 = byteOrderMark44.getBytes();
        java.lang.String str71 = byteOrderMark44.toString();
        boolean boolean72 = byteOrderMark0.equals((java.lang.Object) str71);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-16LE" + "'", str47, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-16LE" + "'", str52, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-16LE" + "'", str53, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str54, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 254 + "'", int57 == 254);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str67, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str69, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str71, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray21);
        boolean boolean24 = byteOrderMark14.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        java.lang.String str25 = byteOrderMark14.toString();
        int int26 = byteOrderMark14.length();
        byte[] byteArray27 = byteOrderMark14.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray13 = byteOrderMark12.getBytes();
        java.lang.String str14 = byteOrderMark12.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int17 = byteOrderMark15.get((int) (byte) 0);
        byte[] byteArray18 = byteOrderMark15.getBytes();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        boolean boolean20 = byteOrderMark12.equals((java.lang.Object) byteOrderMark15);
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str22 = byteOrderMark12.getCharsetName();
        java.lang.String str23 = byteOrderMark12.toString();
        java.lang.String str24 = byteOrderMark12.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-32BE" + "'", str14, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 239 + "'", int17 == 239);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-32BE" + "'", str22, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-32BE" + "'", str24, "UTF-32BE");
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        int int16 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        int int18 = byteOrderMark17.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        java.lang.String str25 = byteOrderMark24.getCharsetName();
        java.lang.Object obj26 = null;
        boolean boolean27 = byteOrderMark24.equals(obj26);
        boolean boolean28 = byteOrderMark17.equals(obj26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) (-1L));
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        java.lang.String str33 = byteOrderMark29.getCharsetName();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) byteOrderMark29);
        byte[] byteArray36 = byteOrderMark29.getBytes();
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) byteOrderMark29);
        byte[] byteArray38 = byteOrderMark29.getBytes();
        int[] intArray50 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray50);
        int[] intArray70 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = new org.apache.commons.io.ByteOrderMark("hi!", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("hi!", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray70);
        boolean boolean79 = byteOrderMark58.equals((java.lang.Object) intArray70);
        boolean boolean80 = byteOrderMark29.equals((java.lang.Object) byteOrderMark58);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        boolean boolean27 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        int[] intArray5 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray5);
        int int8 = byteOrderMark7.length();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = byteOrderMark7.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str25 = byteOrderMark0.getCharsetName();
        byte[] byteArray26 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass27 = byteArray26.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-32BE" + "'", str25, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        int[] intArray6 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark9.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0, 254]");
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int5 = byteOrderMark3.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        byte[] byteArray10 = byteOrderMark6.getBytes();
        boolean boolean11 = byteOrderMark3.equals((java.lang.Object) byteOrderMark6);
        java.lang.Class<?> wildcardClass12 = byteOrderMark3.getClass();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        byte[] byteArray14 = byteOrderMark3.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 255 + "'", int5 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark19.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark11.getCharsetName();
        java.lang.Class<?> wildcardClass31 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        int int21 = byteOrderMark15.length();
        java.lang.String str22 = byteOrderMark15.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) "hi!");
        int int34 = byteOrderMark15.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str36 = byteOrderMark35.getCharsetName();
        int int37 = byteOrderMark35.length();
        int int38 = byteOrderMark35.length();
        java.lang.String str39 = byteOrderMark35.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int42 = byteOrderMark40.get(0);
        java.lang.String str43 = byteOrderMark40.getCharsetName();
        byte[] byteArray44 = byteOrderMark40.getBytes();
        boolean boolean45 = byteOrderMark35.equals((java.lang.Object) byteArray44);
        boolean boolean46 = byteOrderMark15.equals((java.lang.Object) byteArray44);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-16LE" + "'", str39, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 255 + "'", int42 == 255);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16LE" + "'", str43, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark5.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        int int5 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass6 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        int int14 = byteOrderMark9.length();
        java.lang.String str15 = byteOrderMark9.toString();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int int10 = byteOrderMark0.length();
        byte[] byteArray11 = byteOrderMark0.getBytes();
        java.lang.String str12 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        int int56 = byteOrderMark47.length();
        int int57 = byteOrderMark47.length();
        int int59 = byteOrderMark47.get(0);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = byteOrderMark47.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 255 + "'", int59 == 255);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        int[] intArray12 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        java.lang.String str15 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (-1.0f));
        java.lang.String str7 = byteOrderMark0.toString();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = byteOrderMark0.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray14);
        java.lang.String str26 = byteOrderMark25.getCharsetName();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str26, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        java.lang.String str16 = byteOrderMark11.toString();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray29);
        int int39 = byteOrderMark38.length();
        java.lang.String str40 = byteOrderMark38.getCharsetName();
        byte[] byteArray41 = byteOrderMark38.getBytes();
        boolean boolean42 = byteOrderMark11.equals((java.lang.Object) byteOrderMark38);
        int int43 = byteOrderMark11.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str40, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean21 = byteOrderMark3.equals((java.lang.Object) intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray16);
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        java.lang.Class<?> wildcardClass24 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        java.lang.String str30 = byteOrderMark29.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int32 = byteOrderMark29.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass6 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark0.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        int int15 = byteOrderMark14.length();
        boolean boolean16 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.Class<?> wildcardClass17 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str17 = byteOrderMark16.toString();
        java.lang.String str18 = byteOrderMark16.toString();
        int int20 = byteOrderMark16.get(2);
        boolean boolean22 = byteOrderMark16.equals((java.lang.Object) (byte) 10);
        byte[] byteArray23 = byteOrderMark16.getBytes();
        byte[] byteArray24 = byteOrderMark16.getBytes();
        int int25 = byteOrderMark16.length();
        byte[] byteArray26 = byteOrderMark16.getBytes();
        java.lang.Class<?> wildcardClass27 = byteOrderMark16.getClass();
        boolean boolean28 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        byte[] byteArray29 = byteOrderMark15.getBytes();
        int int30 = byteOrderMark15.length();
        java.lang.Class<?> wildcardClass31 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 254 + "'", int20 == 254);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj20 = null;
        boolean boolean21 = byteOrderMark19.equals(obj20);
        int int22 = byteOrderMark19.length();
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) 0L);
        int int25 = byteOrderMark19.length();
        int int26 = byteOrderMark19.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean29 = byteOrderMark27.equals((java.lang.Object) (-1L));
        java.lang.String str30 = byteOrderMark27.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int33 = byteOrderMark31.get(0);
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        byte[] byteArray35 = byteOrderMark31.getBytes();
        boolean boolean36 = byteOrderMark27.equals((java.lang.Object) byteOrderMark31);
        boolean boolean37 = byteOrderMark19.equals((java.lang.Object) boolean36);
        java.lang.String str38 = byteOrderMark19.getCharsetName();
        boolean boolean40 = byteOrderMark19.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.String str41 = byteOrderMark19.getCharsetName();
        java.lang.Class<?> wildcardClass42 = byteOrderMark19.getClass();
        boolean boolean43 = byteOrderMark17.equals((java.lang.Object) wildcardClass42);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray56);
        boolean boolean66 = byteOrderMark17.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 255 + "'", int33 == 255);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16BE" + "'", str38, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16BE" + "'", str41, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int12 = byteOrderMark11.length();
        int int14 = byteOrderMark11.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str25 = byteOrderMark23.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean28 = byteOrderMark26.equals((java.lang.Object) 1L);
        java.lang.String str29 = byteOrderMark26.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean31 = byteOrderMark26.equals((java.lang.Object) byteOrderMark30);
        byte[] byteArray32 = byteOrderMark30.getBytes();
        int int33 = byteOrderMark30.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean36 = byteOrderMark34.equals((java.lang.Object) 1L);
        java.lang.String str37 = byteOrderMark34.getCharsetName();
        int int38 = byteOrderMark34.length();
        boolean boolean40 = byteOrderMark34.equals((java.lang.Object) (byte) -1);
        byte[] byteArray41 = byteOrderMark34.getBytes();
        java.lang.String str42 = byteOrderMark34.getCharsetName();
        java.lang.String str43 = byteOrderMark34.getCharsetName();
        java.lang.String str44 = byteOrderMark34.getCharsetName();
        boolean boolean45 = byteOrderMark30.equals((java.lang.Object) byteOrderMark34);
        boolean boolean46 = byteOrderMark23.equals((java.lang.Object) boolean45);
        java.lang.String str47 = byteOrderMark23.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16LE" + "'", str29, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16LE" + "'", str43, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-16LE" + "'", str44, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str47, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        int int11 = byteOrderMark7.length();
        int[] intArray15 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        boolean boolean17 = byteOrderMark7.equals((java.lang.Object) byteOrderMark16);
        byte[] byteArray18 = byteOrderMark16.getBytes();
        java.lang.String str19 = byteOrderMark16.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[239, 10]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-17, 10]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass12 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray9);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get((int) (byte) 0);
        java.lang.String str5 = byteOrderMark0.toString();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str2, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 255 + "'", int4 == 255);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark15.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = byteOrderMark0.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = byteOrderMark13.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        int int15 = byteOrderMark13.get(0);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark13.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }
}


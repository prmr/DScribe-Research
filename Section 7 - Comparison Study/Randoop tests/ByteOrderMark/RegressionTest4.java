import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        int int11 = byteOrderMark7.length();
        byte[] byteArray12 = byteOrderMark7.getBytes();
        java.lang.String str13 = byteOrderMark7.toString();
        byte[] byteArray14 = byteOrderMark7.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark7.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int int14 = byteOrderMark13.length();
        int int15 = byteOrderMark13.length();
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark13.equals(obj16);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = byteOrderMark13.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        java.lang.String str9 = byteOrderMark4.getCharsetName();
        boolean boolean10 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str11 = byteOrderMark4.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = byteOrderMark4.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int13 = byteOrderMark0.length();
        java.lang.String str14 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.toString();
        java.lang.String str15 = byteOrderMark13.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        java.lang.String str14 = byteOrderMark0.toString();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        byte[] byteArray23 = byteOrderMark22.getBytes();
        java.lang.String str24 = byteOrderMark22.toString();
        byte[] byteArray25 = byteOrderMark22.getBytes();
        int int26 = byteOrderMark22.length();
        int int27 = byteOrderMark22.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean30 = byteOrderMark28.equals((java.lang.Object) 1L);
        java.lang.String str31 = byteOrderMark28.getCharsetName();
        int int32 = byteOrderMark28.length();
        java.lang.String str33 = byteOrderMark28.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean37 = byteOrderMark35.equals((java.lang.Object) 1L);
        java.lang.String str38 = byteOrderMark35.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) byteOrderMark39);
        byte[] byteArray41 = byteOrderMark39.getBytes();
        int int42 = byteOrderMark39.length();
        int int43 = byteOrderMark39.length();
        int[] intArray53 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        boolean boolean60 = byteOrderMark39.equals((java.lang.Object) intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray53);
        boolean boolean62 = byteOrderMark28.equals((java.lang.Object) intArray53);
        boolean boolean63 = byteOrderMark22.equals((java.lang.Object) boolean62);
        java.lang.String str64 = byteOrderMark22.getCharsetName();
        java.lang.String str65 = byteOrderMark22.getCharsetName();
        boolean boolean66 = byteOrderMark0.equals((java.lang.Object) byteOrderMark22);
        byte[] byteArray67 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str33, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16LE" + "'", str38, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UTF-16LE" + "'", str64, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "UTF-16LE" + "'", str65, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-1, -2]");
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Class<?> wildcardClass7 = byteOrderMark5.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        int[] intArray16 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        boolean boolean18 = byteOrderMark4.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[239, 10]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int7 = byteOrderMark0.get((int) (short) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 255 + "'", int7 == 255);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) intArray30);
        int int38 = byteOrderMark0.length();
        byte[] byteArray39 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass40 = byteArray39.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int5 = byteOrderMark3.get(0);
        java.lang.String str6 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj8 = null;
        boolean boolean9 = byteOrderMark7.equals(obj8);
        int int10 = byteOrderMark7.length();
        boolean boolean12 = byteOrderMark7.equals((java.lang.Object) 0L);
        int int13 = byteOrderMark7.length();
        boolean boolean14 = byteOrderMark3.equals((java.lang.Object) int13);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) boolean14);
        java.lang.String str16 = byteOrderMark0.getCharsetName();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        java.lang.String str23 = byteOrderMark22.getCharsetName();
        java.lang.Object obj24 = null;
        boolean boolean25 = byteOrderMark22.equals(obj24);
        byte[] byteArray26 = byteOrderMark22.getBytes();
        byte[] byteArray27 = byteOrderMark22.getBytes();
        byte[] byteArray28 = byteOrderMark22.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj30 = null;
        boolean boolean31 = byteOrderMark29.equals(obj30);
        int int32 = byteOrderMark29.length();
        boolean boolean34 = byteOrderMark29.equals((java.lang.Object) 0L);
        int int35 = byteOrderMark29.length();
        int int36 = byteOrderMark29.length();
        int[] intArray43 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        boolean boolean47 = byteOrderMark29.equals((java.lang.Object) intArray43);
        int[] intArray55 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("hi!", intArray55);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray55);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("hi!", intArray55);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray55);
        int int60 = byteOrderMark59.length();
        boolean boolean61 = byteOrderMark29.equals((java.lang.Object) byteOrderMark59);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int64 = byteOrderMark62.get(0);
        boolean boolean66 = byteOrderMark62.equals((java.lang.Object) (short) 0);
        int[] intArray73 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("hi!", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("hi!", intArray73);
        boolean boolean77 = byteOrderMark62.equals((java.lang.Object) byteOrderMark76);
        boolean boolean78 = byteOrderMark29.equals((java.lang.Object) byteOrderMark62);
        byte[] byteArray79 = byteOrderMark62.getBytes();
        boolean boolean80 = byteOrderMark22.equals((java.lang.Object) byteArray79);
        int[] intArray90 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark91 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark92 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark93 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark94 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark95 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark96 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray90);
        boolean boolean97 = byteOrderMark22.equals((java.lang.Object) intArray90);
        boolean boolean98 = byteOrderMark0.equals((java.lang.Object) byteOrderMark22);
        java.lang.String str99 = byteOrderMark22.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 255 + "'", int5 == 255);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteOrderMark62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 255 + "'", int64 == 255);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str99, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str14 = byteOrderMark12.toString();
        java.lang.String str15 = byteOrderMark12.toString();
        int int16 = byteOrderMark12.length();
        java.lang.String str17 = byteOrderMark12.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str14, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str15, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-8" + "'", str17, "UTF-8");
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        int[] intArray4 = new int[] { 1, 35, 3 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray4);
        // The following exception was thrown during execution in test generation
        try {
            int int7 = byteOrderMark5.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 35, 3]");
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray29);
        java.lang.String str36 = byteOrderMark35.toString();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray47);
        java.lang.String str55 = byteOrderMark54.getCharsetName();
        int int56 = byteOrderMark54.length();
        boolean boolean57 = byteOrderMark35.equals((java.lang.Object) byteOrderMark54);
        byte[] byteArray58 = byteOrderMark54.getBytes();
        java.lang.String str59 = byteOrderMark54.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str36, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str55, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str59, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        int[] intArray7 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray7);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 10, -1]");
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        java.lang.Class<?> wildcardClass18 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray10 = byteOrderMark4.getBytes();
        int int11 = byteOrderMark4.length();
        byte[] byteArray12 = byteOrderMark4.getBytes();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xFF]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        boolean boolean45 = byteOrderMark4.equals((java.lang.Object) byteOrderMark44);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        java.lang.String str21 = byteOrderMark12.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) byteOrderMark33);
        boolean boolean35 = byteOrderMark11.equals((java.lang.Object) boolean34);
        java.lang.String str36 = byteOrderMark11.toString();
        java.lang.Class<?> wildcardClass37 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str36, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        byte[] byteArray26 = byteOrderMark25.getBytes();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int22 = byteOrderMark21.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray24 = byteOrderMark23.getBytes();
        int int25 = byteOrderMark23.length();
        int int26 = byteOrderMark23.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str28 = byteOrderMark27.toString();
        java.lang.String str29 = byteOrderMark27.toString();
        int int31 = byteOrderMark27.get(2);
        boolean boolean33 = byteOrderMark27.equals((java.lang.Object) (byte) 10);
        byte[] byteArray34 = byteOrderMark27.getBytes();
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        boolean boolean51 = byteOrderMark27.equals((java.lang.Object) byteOrderMark50);
        byte[] byteArray52 = byteOrderMark50.getBytes();
        boolean boolean53 = byteOrderMark23.equals((java.lang.Object) byteArray52);
        boolean boolean54 = byteOrderMark21.equals((java.lang.Object) byteArray52);
        int int55 = byteOrderMark21.length();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 254 + "'", int31 == 254);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        int int17 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray14);
        java.lang.String str26 = byteOrderMark25.getCharsetName();
        java.lang.String str27 = byteOrderMark25.getCharsetName();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]" + "'", str27, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]");
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray6);
        int int10 = byteOrderMark9.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean20 = byteOrderMark18.equals((java.lang.Object) 1L);
        java.lang.String str21 = byteOrderMark18.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean23 = byteOrderMark18.equals((java.lang.Object) byteOrderMark22);
        byte[] byteArray24 = byteOrderMark22.getBytes();
        boolean boolean25 = byteOrderMark15.equals((java.lang.Object) byteArray24);
        java.lang.String str26 = byteOrderMark15.toString();
        byte[] byteArray27 = byteOrderMark15.getBytes();
        int int29 = byteOrderMark15.get((int) (byte) 1);
        java.lang.String str30 = byteOrderMark15.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean33 = byteOrderMark31.equals((java.lang.Object) 1L);
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        byte[] byteArray35 = byteOrderMark31.getBytes();
        java.lang.Class<?> wildcardClass36 = byteArray35.getClass();
        boolean boolean37 = byteOrderMark15.equals((java.lang.Object) wildcardClass36);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) 1L);
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean34 = byteOrderMark29.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray35 = byteOrderMark33.getBytes();
        int int36 = byteOrderMark33.length();
        int int37 = byteOrderMark33.length();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        boolean boolean54 = byteOrderMark33.equals((java.lang.Object) intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        boolean boolean56 = byteOrderMark9.equals((java.lang.Object) byteOrderMark55);
        byte[] byteArray57 = byteOrderMark9.getBytes();
        byte[] byteArray58 = byteOrderMark9.getBytes();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[10, 97, 35]");
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        int int18 = byteOrderMark17.length();
        java.lang.String str19 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        byte[] byteArray10 = byteOrderMark0.getBytes();
        java.lang.String str11 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        int[] intArray35 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray35);
        boolean boolean40 = byteOrderMark2.equals((java.lang.Object) byteOrderMark39);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray42 = byteOrderMark41.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean45 = byteOrderMark43.equals((java.lang.Object) 1L);
        java.lang.String str46 = byteOrderMark43.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean48 = byteOrderMark43.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark41.equals((java.lang.Object) byteOrderMark43);
        byte[] byteArray50 = byteOrderMark43.getBytes();
        boolean boolean51 = byteOrderMark39.equals((java.lang.Object) byteOrderMark43);
        int[] intArray57 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("hi!", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray57);
        boolean boolean60 = byteOrderMark43.equals((java.lang.Object) intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0x0,0xA,0xFF]", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray57);
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteOrderMark41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-16LE" + "'", str46, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray13 = byteOrderMark12.getBytes();
        java.lang.String str14 = byteOrderMark12.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int17 = byteOrderMark15.get((int) (byte) 0);
        byte[] byteArray18 = byteOrderMark15.getBytes();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        boolean boolean20 = byteOrderMark12.equals((java.lang.Object) byteOrderMark15);
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        boolean boolean38 = byteOrderMark0.equals((java.lang.Object) "UTF-16LE");
        java.lang.Class<?> wildcardClass39 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-32BE" + "'", str14, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 239 + "'", int17 == 239);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0x0,0xA,0xFF]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        java.lang.String str9 = byteOrderMark4.getCharsetName();
        byte[] byteArray10 = byteOrderMark4.getBytes();
        byte[] byteArray11 = byteOrderMark4.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-2, -1]");
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean30 = byteOrderMark28.equals((java.lang.Object) 1L);
        java.lang.String str31 = byteOrderMark28.getCharsetName();
        int int32 = byteOrderMark28.length();
        boolean boolean34 = byteOrderMark28.equals((java.lang.Object) (byte) -1);
        byte[] byteArray35 = byteOrderMark28.getBytes();
        java.lang.String str36 = byteOrderMark28.getCharsetName();
        byte[] byteArray37 = byteOrderMark28.getBytes();
        int int39 = byteOrderMark28.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean41 = byteOrderMark28.equals((java.lang.Object) byteOrderMark40);
        byte[] byteArray42 = byteOrderMark40.getBytes();
        java.lang.String str43 = byteOrderMark40.getCharsetName();
        java.lang.String str44 = byteOrderMark40.getCharsetName();
        boolean boolean45 = byteOrderMark27.equals((java.lang.Object) str44);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 255 + "'", int39 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-8" + "'", str43, "UTF-8");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-8" + "'", str44, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        byte[] byteArray21 = byteOrderMark9.getBytes();
        java.lang.String str22 = byteOrderMark9.getCharsetName();
        java.lang.String str23 = byteOrderMark9.getCharsetName();
        int int24 = byteOrderMark9.length();
        java.lang.String str25 = byteOrderMark9.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = byteOrderMark9.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj3 = null;
        boolean boolean4 = byteOrderMark2.equals(obj3);
        byte[] byteArray5 = byteOrderMark2.getBytes();
        java.lang.String str6 = byteOrderMark2.toString();
        java.lang.String str7 = byteOrderMark2.getCharsetName();
        java.lang.String str8 = byteOrderMark2.toString();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        boolean boolean25 = byteOrderMark2.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray18);
        int int28 = byteOrderMark27.length();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        java.lang.String str8 = byteOrderMark0.toString();
        int int9 = byteOrderMark0.length();
        int int10 = byteOrderMark0.length();
        int int11 = byteOrderMark0.length();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = byteOrderMark0.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj37 = null;
        boolean boolean38 = byteOrderMark36.equals(obj37);
        byte[] byteArray39 = byteOrderMark36.getBytes();
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) byteOrderMark36);
        int int41 = byteOrderMark35.length();
        java.lang.String str42 = byteOrderMark35.getCharsetName();
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        boolean boolean53 = byteOrderMark35.equals((java.lang.Object) "hi!");
        int int54 = byteOrderMark35.length();
        boolean boolean55 = byteOrderMark19.equals((java.lang.Object) byteOrderMark35);
        byte[] byteArray56 = byteOrderMark19.getBytes();
        java.lang.String str57 = byteOrderMark19.toString();
        java.lang.String str58 = byteOrderMark19.getCharsetName();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str57, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str58, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        int int5 = byteOrderMark0.length();
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        java.lang.String str11 = byteOrderMark0.toString();
        java.lang.Object obj12 = null;
        boolean boolean13 = byteOrderMark0.equals(obj12);
        java.lang.String str14 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        int[] intArray3 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray3);
        byte[] byteArray6 = byteOrderMark5.getBytes();
        java.lang.String str7 = byteOrderMark5.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = byteOrderMark5.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[255]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-8: 0xFF]" + "'", str7, "ByteOrderMark[UTF-8: 0xFF]");
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        java.lang.Class<?> wildcardClass29 = byteOrderMark27.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        byte[] byteArray17 = byteOrderMark15.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark18.equals(obj19);
        int int21 = byteOrderMark18.length();
        boolean boolean23 = byteOrderMark18.equals((java.lang.Object) 0L);
        int int24 = byteOrderMark18.length();
        int int25 = byteOrderMark18.length();
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        boolean boolean36 = byteOrderMark18.equals((java.lang.Object) intArray32);
        boolean boolean37 = byteOrderMark15.equals((java.lang.Object) intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray32);
        java.lang.Class<?> wildcardClass42 = intArray32.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        int int22 = byteOrderMark21.length();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int35 = byteOrderMark33.get(0);
        boolean boolean37 = byteOrderMark33.equals((java.lang.Object) (short) 0);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        boolean boolean48 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark0.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray50 = byteOrderMark33.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray52 = byteOrderMark51.getBytes();
        java.lang.String str53 = byteOrderMark51.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int56 = byteOrderMark54.get((int) (byte) 0);
        byte[] byteArray57 = byteOrderMark54.getBytes();
        byte[] byteArray58 = byteOrderMark54.getBytes();
        boolean boolean59 = byteOrderMark51.equals((java.lang.Object) byteOrderMark54);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int62 = byteOrderMark60.get(0);
        java.lang.String str63 = byteOrderMark60.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj65 = null;
        boolean boolean66 = byteOrderMark64.equals(obj65);
        int int67 = byteOrderMark64.length();
        boolean boolean69 = byteOrderMark64.equals((java.lang.Object) 0L);
        int int70 = byteOrderMark64.length();
        boolean boolean71 = byteOrderMark60.equals((java.lang.Object) int70);
        int int73 = byteOrderMark60.get(0);
        boolean boolean74 = byteOrderMark51.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean77 = byteOrderMark75.equals((java.lang.Object) (-1L));
        java.lang.String str78 = byteOrderMark75.toString();
        byte[] byteArray79 = byteOrderMark75.getBytes();
        java.lang.Class<?> wildcardClass80 = byteArray79.getClass();
        boolean boolean81 = byteOrderMark51.equals((java.lang.Object) wildcardClass80);
        boolean boolean82 = byteOrderMark33.equals((java.lang.Object) wildcardClass80);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = byteOrderMark33.get(254);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 254 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 255 + "'", int35 == 255);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark51);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-32BE" + "'", str53, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark54);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 239 + "'", int56 == 239);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteOrderMark60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 255 + "'", int62 == 255);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-16LE" + "'", str63, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 255 + "'", int73 == 255);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(byteOrderMark75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str78, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.toString();
        boolean boolean27 = byteOrderMark21.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray28 = byteOrderMark23.getBytes();
        byte[] byteArray29 = byteOrderMark23.getBytes();
        java.lang.String str30 = byteOrderMark23.getCharsetName();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        int int4 = byteOrderMark0.length();
        int int5 = byteOrderMark0.length();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray19);
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) intArray19);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        byte[] byteArray30 = byteOrderMark29.getBytes();
        int int32 = byteOrderMark29.get((int) (short) 0);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) int32);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        int[] intArray8 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 254]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, 0, -2]");
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray20);
        java.lang.String str30 = byteOrderMark29.toString();
        java.lang.String str31 = byteOrderMark29.toString();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str31, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        java.lang.String str14 = byteOrderMark11.toString();
        int int15 = byteOrderMark11.length();
        java.lang.String str16 = byteOrderMark11.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        int int12 = byteOrderMark9.length();
        java.lang.String str13 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass7 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        byte[] byteArray38 = byteOrderMark37.getBytes();
        byte[] byteArray39 = byteOrderMark37.getBytes();
        java.lang.String str40 = byteOrderMark37.getCharsetName();
        boolean boolean42 = byteOrderMark37.equals((java.lang.Object) (short) -1);
        boolean boolean43 = byteOrderMark25.equals((java.lang.Object) byteOrderMark37);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean46 = byteOrderMark44.equals((java.lang.Object) 1L);
        java.lang.String str47 = byteOrderMark44.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean49 = byteOrderMark44.equals((java.lang.Object) byteOrderMark48);
        java.lang.String str50 = byteOrderMark48.getCharsetName();
        int[] intArray59 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray59);
        int[] intArray72 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray72);
        boolean boolean77 = byteOrderMark64.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str78 = byteOrderMark64.toString();
        java.lang.String str79 = byteOrderMark64.getCharsetName();
        boolean boolean80 = byteOrderMark48.equals((java.lang.Object) byteOrderMark64);
        boolean boolean81 = byteOrderMark37.equals((java.lang.Object) boolean80);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str40, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(byteOrderMark44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-16LE" + "'", str47, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16BE" + "'", str50, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str78, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "UTF-32BE" + "'", str79, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray33);
        boolean boolean38 = byteOrderMark0.equals((java.lang.Object) byteOrderMark37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray40 = byteOrderMark39.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean43 = byteOrderMark41.equals((java.lang.Object) 1L);
        java.lang.String str44 = byteOrderMark41.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean46 = byteOrderMark41.equals((java.lang.Object) byteOrderMark45);
        boolean boolean47 = byteOrderMark39.equals((java.lang.Object) byteOrderMark41);
        byte[] byteArray48 = byteOrderMark41.getBytes();
        boolean boolean49 = byteOrderMark37.equals((java.lang.Object) byteOrderMark41);
        java.lang.String str50 = byteOrderMark37.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-16LE" + "'", str44, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str50, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        java.lang.String str14 = byteOrderMark0.toString();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        byte[] byteArray23 = byteOrderMark22.getBytes();
        java.lang.String str24 = byteOrderMark22.toString();
        byte[] byteArray25 = byteOrderMark22.getBytes();
        int int26 = byteOrderMark22.length();
        int int27 = byteOrderMark22.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean30 = byteOrderMark28.equals((java.lang.Object) 1L);
        java.lang.String str31 = byteOrderMark28.getCharsetName();
        int int32 = byteOrderMark28.length();
        java.lang.String str33 = byteOrderMark28.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean37 = byteOrderMark35.equals((java.lang.Object) 1L);
        java.lang.String str38 = byteOrderMark35.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) byteOrderMark39);
        byte[] byteArray41 = byteOrderMark39.getBytes();
        int int42 = byteOrderMark39.length();
        int int43 = byteOrderMark39.length();
        int[] intArray53 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        boolean boolean60 = byteOrderMark39.equals((java.lang.Object) intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray53);
        boolean boolean62 = byteOrderMark28.equals((java.lang.Object) intArray53);
        boolean boolean63 = byteOrderMark22.equals((java.lang.Object) boolean62);
        java.lang.String str64 = byteOrderMark22.getCharsetName();
        java.lang.String str65 = byteOrderMark22.getCharsetName();
        boolean boolean66 = byteOrderMark0.equals((java.lang.Object) byteOrderMark22);
        java.lang.String str67 = byteOrderMark0.toString();
        int[] intArray80 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark81 = new org.apache.commons.io.ByteOrderMark("hi!", intArray80);
        org.apache.commons.io.ByteOrderMark byteOrderMark82 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray80);
        org.apache.commons.io.ByteOrderMark byteOrderMark83 = new org.apache.commons.io.ByteOrderMark("hi!", intArray80);
        org.apache.commons.io.ByteOrderMark byteOrderMark84 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray80);
        org.apache.commons.io.ByteOrderMark byteOrderMark85 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray80);
        org.apache.commons.io.ByteOrderMark byteOrderMark86 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray80);
        org.apache.commons.io.ByteOrderMark byteOrderMark87 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray80);
        org.apache.commons.io.ByteOrderMark byteOrderMark88 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray80);
        org.apache.commons.io.ByteOrderMark byteOrderMark89 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray80);
        boolean boolean90 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str33, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16LE" + "'", str38, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UTF-16LE" + "'", str64, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "UTF-16LE" + "'", str65, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str67, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray10);
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean32 = byteOrderMark30.equals((java.lang.Object) (-1L));
        java.lang.String str33 = byteOrderMark30.toString();
        java.lang.String str34 = byteOrderMark30.getCharsetName();
        boolean boolean35 = byteOrderMark29.equals((java.lang.Object) byteOrderMark30);
        java.lang.Class<?> wildcardClass36 = byteOrderMark29.getClass();
        boolean boolean37 = byteOrderMark17.equals((java.lang.Object) byteOrderMark29);
        byte[] byteArray38 = byteOrderMark17.getBytes();
        int int40 = byteOrderMark17.get((int) (short) 0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str33, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        byte[] byteArray18 = byteOrderMark15.getBytes();
        java.lang.String str19 = byteOrderMark15.toString();
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray32);
        boolean boolean42 = byteOrderMark15.equals((java.lang.Object) byteOrderMark41);
        java.lang.Class<?> wildcardClass43 = byteOrderMark41.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark9.equals(obj13);
        java.lang.String str15 = byteOrderMark9.getCharsetName();
        java.lang.String str16 = byteOrderMark9.toString();
        int int17 = byteOrderMark9.length();
        java.lang.String str18 = byteOrderMark9.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        java.lang.String str22 = byteOrderMark19.toString();
        java.lang.String str23 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str25 = byteOrderMark0.getCharsetName();
        java.lang.String str26 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int28 = byteOrderMark0.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-32BE" + "'", str25, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-32BE" + "'", str26, "UTF-32BE");
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.toString();
        java.lang.Class<?> wildcardClass12 = byteOrderMark5.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        int int21 = byteOrderMark20.length();
        boolean boolean22 = byteOrderMark5.equals((java.lang.Object) byteOrderMark20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray26 = byteOrderMark25.getBytes();
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        boolean boolean43 = byteOrderMark25.equals((java.lang.Object) intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        int[] intArray50 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        java.lang.String str52 = byteOrderMark51.getCharsetName();
        java.lang.Object obj53 = null;
        boolean boolean54 = byteOrderMark51.equals(obj53);
        byte[] byteArray55 = byteOrderMark51.getBytes();
        byte[] byteArray56 = byteOrderMark51.getBytes();
        int[] intArray61 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray61);
        boolean boolean63 = byteOrderMark51.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        boolean boolean64 = byteOrderMark45.equals((java.lang.Object) byteOrderMark51);
        boolean boolean65 = byteOrderMark20.equals((java.lang.Object) byteOrderMark45);
        int int67 = byteOrderMark20.get(0);
        java.lang.Class<?> wildcardClass68 = byteOrderMark20.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteOrderMark25);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        int int25 = byteOrderMark21.get((int) (short) 0);
        java.lang.String str26 = byteOrderMark21.toString();
        int[] intArray35 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray35);
        byte[] byteArray41 = byteOrderMark40.getBytes();
        int int42 = byteOrderMark40.length();
        java.lang.String str43 = byteOrderMark40.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean47 = byteOrderMark45.equals((java.lang.Object) 1L);
        java.lang.String str48 = byteOrderMark45.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean50 = byteOrderMark45.equals((java.lang.Object) byteOrderMark49);
        byte[] byteArray51 = byteOrderMark49.getBytes();
        int int52 = byteOrderMark49.length();
        int int53 = byteOrderMark49.length();
        int[] intArray63 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("hi!", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark69 = new org.apache.commons.io.ByteOrderMark("hi!", intArray63);
        boolean boolean70 = byteOrderMark49.equals((java.lang.Object) intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray63);
        java.lang.Class<?> wildcardClass72 = byteOrderMark71.getClass();
        boolean boolean73 = byteOrderMark40.equals((java.lang.Object) wildcardClass72);
        boolean boolean74 = byteOrderMark21.equals((java.lang.Object) boolean73);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str43, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-16LE" + "'", str48, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray11);
        java.lang.Class<?> wildcardClass20 = intArray11.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int15 = byteOrderMark13.get((int) (byte) 0);
        byte[] byteArray16 = byteOrderMark13.getBytes();
        java.lang.Class<?> wildcardClass17 = byteOrderMark13.getClass();
        boolean boolean18 = byteOrderMark4.equals((java.lang.Object) byteOrderMark13);
        byte[] byteArray19 = byteOrderMark13.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 239 + "'", int15 == 239);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-17, -69, -65]");
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        int[] intArray7 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray7);
        // The following exception was thrown during execution in test generation
        try {
            int int13 = byteOrderMark11.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 10, -1]");
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray10 = byteOrderMark9.getBytes();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        java.lang.Class<?> wildcardClass12 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean18 = byteOrderMark16.equals((java.lang.Object) 1L);
        java.lang.String str19 = byteOrderMark16.getCharsetName();
        int int20 = byteOrderMark16.length();
        boolean boolean22 = byteOrderMark16.equals((java.lang.Object) (byte) -1);
        byte[] byteArray23 = byteOrderMark16.getBytes();
        java.lang.String str24 = byteOrderMark16.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        int int31 = byteOrderMark30.length();
        java.lang.Class<?> wildcardClass32 = byteOrderMark30.getClass();
        boolean boolean33 = byteOrderMark16.equals((java.lang.Object) byteOrderMark30);
        boolean boolean34 = byteOrderMark15.equals((java.lang.Object) boolean33);
        java.lang.String str35 = byteOrderMark15.toString();
        java.lang.Class<?> wildcardClass36 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str35, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        int[] intArray5 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int9 = byteOrderMark7.get((int) (short) 0);
        int int10 = byteOrderMark7.length();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) 1L);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        int int10 = byteOrderMark6.length();
        boolean boolean12 = byteOrderMark6.equals((java.lang.Object) (byte) -1);
        byte[] byteArray13 = byteOrderMark6.getBytes();
        java.lang.String str14 = byteOrderMark6.getCharsetName();
        java.lang.String str15 = byteOrderMark6.getCharsetName();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray23);
        boolean boolean28 = byteOrderMark6.equals((java.lang.Object) byteOrderMark27);
        java.lang.String str29 = byteOrderMark27.getCharsetName();
        int int31 = byteOrderMark27.get((int) (short) 0);
        java.lang.String str32 = byteOrderMark27.toString();
        byte[] byteArray33 = byteOrderMark27.getBytes();
        boolean boolean34 = byteOrderMark5.equals((java.lang.Object) byteArray33);
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray42);
        java.lang.Object obj47 = null;
        boolean boolean48 = byteOrderMark46.equals(obj47);
        boolean boolean49 = byteOrderMark5.equals((java.lang.Object) boolean48);
        int int50 = byteOrderMark5.length();
        java.lang.String str51 = byteOrderMark5.getCharsetName();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str51, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.String str8 = byteOrderMark0.toString();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        byte[] byteArray23 = byteOrderMark22.getBytes();
        int int24 = byteOrderMark22.length();
        java.lang.String str25 = byteOrderMark22.toString();
        byte[] byteArray26 = byteOrderMark22.getBytes();
        java.lang.String str27 = byteOrderMark22.getCharsetName();
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) str27);
        int int29 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-32BE" + "'", str27, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray18 = byteOrderMark11.getBytes();
        java.lang.String str19 = byteOrderMark11.getCharsetName();
        int int21 = byteOrderMark11.get((int) (byte) 1);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray31);
        java.lang.String str38 = byteOrderMark37.toString();
        java.lang.Class<?> wildcardClass39 = byteOrderMark37.getClass();
        boolean boolean40 = byteOrderMark11.equals((java.lang.Object) wildcardClass39);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str38, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        byte[] byteArray28 = byteOrderMark21.getBytes();
        byte[] byteArray29 = byteOrderMark21.getBytes();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -2]");
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        int int16 = byteOrderMark13.length();
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str17, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str30 = byteOrderMark29.toString();
        boolean boolean32 = byteOrderMark29.equals((java.lang.Object) ' ');
        java.lang.String str33 = byteOrderMark29.toString();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        byte[] byteArray35 = byteOrderMark29.getBytes();
        boolean boolean36 = byteOrderMark27.equals((java.lang.Object) byteArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean39 = byteOrderMark37.equals((java.lang.Object) 1L);
        java.lang.String str40 = byteOrderMark37.getCharsetName();
        int int41 = byteOrderMark37.length();
        boolean boolean43 = byteOrderMark37.equals((java.lang.Object) (byte) -1);
        byte[] byteArray44 = byteOrderMark37.getBytes();
        java.lang.String str45 = byteOrderMark37.getCharsetName();
        java.lang.String str46 = byteOrderMark37.getCharsetName();
        java.lang.String str47 = byteOrderMark37.toString();
        boolean boolean48 = byteOrderMark27.equals((java.lang.Object) str47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean51 = byteOrderMark49.equals((java.lang.Object) 1L);
        java.lang.String str52 = byteOrderMark49.getCharsetName();
        int int53 = byteOrderMark49.length();
        boolean boolean55 = byteOrderMark49.equals((java.lang.Object) (byte) -1);
        byte[] byteArray56 = byteOrderMark49.getBytes();
        java.lang.String str57 = byteOrderMark49.getCharsetName();
        java.lang.String str58 = byteOrderMark49.getCharsetName();
        java.lang.String str59 = byteOrderMark49.toString();
        int int60 = byteOrderMark49.length();
        int int62 = byteOrderMark49.get((int) (byte) 1);
        boolean boolean64 = byteOrderMark49.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.Class<?> wildcardClass65 = byteOrderMark49.getClass();
        boolean boolean66 = byteOrderMark27.equals((java.lang.Object) byteOrderMark49);
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str33, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-32BE" + "'", str34, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrderMark37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16LE" + "'", str40, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-16LE" + "'", str45, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-16LE" + "'", str46, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str47, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteOrderMark49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-16LE" + "'", str52, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-16LE" + "'", str57, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "UTF-16LE" + "'", str58, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str59, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 254 + "'", int62 == 254);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray19);
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) intArray19);
        java.lang.Class<?> wildcardClass31 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray19 = byteOrderMark18.getBytes();
        java.lang.String str20 = byteOrderMark18.toString();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean37 = byteOrderMark18.equals((java.lang.Object) intArray30);
        boolean boolean38 = byteOrderMark17.equals((java.lang.Object) byteOrderMark18);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean41 = byteOrderMark39.equals((java.lang.Object) (-1L));
        java.lang.String str42 = byteOrderMark39.toString();
        byte[] byteArray43 = byteOrderMark39.getBytes();
        byte[] byteArray44 = byteOrderMark39.getBytes();
        java.lang.String str45 = byteOrderMark39.getCharsetName();
        int[] intArray50 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        boolean boolean52 = byteOrderMark39.equals((java.lang.Object) "hi!");
        java.lang.String str53 = byteOrderMark39.toString();
        boolean boolean54 = byteOrderMark18.equals((java.lang.Object) byteOrderMark39);
        byte[] byteArray55 = byteOrderMark39.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str42, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-16LE" + "'", str45, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str53, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[-1, -2]");
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        java.lang.String str11 = byteOrderMark7.toString();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray24);
        boolean boolean34 = byteOrderMark7.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        int int4 = byteOrderMark0.length();
        int int5 = byteOrderMark0.length();
        java.lang.String str6 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str6, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        int int13 = byteOrderMark12.length();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) int13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean17 = byteOrderMark15.equals((java.lang.Object) 1L);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        int int19 = byteOrderMark15.length();
        boolean boolean21 = byteOrderMark15.equals((java.lang.Object) (byte) -1);
        byte[] byteArray22 = byteOrderMark15.getBytes();
        java.lang.String str23 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass24 = byteOrderMark15.getClass();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark15);
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray37);
        boolean boolean46 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.String str47 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-16LE" + "'", str47, "UTF-16LE");
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        java.lang.Class<?> wildcardClass20 = intArray11.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        byte[] byteArray20 = byteOrderMark17.getBytes();
        java.lang.String str21 = byteOrderMark17.toString();
        int int23 = byteOrderMark17.get((int) (byte) 0);
        boolean boolean24 = byteOrderMark15.equals((java.lang.Object) byteOrderMark17);
        java.lang.String str25 = byteOrderMark15.toString();
        java.lang.String str26 = byteOrderMark15.toString();
        int int27 = byteOrderMark15.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int30 = byteOrderMark28.get((int) (byte) 0);
        byte[] byteArray31 = byteOrderMark28.getBytes();
        boolean boolean32 = byteOrderMark15.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str33 = byteOrderMark28.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int35 = byteOrderMark28.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 239 + "'", int30 == 239);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str33, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray15);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark23.length();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = byteOrderMark23.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xFF]", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.length();
        int int8 = byteOrderMark0.get(2);
        int int9 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 254 + "'", int8 == 254);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray14);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        int[] intArray3 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray3);
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[239, 10]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        byte[] byteArray25 = byteOrderMark24.getBytes();
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) byteOrderMark24);
        java.lang.String str27 = byteOrderMark13.toString();
        byte[] byteArray28 = byteOrderMark13.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str27, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark15.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        int int15 = byteOrderMark13.length();
        int int16 = byteOrderMark13.length();
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) str17);
        java.lang.String str19 = byteOrderMark0.toString();
        java.lang.Object obj20 = null;
        boolean boolean21 = byteOrderMark0.equals(obj20);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray33);
        boolean boolean42 = byteOrderMark0.equals((java.lang.Object) intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean45 = byteOrderMark43.equals((java.lang.Object) (-1L));
        java.lang.String str46 = byteOrderMark43.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int49 = byteOrderMark47.get(0);
        java.lang.String str50 = byteOrderMark47.getCharsetName();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        boolean boolean52 = byteOrderMark43.equals((java.lang.Object) byteOrderMark47);
        java.lang.Object obj53 = null;
        boolean boolean54 = byteOrderMark47.equals(obj53);
        int[] intArray61 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray61);
        boolean boolean65 = byteOrderMark47.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        boolean boolean66 = byteOrderMark0.equals((java.lang.Object) byteOrderMark47);
        java.lang.String str67 = byteOrderMark47.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteOrderMark43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-16LE" + "'", str46, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 255 + "'", int49 == 255);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16LE" + "'", str50, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str67, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.getCharsetName();
        java.lang.String str10 = byteOrderMark3.getCharsetName();
        java.lang.String str11 = byteOrderMark3.getCharsetName();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray23);
        java.lang.String str32 = byteOrderMark31.toString();
        boolean boolean33 = byteOrderMark3.equals((java.lang.Object) str32);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        java.lang.String str11 = byteOrderMark0.toString();
        java.lang.String str12 = byteOrderMark0.toString();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray23);
        boolean boolean31 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str12, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray5);
        int int8 = byteOrderMark7.length();
        int int9 = byteOrderMark7.length();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        int[] intArray5 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]", intArray5);
        java.lang.String str10 = byteOrderMark9.toString();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[255]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xFF]" + "'", str10, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xFF]");
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-8: 0x0,0xA,0xFF]" + "'", str10, "ByteOrderMark[UTF-8: 0x0,0xA,0xFF]");
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray10 = byteOrderMark9.getBytes();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        int int12 = byteOrderMark0.length();
        byte[] byteArray13 = byteOrderMark0.getBytes();
        java.lang.String str14 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.Class<?> wildcardClass11 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]" + "'", str10, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        java.lang.Class<?> wildcardClass30 = intArray20.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        java.lang.String str21 = byteOrderMark19.toString();
        byte[] byteArray22 = byteOrderMark19.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = byteOrderMark19.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray16);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray5);
        int int8 = byteOrderMark7.length();
        java.lang.String str9 = byteOrderMark7.toString();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0x0,0xA,0xFF]" + "'", str9, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0x0,0xA,0xFF]");
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass8 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        int int9 = byteOrderMark4.length();
        byte[] byteArray10 = byteOrderMark4.getBytes();
        int int11 = byteOrderMark4.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        int[] intArray36 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        boolean boolean40 = byteOrderMark29.equals((java.lang.Object) "UTF-32BE");
        byte[] byteArray41 = byteOrderMark29.getBytes();
        int[] intArray48 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray48);
        boolean boolean52 = byteOrderMark29.equals((java.lang.Object) "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray5 = byteOrderMark4.getBytes();
        java.lang.String str6 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int9 = byteOrderMark7.get((int) (byte) 0);
        byte[] byteArray10 = byteOrderMark7.getBytes();
        byte[] byteArray11 = byteOrderMark7.getBytes();
        boolean boolean12 = byteOrderMark4.equals((java.lang.Object) byteOrderMark7);
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray22);
        boolean boolean29 = byteOrderMark4.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray22);
        java.lang.String str34 = byteOrderMark33.toString();
        java.lang.Class<?> wildcardClass35 = byteOrderMark33.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-32BE" + "'", str6, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 239 + "'", int9 == 239);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.Class<?> wildcardClass10 = byteOrderMark7.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str8, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        byte[] byteArray18 = byteOrderMark15.getBytes();
        java.lang.String str19 = byteOrderMark15.toString();
        java.lang.String str20 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int int13 = byteOrderMark0.get(0);
        int int14 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 255 + "'", int13 == 255);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.toString();
        java.lang.String str10 = byteOrderMark3.getCharsetName();
        java.lang.Class<?> wildcardClass11 = byteOrderMark3.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.toString();
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int17 = byteOrderMark16.length();
        java.lang.String str18 = byteOrderMark16.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        int int23 = byteOrderMark19.length();
        boolean boolean25 = byteOrderMark19.equals((java.lang.Object) (byte) -1);
        java.lang.String str26 = byteOrderMark19.toString();
        boolean boolean27 = byteOrderMark16.equals((java.lang.Object) str26);
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) byteOrderMark16);
        java.lang.Class<?> wildcardClass29 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16BE" + "'", str3, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray7);
        java.lang.Class<?> wildcardClass12 = intArray7.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        java.lang.Class<?> wildcardClass16 = intArray9.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        int int14 = byteOrderMark12.length();
        java.lang.String str15 = byteOrderMark12.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str15, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        byte[] byteArray11 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-2, -1]");
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        java.lang.String str28 = byteOrderMark27.toString();
        java.lang.String str29 = byteOrderMark27.getCharsetName();
        byte[] byteArray30 = byteOrderMark27.getBytes();
        java.lang.Object obj31 = null;
        boolean boolean32 = byteOrderMark27.equals(obj31);
        java.lang.String str33 = byteOrderMark27.getCharsetName();
        int int34 = byteOrderMark27.length();
        byte[] byteArray35 = byteOrderMark27.getBytes();
        boolean boolean36 = byteOrderMark11.equals((java.lang.Object) byteOrderMark27);
        byte[] byteArray37 = byteOrderMark27.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int39 = byteOrderMark27.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 97, 35]");
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        int int13 = byteOrderMark12.length();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) int13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean17 = byteOrderMark15.equals((java.lang.Object) 1L);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        int int19 = byteOrderMark15.length();
        boolean boolean21 = byteOrderMark15.equals((java.lang.Object) (byte) -1);
        byte[] byteArray22 = byteOrderMark15.getBytes();
        java.lang.String str23 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass24 = byteOrderMark15.getClass();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark15);
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray37);
        boolean boolean46 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.String str47 = byteOrderMark0.toString();
        java.lang.String str48 = byteOrderMark0.getCharsetName();
        java.lang.String str49 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int51 = byteOrderMark0.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str47, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-16LE" + "'", str48, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-16LE" + "'", str49, "UTF-16LE");
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        int int8 = byteOrderMark4.length();
        java.lang.String str9 = byteOrderMark4.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray6);
        int int11 = byteOrderMark9.get(1);
        byte[] byteArray12 = byteOrderMark9.getBytes();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 10, -1]");
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        boolean boolean20 = byteOrderMark2.equals((java.lang.Object) intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        int int18 = byteOrderMark17.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray29);
        boolean boolean37 = byteOrderMark17.equals((java.lang.Object) byteOrderMark36);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = byteOrderMark17.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray21);
        boolean boolean24 = byteOrderMark14.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        byte[] byteArray25 = byteOrderMark14.getBytes();
        int int26 = byteOrderMark14.length();
        java.lang.Class<?> wildcardClass27 = byteOrderMark14.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int10 = byteOrderMark0.length();
        java.lang.String str11 = byteOrderMark0.toString();
        java.lang.String str12 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        java.lang.Class<?> wildcardClass13 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str2 = byteOrderMark1.toString();
        boolean boolean4 = byteOrderMark1.equals((java.lang.Object) ' ');
        java.lang.String str5 = byteOrderMark1.toString();
        java.lang.String str6 = byteOrderMark1.toString();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray20);
        boolean boolean31 = byteOrderMark1.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray20);
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int6 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass7 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        java.lang.String str20 = byteOrderMark19.toString();
        int int21 = byteOrderMark19.length();
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        int[] intArray26 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray26);
        java.lang.Class<?> wildcardClass28 = byteOrderMark27.getClass();
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark27);
        java.lang.String str30 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[255]");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        int int18 = byteOrderMark17.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean21 = byteOrderMark3.equals((java.lang.Object) intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("", intArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        int int20 = byteOrderMark19.length();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str16 = byteOrderMark0.getCharsetName();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray24);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        byte[] byteArray30 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        int int19 = byteOrderMark16.length();
        boolean boolean21 = byteOrderMark16.equals((java.lang.Object) 0L);
        int int22 = byteOrderMark16.length();
        int int23 = byteOrderMark16.length();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean34 = byteOrderMark16.equals((java.lang.Object) intArray30);
        boolean boolean35 = byteOrderMark13.equals((java.lang.Object) intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray30);
        java.lang.String str38 = byteOrderMark37.getCharsetName();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]" + "'", str38, "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("", intArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        java.lang.String str36 = byteOrderMark35.getCharsetName();
        java.lang.Object obj37 = null;
        boolean boolean38 = byteOrderMark35.equals(obj37);
        byte[] byteArray39 = byteOrderMark35.getBytes();
        boolean boolean40 = byteOrderMark23.equals((java.lang.Object) byteArray39);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-32BE" + "'", str36, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]", intArray8);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = byteOrderMark0.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        java.lang.String str12 = byteOrderMark0.toString();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        byte[] byteArray27 = byteOrderMark26.getBytes();
        int int28 = byteOrderMark26.length();
        java.lang.String str29 = byteOrderMark26.toString();
        byte[] byteArray30 = byteOrderMark26.getBytes();
        java.lang.String str31 = byteOrderMark26.getCharsetName();
        byte[] byteArray32 = byteOrderMark26.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        java.lang.String str38 = byteOrderMark33.getCharsetName();
        byte[] byteArray39 = byteOrderMark33.getBytes();
        boolean boolean40 = byteOrderMark26.equals((java.lang.Object) byteOrderMark33);
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) boolean40);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str12, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str29, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-32BE" + "'", str31, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16LE" + "'", str38, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray19);
        int int28 = byteOrderMark27.length();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.get(1);
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.toString();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-32BE" + "'", str10, "UTF-32BE");
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        int int28 = byteOrderMark27.length();
        java.lang.String str29 = byteOrderMark27.getCharsetName();
        byte[] byteArray30 = byteOrderMark27.getBytes();
        java.lang.String str31 = byteOrderMark27.toString();
        boolean boolean32 = byteOrderMark11.equals((java.lang.Object) byteOrderMark27);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str31, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        int int14 = byteOrderMark0.length();
        java.lang.String str15 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark0.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) 1L);
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        int int12 = byteOrderMark8.length();
        boolean boolean14 = byteOrderMark8.equals((java.lang.Object) (byte) -1);
        byte[] byteArray15 = byteOrderMark8.getBytes();
        java.lang.String str16 = byteOrderMark8.getCharsetName();
        java.lang.String str17 = byteOrderMark8.getCharsetName();
        java.lang.String str18 = byteOrderMark8.getCharsetName();
        boolean boolean19 = byteOrderMark0.equals((java.lang.Object) str18);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        byte[] byteArray33 = byteOrderMark30.getBytes();
        int int35 = byteOrderMark30.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int1 = byteOrderMark0.length();
        int int3 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = byteOrderMark0.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 254 + "'", int3 == 254);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int6 = byteOrderMark0.length();
        int int8 = byteOrderMark0.get((int) (short) 1);
        int int9 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 254 + "'", int8 == 254);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str27 = byteOrderMark26.getCharsetName();
        java.lang.Class<?> wildcardClass28 = byteOrderMark26.getClass();
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) wildcardClass28);
        int int30 = byteOrderMark0.length();
        int int31 = byteOrderMark0.length();
        java.lang.String str32 = byteOrderMark0.toString();
        java.lang.String str33 = byteOrderMark0.getCharsetName();
        java.lang.String str34 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str32, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-32BE" + "'", str34, "UTF-32BE");
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        byte[] byteArray14 = byteOrderMark9.getBytes();
        java.lang.Class<?> wildcardClass15 = byteArray14.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int int12 = byteOrderMark0.length();
        int int13 = byteOrderMark0.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        java.lang.String str28 = byteOrderMark27.getCharsetName();
        byte[] byteArray29 = byteOrderMark27.getBytes();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark27);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-16LE" + "'", str28, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        int int11 = byteOrderMark5.get(2);
        int int12 = byteOrderMark5.length();
        int int14 = byteOrderMark5.get(1);
        byte[] byteArray15 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 35 + "'", int11 == 35);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        int int15 = byteOrderMark14.length();
        java.lang.Class<?> wildcardClass16 = byteOrderMark14.getClass();
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int int18 = byteOrderMark14.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) 1L);
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean34 = byteOrderMark29.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray35 = byteOrderMark33.getBytes();
        int int36 = byteOrderMark33.length();
        int int37 = byteOrderMark33.length();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        boolean boolean54 = byteOrderMark33.equals((java.lang.Object) intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        boolean boolean56 = byteOrderMark9.equals((java.lang.Object) byteOrderMark55);
        byte[] byteArray57 = byteOrderMark9.getBytes();
        java.lang.Class<?> wildcardClass58 = byteArray57.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray6);
        java.lang.String str10 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark0.getCharsetName();
        byte[] byteArray31 = byteOrderMark0.getBytes();
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        byte[] byteArray46 = byteOrderMark45.getBytes();
        int int47 = byteOrderMark45.length();
        java.lang.String str48 = byteOrderMark45.toString();
        int[] intArray54 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray54);
        byte[] byteArray57 = byteOrderMark56.getBytes();
        boolean boolean58 = byteOrderMark45.equals((java.lang.Object) byteOrderMark56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str60 = byteOrderMark59.toString();
        java.lang.String str61 = byteOrderMark59.toString();
        int int63 = byteOrderMark59.get(2);
        boolean boolean65 = byteOrderMark59.equals((java.lang.Object) (byte) 10);
        boolean boolean66 = byteOrderMark45.equals((java.lang.Object) boolean65);
        boolean boolean67 = byteOrderMark0.equals((java.lang.Object) boolean66);
        byte[] byteArray68 = byteOrderMark0.getBytes();
        java.lang.String str69 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrderMark59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str60, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str61, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 254 + "'", int63 == 254);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str69, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.get(0);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        int int17 = byteOrderMark15.get(2);
        byte[] byteArray18 = byteOrderMark15.getBytes();
        int int19 = byteOrderMark15.length();
        java.lang.String str20 = byteOrderMark15.getCharsetName();
        java.lang.String str21 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str20, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.Class<?> wildcardClass30 = byteOrderMark28.getClass();
        boolean boolean31 = byteOrderMark2.equals((java.lang.Object) wildcardClass30);
        int int32 = byteOrderMark2.length();
        int int33 = byteOrderMark2.length();
        java.lang.String str34 = byteOrderMark2.toString();
        byte[] byteArray35 = byteOrderMark2.getBytes();
        boolean boolean36 = byteOrderMark0.equals((java.lang.Object) byteOrderMark2);
        int int37 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str39 = byteOrderMark38.toString();
        java.lang.String str40 = byteOrderMark38.toString();
        int int42 = byteOrderMark38.get(2);
        boolean boolean44 = byteOrderMark38.equals((java.lang.Object) (byte) 10);
        byte[] byteArray45 = byteOrderMark38.getBytes();
        byte[] byteArray46 = byteOrderMark38.getBytes();
        int int47 = byteOrderMark38.length();
        java.lang.String str48 = byteOrderMark38.getCharsetName();
        byte[] byteArray49 = byteOrderMark38.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark50.equals(obj51);
        int int53 = byteOrderMark50.length();
        boolean boolean55 = byteOrderMark50.equals((java.lang.Object) 0L);
        int int56 = byteOrderMark50.length();
        int int57 = byteOrderMark50.length();
        int[] intArray64 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        boolean boolean68 = byteOrderMark50.equals((java.lang.Object) intArray64);
        java.lang.String str69 = byteOrderMark50.toString();
        boolean boolean70 = byteOrderMark38.equals((java.lang.Object) str69);
        boolean boolean71 = byteOrderMark0.equals((java.lang.Object) byteOrderMark38);
        byte[] byteArray72 = byteOrderMark38.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16LE" + "'", str29, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str34, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str39, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str40, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 254 + "'", int42 == 254);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-32BE" + "'", str48, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str69, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[0, 0, -2, -1]");
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        int[] intArray5 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = byteOrderMark7.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 254, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str8, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        int int9 = byteOrderMark0.length();
        int int10 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = byteOrderMark0.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.Class<?> wildcardClass30 = byteOrderMark28.getClass();
        boolean boolean31 = byteOrderMark2.equals((java.lang.Object) wildcardClass30);
        int int32 = byteOrderMark2.length();
        int int33 = byteOrderMark2.length();
        java.lang.String str34 = byteOrderMark2.toString();
        byte[] byteArray35 = byteOrderMark2.getBytes();
        boolean boolean36 = byteOrderMark0.equals((java.lang.Object) byteOrderMark2);
        int int37 = byteOrderMark2.length();
        int int39 = byteOrderMark2.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16LE" + "'", str29, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str34, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray21);
        boolean boolean24 = byteOrderMark14.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        java.lang.String str25 = byteOrderMark14.toString();
        java.lang.Class<?> wildcardClass26 = byteOrderMark14.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        java.lang.String str2 = byteOrderMark0.toString();
        byte[] byteArray3 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-32BE" + "'", str1, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark17.equals(obj19);
        byte[] byteArray21 = byteOrderMark17.getBytes();
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteArray21);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = byteOrderMark0.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int1 = byteOrderMark0.length();
        int int3 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 254 + "'", int3 == 254);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean28 = byteOrderMark26.equals((java.lang.Object) 1L);
        java.lang.String str29 = byteOrderMark26.getCharsetName();
        int int30 = byteOrderMark26.length();
        boolean boolean32 = byteOrderMark26.equals((java.lang.Object) (byte) -1);
        byte[] byteArray33 = byteOrderMark26.getBytes();
        java.lang.String str34 = byteOrderMark26.getCharsetName();
        java.lang.String str35 = byteOrderMark26.getCharsetName();
        int[] intArray43 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray43);
        boolean boolean48 = byteOrderMark26.equals((java.lang.Object) byteOrderMark47);
        java.lang.String str49 = byteOrderMark47.getCharsetName();
        byte[] byteArray50 = byteOrderMark47.getBytes();
        java.lang.String str51 = byteOrderMark47.getCharsetName();
        java.lang.String str52 = byteOrderMark47.getCharsetName();
        java.lang.String str53 = byteOrderMark47.toString();
        boolean boolean54 = byteOrderMark25.equals((java.lang.Object) str53);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16LE" + "'", str29, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-16LE" + "'", str35, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str49, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str51, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str52, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str53, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        int int18 = byteOrderMark17.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray29);
        boolean boolean37 = byteOrderMark17.equals((java.lang.Object) byteOrderMark36);
        int int38 = byteOrderMark17.length();
        java.lang.String str39 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str39, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        int int8 = byteOrderMark0.length();
        int int9 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        int int20 = byteOrderMark19.length();
        java.lang.String str21 = byteOrderMark19.getCharsetName();
        java.lang.String str22 = byteOrderMark19.toString();
        java.lang.String str23 = byteOrderMark19.toString();
        java.lang.String str24 = byteOrderMark19.toString();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        java.lang.String str26 = byteOrderMark19.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        java.lang.String str11 = byteOrderMark7.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-32BE" + "'", str10, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-32BE" + "'", str11, "UTF-32BE");
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        byte[] byteArray9 = byteOrderMark0.getBytes();
        byte[] byteArray10 = byteOrderMark0.getBytes();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        java.lang.Class<?> wildcardClass29 = byteOrderMark28.getClass();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        int int32 = byteOrderMark0.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        int int9 = byteOrderMark7.length();
        int int10 = byteOrderMark7.length();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        java.lang.String str13 = byteOrderMark11.toString();
        int int14 = byteOrderMark11.length();
        java.lang.String str15 = byteOrderMark11.getCharsetName();
        java.lang.String str16 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark19.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray8);
        int int14 = byteOrderMark13.length();
        java.lang.Class<?> wildcardClass15 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int int16 = byteOrderMark14.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray18 = byteOrderMark17.getBytes();
        int int19 = byteOrderMark17.length();
        java.lang.String str20 = byteOrderMark17.getCharsetName();
        java.lang.String str21 = byteOrderMark17.getCharsetName();
        int int22 = byteOrderMark17.length();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray31);
        byte[] byteArray37 = byteOrderMark36.getBytes();
        boolean boolean38 = byteOrderMark17.equals((java.lang.Object) byteOrderMark36);
        boolean boolean39 = byteOrderMark14.equals((java.lang.Object) boolean38);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = byteOrderMark21.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        boolean boolean20 = byteOrderMark2.equals((java.lang.Object) intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.Object obj30 = null;
        boolean boolean31 = byteOrderMark28.equals(obj30);
        byte[] byteArray32 = byteOrderMark28.getBytes();
        byte[] byteArray33 = byteOrderMark28.getBytes();
        int[] intArray38 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        boolean boolean40 = byteOrderMark28.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        boolean boolean41 = byteOrderMark22.equals((java.lang.Object) byteOrderMark28);
        byte[] byteArray42 = byteOrderMark22.getBytes();
        byte[] byteArray43 = byteOrderMark22.getBytes();
        byte[] byteArray44 = byteOrderMark22.getBytes();
        java.lang.Class<?> wildcardClass45 = byteOrderMark22.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        int int16 = byteOrderMark15.length();
        int int17 = byteOrderMark15.length();
        int int18 = byteOrderMark15.length();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray30);
        boolean boolean39 = byteOrderMark15.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]", intArray13);
        int int25 = byteOrderMark23.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        byte[] byteArray15 = byteOrderMark14.getBytes();
        byte[] byteArray16 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        boolean boolean22 = byteOrderMark17.equals((java.lang.Object) 0L);
        int int23 = byteOrderMark17.length();
        int int24 = byteOrderMark17.length();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) intArray31);
        boolean boolean36 = byteOrderMark14.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray31);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray10 = byteOrderMark8.getBytes();
        int int11 = byteOrderMark8.length();
        int int12 = byteOrderMark8.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        boolean boolean29 = byteOrderMark8.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray22);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = byteOrderMark33.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray9);
        java.lang.String str16 = byteOrderMark15.toString();
        int int17 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]", intArray11);
        java.lang.String str20 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        int[] intArray5 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray9 = byteOrderMark8.getBytes();
        int int10 = byteOrderMark8.length();
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        java.lang.String str12 = byteOrderMark8.getCharsetName();
        int int13 = byteOrderMark8.length();
        byte[] byteArray14 = byteOrderMark8.getBytes();
        boolean boolean15 = byteOrderMark7.equals((java.lang.Object) byteArray14);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 254]");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark28.getCharsetName();
        byte[] byteArray31 = byteOrderMark28.getBytes();
        int int33 = byteOrderMark28.get(1);
        java.lang.String str34 = byteOrderMark28.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-32BE" + "'", str30, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 97 + "'", int33 == 97);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int35 = byteOrderMark33.get(0);
        boolean boolean37 = byteOrderMark33.equals((java.lang.Object) (short) 0);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        boolean boolean48 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark0.equals((java.lang.Object) byteOrderMark33);
        java.lang.String str50 = byteOrderMark33.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 255 + "'", int35 == 255);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        java.lang.String str19 = byteOrderMark17.getCharsetName();
        int int20 = byteOrderMark17.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str19, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        byte[] byteArray26 = byteOrderMark0.getBytes();
        byte[] byteArray27 = byteOrderMark0.getBytes();
        java.lang.String str28 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = byteOrderMark0.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark0.getBytes();
        byte[] byteArray17 = byteOrderMark0.getBytes();
        java.lang.String str18 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        java.lang.String str27 = byteOrderMark23.getCharsetName();
        int int28 = byteOrderMark23.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray30 = byteOrderMark29.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean33 = byteOrderMark31.equals((java.lang.Object) 1L);
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean36 = byteOrderMark31.equals((java.lang.Object) byteOrderMark35);
        boolean boolean37 = byteOrderMark29.equals((java.lang.Object) byteOrderMark31);
        java.lang.String str38 = byteOrderMark31.toString();
        boolean boolean39 = byteOrderMark23.equals((java.lang.Object) str38);
        boolean boolean40 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str41 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16BE" + "'", str27, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str38, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str41, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark23.equals(obj25);
        byte[] byteArray27 = byteOrderMark23.getBytes();
        java.lang.String str28 = byteOrderMark23.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj30 = null;
        boolean boolean31 = byteOrderMark29.equals(obj30);
        int int32 = byteOrderMark29.length();
        boolean boolean34 = byteOrderMark29.equals((java.lang.Object) 0L);
        int int35 = byteOrderMark29.length();
        boolean boolean37 = byteOrderMark29.equals((java.lang.Object) 3);
        java.lang.String str38 = byteOrderMark29.getCharsetName();
        java.lang.String str39 = byteOrderMark29.getCharsetName();
        java.lang.String str40 = byteOrderMark29.toString();
        byte[] byteArray41 = byteOrderMark29.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str43 = byteOrderMark42.getCharsetName();
        int int44 = byteOrderMark42.length();
        int int45 = byteOrderMark42.length();
        java.lang.String str46 = byteOrderMark42.getCharsetName();
        boolean boolean47 = byteOrderMark29.equals((java.lang.Object) str46);
        java.lang.String str48 = byteOrderMark29.toString();
        java.lang.Object obj49 = null;
        boolean boolean50 = byteOrderMark29.equals(obj49);
        int[] intArray62 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark69 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray62);
        boolean boolean71 = byteOrderMark29.equals((java.lang.Object) intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean74 = byteOrderMark72.equals((java.lang.Object) (-1L));
        java.lang.String str75 = byteOrderMark72.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int78 = byteOrderMark76.get(0);
        java.lang.String str79 = byteOrderMark76.getCharsetName();
        byte[] byteArray80 = byteOrderMark76.getBytes();
        boolean boolean81 = byteOrderMark72.equals((java.lang.Object) byteOrderMark76);
        java.lang.Object obj82 = null;
        boolean boolean83 = byteOrderMark76.equals(obj82);
        int[] intArray90 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark91 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark92 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark93 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray90);
        boolean boolean94 = byteOrderMark76.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        boolean boolean95 = byteOrderMark29.equals((java.lang.Object) byteOrderMark76);
        boolean boolean96 = byteOrderMark23.equals((java.lang.Object) boolean95);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16BE" + "'", str38, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-16BE" + "'", str39, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str40, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16LE" + "'", str43, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-16LE" + "'", str46, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str48, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(byteOrderMark72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "UTF-16LE" + "'", str75, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark76);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 255 + "'", int78 == 255);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "UTF-16LE" + "'", str79, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark0.getCharsetName();
        int int31 = byteOrderMark0.length();
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray42);
        java.lang.Class<?> wildcardClass50 = intArray42.getClass();
        boolean boolean51 = byteOrderMark0.equals((java.lang.Object) wildcardClass50);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        int int16 = byteOrderMark15.length();
        int int17 = byteOrderMark15.length();
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        java.lang.String str19 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray15);
        java.lang.String str28 = byteOrderMark27.getCharsetName();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray5 = byteOrderMark4.getBytes();
        java.lang.String str6 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int9 = byteOrderMark7.get((int) (byte) 0);
        byte[] byteArray10 = byteOrderMark7.getBytes();
        byte[] byteArray11 = byteOrderMark7.getBytes();
        boolean boolean12 = byteOrderMark4.equals((java.lang.Object) byteOrderMark7);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int15 = byteOrderMark13.get(0);
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        boolean boolean22 = byteOrderMark17.equals((java.lang.Object) 0L);
        int int23 = byteOrderMark17.length();
        boolean boolean24 = byteOrderMark13.equals((java.lang.Object) int23);
        int int26 = byteOrderMark13.get(0);
        boolean boolean27 = byteOrderMark4.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean30 = byteOrderMark28.equals((java.lang.Object) (-1L));
        java.lang.String str31 = byteOrderMark28.toString();
        byte[] byteArray32 = byteOrderMark28.getBytes();
        java.lang.Class<?> wildcardClass33 = byteArray32.getClass();
        boolean boolean34 = byteOrderMark4.equals((java.lang.Object) wildcardClass33);
        int int35 = byteOrderMark4.length();
        java.lang.String str36 = byteOrderMark4.getCharsetName();
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int[] intArray43 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray43);
        byte[] byteArray46 = byteOrderMark45.getBytes();
        boolean boolean47 = byteOrderMark4.equals((java.lang.Object) byteOrderMark45);
        int int48 = byteOrderMark45.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-32BE" + "'", str6, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 239 + "'", int9 == 239);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 255 + "'", int15 == 255);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 255 + "'", int26 == 255);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str31, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-32BE" + "'", str36, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        int int18 = byteOrderMark17.length();
        byte[] byteArray19 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int int9 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) 1L);
        java.lang.String str13 = byteOrderMark10.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark14.getBytes();
        int int17 = byteOrderMark14.length();
        java.lang.String str18 = byteOrderMark14.getCharsetName();
        java.lang.String str19 = byteOrderMark14.getCharsetName();
        byte[] byteArray20 = byteOrderMark14.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray22 = byteOrderMark0.getBytes();
        int int23 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16BE" + "'", str18, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        byte[] byteArray24 = byteOrderMark21.getBytes();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        int int26 = byteOrderMark21.length();
        java.lang.String str27 = byteOrderMark21.toString();
        byte[] byteArray28 = byteOrderMark21.getBytes();
        byte[] byteArray29 = byteOrderMark21.getBytes();
        byte[] byteArray30 = byteOrderMark21.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str27, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 97, 35]");
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        boolean boolean19 = byteOrderMark1.equals((java.lang.Object) intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        java.lang.String str21 = byteOrderMark20.toString();
        byte[] byteArray22 = byteOrderMark20.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str27 = byteOrderMark26.getCharsetName();
        java.lang.Class<?> wildcardClass28 = byteOrderMark26.getClass();
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) wildcardClass28);
        int int30 = byteOrderMark0.length();
        int int31 = byteOrderMark0.length();
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        boolean boolean50 = byteOrderMark0.equals((java.lang.Object) byteOrderMark49);
        java.lang.Class<?> wildcardClass51 = byteOrderMark49.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        int int4 = byteOrderMark0.length();
        int int5 = byteOrderMark0.length();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int8 = byteOrderMark0.get((int) (short) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 239 + "'", int8 == 239);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        int[] intArray2 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray2);
        int int4 = byteOrderMark3.length();
        java.lang.String str5 = byteOrderMark3.getCharsetName();
        int int6 = byteOrderMark3.length();
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[255]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str5, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj2 = null;
        boolean boolean3 = byteOrderMark1.equals(obj2);
        int int4 = byteOrderMark1.length();
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) 0L);
        int int7 = byteOrderMark1.length();
        int int8 = byteOrderMark1.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        boolean boolean19 = byteOrderMark1.equals((java.lang.Object) intArray15);
        byte[] byteArray20 = byteOrderMark1.getBytes();
        int int21 = byteOrderMark1.length();
        java.lang.String str22 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray24 = byteOrderMark23.getBytes();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        boolean boolean41 = byteOrderMark23.equals((java.lang.Object) intArray34);
        boolean boolean42 = byteOrderMark1.equals((java.lang.Object) intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray34);
        java.lang.String str44 = byteOrderMark43.toString();
        java.lang.String str45 = byteOrderMark43.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16BE" + "'", str22, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str44, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str45, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray21 = byteOrderMark20.getBytes();
        java.lang.String str22 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int25 = byteOrderMark23.get((int) (byte) 0);
        byte[] byteArray26 = byteOrderMark23.getBytes();
        byte[] byteArray27 = byteOrderMark23.getBytes();
        boolean boolean28 = byteOrderMark20.equals((java.lang.Object) byteOrderMark23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int31 = byteOrderMark29.get(0);
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj34 = null;
        boolean boolean35 = byteOrderMark33.equals(obj34);
        int int36 = byteOrderMark33.length();
        boolean boolean38 = byteOrderMark33.equals((java.lang.Object) 0L);
        int int39 = byteOrderMark33.length();
        boolean boolean40 = byteOrderMark29.equals((java.lang.Object) int39);
        int int42 = byteOrderMark29.get(0);
        boolean boolean43 = byteOrderMark20.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean46 = byteOrderMark44.equals((java.lang.Object) (-1L));
        java.lang.String str47 = byteOrderMark44.toString();
        byte[] byteArray48 = byteOrderMark44.getBytes();
        java.lang.Class<?> wildcardClass49 = byteArray48.getClass();
        boolean boolean50 = byteOrderMark20.equals((java.lang.Object) wildcardClass49);
        boolean boolean51 = byteOrderMark19.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str52 = byteOrderMark20.getCharsetName();
        byte[] byteArray53 = byteOrderMark20.getBytes();
        java.lang.Class<?> wildcardClass54 = byteOrderMark20.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-32BE" + "'", str22, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 239 + "'", int25 == 239);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 255 + "'", int31 == 255);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 255 + "'", int42 == 255);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteOrderMark44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str47, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-32BE" + "'", str52, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        byte[] byteArray21 = byteOrderMark20.getBytes();
        java.lang.String str22 = byteOrderMark20.getCharsetName();
        java.lang.String str23 = byteOrderMark20.toString();
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str25 = byteOrderMark20.toString();
        int int27 = byteOrderMark20.get(0);
        java.lang.String str28 = byteOrderMark20.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) 1L);
        java.lang.String str6 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean8 = byteOrderMark3.equals((java.lang.Object) byteOrderMark7);
        byte[] byteArray9 = byteOrderMark7.getBytes();
        int int10 = byteOrderMark7.length();
        int int11 = byteOrderMark7.length();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        boolean boolean28 = byteOrderMark7.equals((java.lang.Object) intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj3 = null;
        boolean boolean4 = byteOrderMark2.equals(obj3);
        byte[] byteArray5 = byteOrderMark2.getBytes();
        java.lang.String str6 = byteOrderMark2.toString();
        java.lang.String str7 = byteOrderMark2.getCharsetName();
        java.lang.String str8 = byteOrderMark2.toString();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        boolean boolean25 = byteOrderMark2.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray18);
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-8: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray14 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        boolean boolean23 = byteOrderMark15.equals((java.lang.Object) 3);
        java.lang.String str24 = byteOrderMark15.getCharsetName();
        java.lang.String str25 = byteOrderMark15.getCharsetName();
        java.lang.String str26 = byteOrderMark15.toString();
        java.lang.String str27 = byteOrderMark15.toString();
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) str27);
        int int29 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16BE" + "'", str24, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16BE" + "'", str25, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str26, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str27, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        int[] intArray6 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray6);
        int int10 = byteOrderMark9.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean18 = byteOrderMark16.equals((java.lang.Object) 1L);
        java.lang.String str19 = byteOrderMark16.getCharsetName();
        int int20 = byteOrderMark16.length();
        boolean boolean22 = byteOrderMark16.equals((java.lang.Object) (byte) -1);
        byte[] byteArray23 = byteOrderMark16.getBytes();
        java.lang.String str24 = byteOrderMark16.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        int int31 = byteOrderMark30.length();
        java.lang.Class<?> wildcardClass32 = byteOrderMark30.getClass();
        boolean boolean33 = byteOrderMark16.equals((java.lang.Object) byteOrderMark30);
        boolean boolean34 = byteOrderMark15.equals((java.lang.Object) boolean33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj36 = null;
        boolean boolean37 = byteOrderMark35.equals(obj36);
        int int38 = byteOrderMark35.length();
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) 0L);
        int int41 = byteOrderMark35.length();
        int int42 = byteOrderMark35.length();
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        boolean boolean53 = byteOrderMark35.equals((java.lang.Object) intArray49);
        int[] intArray61 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray61);
        int int66 = byteOrderMark65.length();
        boolean boolean67 = byteOrderMark35.equals((java.lang.Object) byteOrderMark65);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean70 = byteOrderMark68.equals((java.lang.Object) 1L);
        java.lang.String str71 = byteOrderMark68.getCharsetName();
        int int72 = byteOrderMark68.length();
        boolean boolean74 = byteOrderMark68.equals((java.lang.Object) (byte) -1);
        byte[] byteArray75 = byteOrderMark68.getBytes();
        java.lang.String str76 = byteOrderMark68.getCharsetName();
        java.lang.String str77 = byteOrderMark68.getCharsetName();
        java.lang.String str78 = byteOrderMark68.toString();
        int int79 = byteOrderMark68.length();
        int int80 = byteOrderMark68.length();
        boolean boolean81 = byteOrderMark65.equals((java.lang.Object) byteOrderMark68);
        int int82 = byteOrderMark65.length();
        java.lang.String str83 = byteOrderMark65.toString();
        byte[] byteArray84 = byteOrderMark65.getBytes();
        int int85 = byteOrderMark65.length();
        byte[] byteArray86 = byteOrderMark65.getBytes();
        boolean boolean87 = byteOrderMark15.equals((java.lang.Object) byteArray86);
        java.lang.String str88 = byteOrderMark15.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int90 = byteOrderMark15.get(254);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 254 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteOrderMark68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-16LE" + "'", str71, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "UTF-16LE" + "'", str76, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UTF-16LE" + "'", str77, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str78, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 3 + "'", int82 == 3);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str83, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 3 + "'", int85 == 3);
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str88, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray9);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark15.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 52 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        int int13 = byteOrderMark11.length();
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        int int15 = byteOrderMark11.length();
        java.lang.String str16 = byteOrderMark11.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        byte[] byteArray10 = byteOrderMark0.getBytes();
        java.lang.String str11 = byteOrderMark0.toString();
        java.lang.String str12 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str12, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        byte[] byteArray9 = byteOrderMark4.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-2, -1]");
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str25 = byteOrderMark0.getCharsetName();
        java.lang.String str26 = byteOrderMark0.getCharsetName();
        java.lang.String str27 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-32BE" + "'", str25, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-32BE" + "'", str26, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str27, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.toString();
        java.lang.String str8 = byteOrderMark0.toString();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass10 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int int13 = byteOrderMark0.get((int) (byte) 1);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        java.lang.String str20 = byteOrderMark16.toString();
        java.lang.String str21 = byteOrderMark16.getCharsetName();
        int int23 = byteOrderMark16.get(0);
        java.lang.String str24 = byteOrderMark16.getCharsetName();
        int int25 = byteOrderMark16.length();
        boolean boolean26 = byteOrderMark0.equals((java.lang.Object) int25);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 254 + "'", int13 == 254);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16BE" + "'", str21, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16BE" + "'", str24, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        int int19 = byteOrderMark16.length();
        boolean boolean21 = byteOrderMark16.equals((java.lang.Object) 0L);
        int int22 = byteOrderMark16.length();
        int int23 = byteOrderMark16.length();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean34 = byteOrderMark16.equals((java.lang.Object) intArray30);
        boolean boolean35 = byteOrderMark13.equals((java.lang.Object) intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        java.lang.String str38 = byteOrderMark37.toString();
        java.lang.String str39 = byteOrderMark37.toString();
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray49);
        java.lang.String str56 = byteOrderMark55.toString();
        boolean boolean57 = byteOrderMark37.equals((java.lang.Object) str56);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str38, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str39, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str56, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        int int14 = byteOrderMark13.length();
        int int15 = byteOrderMark13.length();
        byte[] byteArray16 = byteOrderMark13.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        int int16 = byteOrderMark13.length();
        int int18 = byteOrderMark13.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str15, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        byte[] byteArray6 = byteOrderMark5.getBytes();
        java.lang.String str7 = byteOrderMark5.toString();
        byte[] byteArray8 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10, -2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]" + "'", str7, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, -2, 100]");
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        int[] intArray8 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray8);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 254]");
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) 1L);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        int int18 = byteOrderMark14.length();
        boolean boolean19 = byteOrderMark9.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray20 = byteOrderMark14.getBytes();
        byte[] byteArray21 = byteOrderMark14.getBytes();
        java.lang.Class<?> wildcardClass22 = byteOrderMark14.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray17 = byteOrderMark16.getBytes();
        int int18 = byteOrderMark16.length();
        int int19 = byteOrderMark16.length();
        int int21 = byteOrderMark16.get((int) (byte) 0);
        boolean boolean22 = byteOrderMark15.equals((java.lang.Object) int21);
        int int24 = byteOrderMark15.get(0);
        java.lang.String str25 = byteOrderMark15.getCharsetName();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray6);
        int int10 = byteOrderMark9.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int1 = byteOrderMark0.length();
        int[] intArray9 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) intArray9);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.toString();
        byte[] byteArray19 = byteOrderMark13.getBytes();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        boolean boolean38 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        int[] intArray9 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray9);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark15.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 10, -1]");
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int22 = byteOrderMark21.length();
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        java.lang.String str24 = byteOrderMark21.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.toString();
        boolean boolean27 = byteOrderMark21.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray28 = byteOrderMark23.getBytes();
        byte[] byteArray29 = byteOrderMark23.getBytes();
        byte[] byteArray30 = byteOrderMark23.getBytes();
        java.lang.Class<?> wildcardClass31 = byteArray30.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        java.lang.String str13 = byteOrderMark11.toString();
        int int14 = byteOrderMark11.length();
        java.lang.String str15 = byteOrderMark11.getCharsetName();
        java.lang.Class<?> wildcardClass16 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray10);
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray25);
        int int31 = byteOrderMark29.get((int) (byte) 0);
        java.lang.String str32 = byteOrderMark29.toString();
        boolean boolean33 = byteOrderMark17.equals((java.lang.Object) str32);
        java.lang.String str34 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        java.lang.Class<?> wildcardClass22 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        int int12 = byteOrderMark11.length();
        int int14 = byteOrderMark11.get(1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.toString();
        int int21 = byteOrderMark19.length();
        int int23 = byteOrderMark19.get(0);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = byteOrderMark19.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int11 = byteOrderMark9.get(0);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj14 = null;
        boolean boolean15 = byteOrderMark13.equals(obj14);
        int int16 = byteOrderMark13.length();
        boolean boolean18 = byteOrderMark13.equals((java.lang.Object) 0L);
        int int19 = byteOrderMark13.length();
        boolean boolean20 = byteOrderMark9.equals((java.lang.Object) int19);
        int int22 = byteOrderMark9.get(0);
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) (-1L));
        java.lang.String str27 = byteOrderMark24.toString();
        byte[] byteArray28 = byteOrderMark24.getBytes();
        java.lang.Class<?> wildcardClass29 = byteArray28.getClass();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) wildcardClass29);
        int int31 = byteOrderMark0.length();
        java.lang.String str32 = byteOrderMark0.getCharsetName();
        int int33 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 255 + "'", int22 == 255);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str27, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-32BE" + "'", str32, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark30.length();
        java.lang.String str48 = byteOrderMark30.toString();
        byte[] byteArray49 = byteOrderMark30.getBytes();
        java.lang.String str50 = byteOrderMark30.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str50, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        int int11 = byteOrderMark9.length();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        int int28 = byteOrderMark27.length();
        boolean boolean29 = byteOrderMark9.equals((java.lang.Object) int28);
        int int30 = byteOrderMark9.length();
        byte[] byteArray31 = byteOrderMark9.getBytes();
        java.lang.String str32 = byteOrderMark9.toString();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        int[] intArray4 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray4);
        int[] intArray11 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        boolean boolean15 = byteOrderMark5.equals((java.lang.Object) byteArray14);
        byte[] byteArray16 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 10, -1]");
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        byte[] byteArray17 = byteOrderMark15.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark18.equals(obj19);
        int int21 = byteOrderMark18.length();
        boolean boolean23 = byteOrderMark18.equals((java.lang.Object) 0L);
        int int24 = byteOrderMark18.length();
        int int25 = byteOrderMark18.length();
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        boolean boolean36 = byteOrderMark18.equals((java.lang.Object) intArray32);
        boolean boolean37 = byteOrderMark15.equals((java.lang.Object) intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray32);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark33.length();
        // The following exception was thrown during execution in test generation
        try {
            int int49 = byteOrderMark33.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        int int14 = byteOrderMark13.length();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        int int17 = byteOrderMark13.get((int) (byte) 1);
        byte[] byteArray18 = byteOrderMark13.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark23.equals(obj25);
        byte[] byteArray27 = byteOrderMark23.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int30 = byteOrderMark28.get((int) (byte) 0);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        int int47 = byteOrderMark46.length();
        boolean boolean48 = byteOrderMark28.equals((java.lang.Object) byteOrderMark46);
        int[] intArray58 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray58);
        int int65 = byteOrderMark64.length();
        boolean boolean66 = byteOrderMark46.equals((java.lang.Object) int65);
        byte[] byteArray67 = byteOrderMark46.getBytes();
        int int68 = byteOrderMark46.length();
        byte[] byteArray69 = byteOrderMark46.getBytes();
        int int70 = byteOrderMark46.length();
        boolean boolean71 = byteOrderMark23.equals((java.lang.Object) byteOrderMark46);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 239 + "'", int30 == 239);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 3 + "'", int70 == 3);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass10 = byteArray9.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray9);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray26);
        int int34 = byteOrderMark33.length();
        byte[] byteArray35 = byteOrderMark33.getBytes();
        boolean boolean36 = byteOrderMark15.equals((java.lang.Object) byteArray35);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        int int9 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) 1L);
        java.lang.String str13 = byteOrderMark10.getCharsetName();
        int int14 = byteOrderMark10.length();
        boolean boolean16 = byteOrderMark10.equals((java.lang.Object) (byte) -1);
        byte[] byteArray17 = byteOrderMark10.getBytes();
        java.lang.String str18 = byteOrderMark10.getCharsetName();
        java.lang.String str19 = byteOrderMark10.getCharsetName();
        java.lang.String str20 = byteOrderMark10.toString();
        java.lang.String str21 = byteOrderMark10.getCharsetName();
        java.lang.String str22 = byteOrderMark10.toString();
        int int23 = byteOrderMark10.length();
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark10);
        java.lang.Class<?> wildcardClass25 = byteOrderMark10.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 254 + "'", int9 == 254);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        byte[] byteArray6 = byteOrderMark5.getBytes();
        java.lang.String str7 = byteOrderMark5.toString();
        int int9 = byteOrderMark5.get(0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10, -2, 100]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]" + "'", str7, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray12);
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray32);
        boolean boolean40 = byteOrderMark21.equals((java.lang.Object) byteOrderMark39);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray42 = byteOrderMark41.getBytes();
        int int43 = byteOrderMark41.length();
        int int44 = byteOrderMark41.length();
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray56);
        boolean boolean65 = byteOrderMark41.equals((java.lang.Object) byteOrderMark64);
        java.lang.String str66 = byteOrderMark41.getCharsetName();
        boolean boolean67 = byteOrderMark39.equals((java.lang.Object) byteOrderMark41);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(byteOrderMark41);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "UTF-32BE" + "'", str66, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        int int9 = byteOrderMark4.length();
        byte[] byteArray10 = byteOrderMark4.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean13 = byteOrderMark11.equals((java.lang.Object) (-1L));
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int17 = byteOrderMark15.get(0);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        boolean boolean20 = byteOrderMark11.equals((java.lang.Object) byteOrderMark15);
        byte[] byteArray21 = byteOrderMark15.getBytes();
        int int22 = byteOrderMark15.length();
        boolean boolean23 = byteOrderMark4.equals((java.lang.Object) int22);
        java.lang.Class<?> wildcardClass24 = byteOrderMark4.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 255 + "'", int17 == 255);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        java.lang.String str16 = byteOrderMark11.toString();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray29);
        int int39 = byteOrderMark38.length();
        java.lang.String str40 = byteOrderMark38.getCharsetName();
        byte[] byteArray41 = byteOrderMark38.getBytes();
        boolean boolean42 = byteOrderMark11.equals((java.lang.Object) byteOrderMark38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int45 = byteOrderMark43.get(0);
        boolean boolean47 = byteOrderMark43.equals((java.lang.Object) (short) 0);
        java.lang.String str48 = byteOrderMark43.getCharsetName();
        boolean boolean49 = byteOrderMark11.equals((java.lang.Object) str48);
        int int50 = byteOrderMark11.length();
        int[] intArray62 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark69 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray62);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        boolean boolean72 = byteOrderMark11.equals((java.lang.Object) str71);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str40, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteOrderMark43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 255 + "'", int45 == 255);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-16LE" + "'", str48, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str71, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        java.lang.String str11 = byteOrderMark0.getCharsetName();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int14 = byteOrderMark0.get((int) (short) 1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 254 + "'", int14 == 254);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        java.lang.String str11 = byteOrderMark0.toString();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        int int25 = byteOrderMark23.get(0);
        boolean boolean26 = byteOrderMark0.equals((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray12);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        byte[] byteArray35 = byteOrderMark34.getBytes();
        byte[] byteArray36 = byteOrderMark34.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj38 = null;
        boolean boolean39 = byteOrderMark37.equals(obj38);
        int int40 = byteOrderMark37.length();
        boolean boolean42 = byteOrderMark37.equals((java.lang.Object) 0L);
        int int43 = byteOrderMark37.length();
        int int44 = byteOrderMark37.length();
        int[] intArray51 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("hi!", intArray51);
        boolean boolean55 = byteOrderMark37.equals((java.lang.Object) intArray51);
        boolean boolean56 = byteOrderMark34.equals((java.lang.Object) intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray51);
        int int58 = byteOrderMark57.length();
        java.lang.Class<?> wildcardClass59 = byteOrderMark57.getClass();
        boolean boolean60 = byteOrderMark21.equals((java.lang.Object) wildcardClass59);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.get(1);
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.toString();
        java.lang.String str10 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str10, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        int int13 = byteOrderMark12.length();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) int13);
        java.lang.Object obj15 = null;
        boolean boolean16 = byteOrderMark0.equals(obj15);
        int int18 = byteOrderMark0.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 254 + "'", int18 == 254);
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) '4');
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int35 = byteOrderMark33.get(0);
        boolean boolean37 = byteOrderMark33.equals((java.lang.Object) (short) 0);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        boolean boolean48 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark0.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray50 = byteOrderMark33.getBytes();
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark33.equals(obj51);
        int[] intArray59 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        java.lang.String str63 = byteOrderMark62.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = org.apache.commons.io.ByteOrderMark.UTF_8;
        byte[] byteArray65 = byteOrderMark64.getBytes();
        boolean boolean66 = byteOrderMark62.equals((java.lang.Object) byteArray65);
        boolean boolean67 = byteOrderMark33.equals((java.lang.Object) byteOrderMark62);
        byte[] byteArray68 = byteOrderMark33.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 255 + "'", int35 == 255);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str63, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1, -2]");
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        int[] intArray3 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj6 = null;
        boolean boolean7 = byteOrderMark5.equals(obj6);
        int int8 = byteOrderMark5.length();
        boolean boolean10 = byteOrderMark5.equals((java.lang.Object) 0L);
        int int11 = byteOrderMark5.length();
        boolean boolean13 = byteOrderMark5.equals((java.lang.Object) 3);
        java.lang.String str14 = byteOrderMark5.getCharsetName();
        java.lang.String str15 = byteOrderMark5.getCharsetName();
        java.lang.String str16 = byteOrderMark5.toString();
        byte[] byteArray17 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str19 = byteOrderMark18.getCharsetName();
        int int20 = byteOrderMark18.length();
        int int21 = byteOrderMark18.length();
        java.lang.String str22 = byteOrderMark18.getCharsetName();
        boolean boolean23 = byteOrderMark5.equals((java.lang.Object) str22);
        java.lang.String str24 = byteOrderMark5.toString();
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark5.equals(obj25);
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray38);
        boolean boolean47 = byteOrderMark5.equals((java.lang.Object) intArray38);
        byte[] byteArray48 = byteOrderMark5.getBytes();
        boolean boolean49 = byteOrderMark4.equals((java.lang.Object) byteArray48);
        int[] intArray61 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark69 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray61);
        boolean boolean70 = byteOrderMark4.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[239, 10]");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16BE" + "'", str15, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) (-1L));
        java.lang.String str17 = byteOrderMark14.toString();
        byte[] byteArray18 = byteOrderMark14.getBytes();
        byte[] byteArray19 = byteOrderMark14.getBytes();
        byte[] byteArray20 = byteOrderMark14.getBytes();
        java.lang.Object obj21 = null;
        boolean boolean22 = byteOrderMark14.equals(obj21);
        int int24 = byteOrderMark14.get((int) (short) 0);
        boolean boolean25 = byteOrderMark13.equals((java.lang.Object) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = byteOrderMark13.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str17, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 255 + "'", int24 == 255);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = byteOrderMark9.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray21);
        boolean boolean24 = byteOrderMark14.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        byte[] byteArray25 = byteOrderMark14.getBytes();
        int int27 = byteOrderMark14.get((int) (short) 1);
        java.lang.String str28 = byteOrderMark14.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 97 + "'", int27 == 97);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        java.lang.String str16 = byteOrderMark11.toString();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray29);
        int int39 = byteOrderMark38.length();
        java.lang.String str40 = byteOrderMark38.getCharsetName();
        byte[] byteArray41 = byteOrderMark38.getBytes();
        boolean boolean42 = byteOrderMark11.equals((java.lang.Object) byteOrderMark38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int45 = byteOrderMark43.get(0);
        boolean boolean47 = byteOrderMark43.equals((java.lang.Object) (short) 0);
        java.lang.String str48 = byteOrderMark43.getCharsetName();
        boolean boolean49 = byteOrderMark11.equals((java.lang.Object) str48);
        java.lang.String str50 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str40, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(byteOrderMark43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 255 + "'", int45 == 255);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-16LE" + "'", str48, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str50, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        int[] intArray9 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteArray12);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.get(1);
        byte[] byteArray8 = byteOrderMark0.getBytes();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj37 = null;
        boolean boolean38 = byteOrderMark36.equals(obj37);
        byte[] byteArray39 = byteOrderMark36.getBytes();
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) byteOrderMark36);
        int int41 = byteOrderMark35.length();
        java.lang.String str42 = byteOrderMark35.getCharsetName();
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        boolean boolean53 = byteOrderMark35.equals((java.lang.Object) "hi!");
        int int54 = byteOrderMark35.length();
        boolean boolean55 = byteOrderMark19.equals((java.lang.Object) byteOrderMark35);
        byte[] byteArray56 = byteOrderMark19.getBytes();
        int int57 = byteOrderMark19.length();
        byte[] byteArray58 = byteOrderMark19.getBytes();
        java.lang.Class<?> wildcardClass59 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 3 + "'", int57 == 3);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass11 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        byte[] byteArray5 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int8 = byteOrderMark6.get(0);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 0L);
        int int16 = byteOrderMark10.length();
        boolean boolean17 = byteOrderMark6.equals((java.lang.Object) int16);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark6);
        byte[] byteArray19 = byteOrderMark0.getBytes();
        byte[] byteArray20 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark0.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 255 + "'", int8 == 255);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, -2, -1]");
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        int int14 = byteOrderMark13.length();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        int int21 = byteOrderMark20.length();
        boolean boolean22 = byteOrderMark5.equals((java.lang.Object) byteOrderMark20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray26 = byteOrderMark25.getBytes();
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        boolean boolean43 = byteOrderMark25.equals((java.lang.Object) intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        int[] intArray50 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        java.lang.String str52 = byteOrderMark51.getCharsetName();
        java.lang.Object obj53 = null;
        boolean boolean54 = byteOrderMark51.equals(obj53);
        byte[] byteArray55 = byteOrderMark51.getBytes();
        byte[] byteArray56 = byteOrderMark51.getBytes();
        int[] intArray61 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray61);
        boolean boolean63 = byteOrderMark51.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        boolean boolean64 = byteOrderMark45.equals((java.lang.Object) byteOrderMark51);
        boolean boolean65 = byteOrderMark20.equals((java.lang.Object) byteOrderMark45);
        int int66 = byteOrderMark45.length();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteOrderMark25);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.toString();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        byte[] byteArray26 = byteOrderMark25.getBytes();
        int int27 = byteOrderMark25.length();
        java.lang.String str28 = byteOrderMark25.toString();
        byte[] byteArray29 = byteOrderMark25.getBytes();
        boolean boolean30 = byteOrderMark5.equals((java.lang.Object) byteArray29);
        int int31 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray11 = byteOrderMark10.getBytes();
        int int12 = byteOrderMark10.length();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        java.lang.String str25 = byteOrderMark24.toString();
        int int26 = byteOrderMark24.length();
        boolean boolean27 = byteOrderMark10.equals((java.lang.Object) int26);
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) int26);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = byteOrderMark0.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 4 + "'", int12 == 4);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xA,0x61,0x23]", intArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("", intArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        int int11 = byteOrderMark7.length();
        java.lang.String str12 = byteOrderMark7.getCharsetName();
        int int13 = byteOrderMark7.length();
        java.lang.Class<?> wildcardClass14 = byteOrderMark7.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str18 = byteOrderMark11.getCharsetName();
        int int19 = byteOrderMark11.length();
        byte[] byteArray20 = byteOrderMark11.getBytes();
        java.lang.String str21 = byteOrderMark11.toString();
        java.lang.String str22 = byteOrderMark11.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass18 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        byte[] byteArray5 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int8 = byteOrderMark6.get(0);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 0L);
        int int16 = byteOrderMark10.length();
        boolean boolean17 = byteOrderMark6.equals((java.lang.Object) int16);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark6);
        int int19 = byteOrderMark0.length();
        byte[] byteArray20 = byteOrderMark0.getBytes();
        java.lang.String str21 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 255 + "'", int8 == 255);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int12 = byteOrderMark10.get(0);
        byte[] byteArray13 = byteOrderMark10.getBytes();
        byte[] byteArray14 = byteOrderMark10.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean17 = byteOrderMark15.equals((java.lang.Object) 1L);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        boolean boolean19 = byteOrderMark10.equals((java.lang.Object) byteOrderMark15);
        byte[] byteArray20 = byteOrderMark10.getBytes();
        boolean boolean21 = byteOrderMark9.equals((java.lang.Object) byteOrderMark10);
        int int23 = byteOrderMark10.get((int) (short) 1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 255 + "'", int12 == 255);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj3 = null;
        boolean boolean4 = byteOrderMark2.equals(obj3);
        byte[] byteArray5 = byteOrderMark2.getBytes();
        java.lang.String str6 = byteOrderMark2.toString();
        java.lang.String str7 = byteOrderMark2.getCharsetName();
        java.lang.String str8 = byteOrderMark2.toString();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        boolean boolean25 = byteOrderMark2.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]: 0xA,0x61,0x23]", intArray18);
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        boolean boolean10 = byteOrderMark3.equals((java.lang.Object) '\ufeff');
        int int11 = byteOrderMark3.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray21);
        boolean boolean24 = byteOrderMark14.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        byte[] byteArray25 = byteOrderMark14.getBytes();
        int int27 = byteOrderMark14.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        int int18 = byteOrderMark17.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        byte[] byteArray20 = byteOrderMark17.getBytes();
        java.lang.String str21 = byteOrderMark17.toString();
        int int23 = byteOrderMark17.get((int) (byte) 0);
        boolean boolean24 = byteOrderMark15.equals((java.lang.Object) byteOrderMark17);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int27 = byteOrderMark25.get(0);
        byte[] byteArray28 = byteOrderMark25.getBytes();
        byte[] byteArray29 = byteOrderMark25.getBytes();
        int int30 = byteOrderMark25.length();
        int[] intArray41 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray41);
        boolean boolean49 = byteOrderMark25.equals((java.lang.Object) byteOrderMark48);
        boolean boolean50 = byteOrderMark15.equals((java.lang.Object) byteOrderMark48);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj52 = null;
        boolean boolean53 = byteOrderMark51.equals(obj52);
        int int54 = byteOrderMark51.length();
        boolean boolean56 = byteOrderMark51.equals((java.lang.Object) 0L);
        int int57 = byteOrderMark51.length();
        boolean boolean58 = byteOrderMark48.equals((java.lang.Object) int57);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteOrderMark25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 255 + "'", int27 == 255);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(byteOrderMark51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2 + "'", int54 == 2);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray10);
        int int18 = byteOrderMark17.length();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark17.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int int30 = byteOrderMark11.length();
        int[] intArray41 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray41);
        boolean boolean49 = byteOrderMark11.equals((java.lang.Object) intArray41);
        java.lang.String str50 = byteOrderMark11.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str50, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean21 = byteOrderMark3.equals((java.lang.Object) intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray14);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.Object obj9 = null;
        boolean boolean10 = byteOrderMark0.equals(obj9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj12 = null;
        boolean boolean13 = byteOrderMark11.equals(obj12);
        int int14 = byteOrderMark11.length();
        boolean boolean16 = byteOrderMark11.equals((java.lang.Object) 0L);
        int int17 = byteOrderMark11.length();
        int int18 = byteOrderMark11.length();
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) intArray25);
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray37);
        int int42 = byteOrderMark41.length();
        boolean boolean43 = byteOrderMark11.equals((java.lang.Object) byteOrderMark41);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean46 = byteOrderMark44.equals((java.lang.Object) 1L);
        java.lang.String str47 = byteOrderMark44.getCharsetName();
        int int48 = byteOrderMark44.length();
        boolean boolean50 = byteOrderMark44.equals((java.lang.Object) (byte) -1);
        byte[] byteArray51 = byteOrderMark44.getBytes();
        java.lang.String str52 = byteOrderMark44.getCharsetName();
        java.lang.String str53 = byteOrderMark44.getCharsetName();
        java.lang.String str54 = byteOrderMark44.toString();
        int int55 = byteOrderMark44.length();
        int int56 = byteOrderMark44.length();
        boolean boolean57 = byteOrderMark41.equals((java.lang.Object) byteOrderMark44);
        int int59 = byteOrderMark41.get(2);
        java.lang.String str60 = byteOrderMark41.getCharsetName();
        boolean boolean61 = byteOrderMark0.equals((java.lang.Object) byteOrderMark41);
        java.lang.String str62 = byteOrderMark41.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteOrderMark11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteOrderMark44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-16LE" + "'", str47, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-16LE" + "'", str52, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-16LE" + "'", str53, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str54, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 35 + "'", int59 == 35);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str60, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str62, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark9.equals(obj13);
        java.lang.String str15 = byteOrderMark9.getCharsetName();
        java.lang.String str16 = byteOrderMark9.toString();
        int int17 = byteOrderMark9.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str19 = byteOrderMark18.toString();
        java.lang.String str20 = byteOrderMark18.toString();
        int int22 = byteOrderMark18.get(2);
        boolean boolean24 = byteOrderMark18.equals((java.lang.Object) (byte) 10);
        byte[] byteArray25 = byteOrderMark18.getBytes();
        int[] intArray35 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray35);
        boolean boolean42 = byteOrderMark18.equals((java.lang.Object) byteOrderMark41);
        int int43 = byteOrderMark18.length();
        byte[] byteArray44 = byteOrderMark18.getBytes();
        java.lang.String str45 = byteOrderMark18.toString();
        java.lang.String str46 = byteOrderMark18.getCharsetName();
        int int47 = byteOrderMark18.length();
        boolean boolean48 = byteOrderMark9.equals((java.lang.Object) byteOrderMark18);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean51 = byteOrderMark49.equals((java.lang.Object) 1L);
        java.lang.String str52 = byteOrderMark49.getCharsetName();
        int int53 = byteOrderMark49.length();
        boolean boolean55 = byteOrderMark49.equals((java.lang.Object) (byte) -1);
        byte[] byteArray56 = byteOrderMark49.getBytes();
        java.lang.String str57 = byteOrderMark49.getCharsetName();
        java.lang.String str58 = byteOrderMark49.getCharsetName();
        java.lang.String str59 = byteOrderMark49.toString();
        int int60 = byteOrderMark49.length();
        java.lang.String str61 = byteOrderMark49.toString();
        java.lang.String str62 = byteOrderMark49.getCharsetName();
        boolean boolean63 = byteOrderMark18.equals((java.lang.Object) byteOrderMark49);
        int[] intArray70 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray70);
        java.lang.Class<?> wildcardClass74 = byteOrderMark73.getClass();
        boolean boolean75 = byteOrderMark18.equals((java.lang.Object) wildcardClass74);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 254 + "'", int22 == 254);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str45, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-32BE" + "'", str46, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteOrderMark49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-16LE" + "'", str52, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-16LE" + "'", str57, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "UTF-16LE" + "'", str58, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str59, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str61, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UTF-16LE" + "'", str62, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str18 = byteOrderMark11.getCharsetName();
        int int19 = byteOrderMark11.length();
        byte[] byteArray20 = byteOrderMark11.getBytes();
        java.lang.Class<?> wildcardClass21 = byteArray20.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int9 = byteOrderMark8.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark8.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) wildcardClass10);
        int int12 = byteOrderMark0.length();
        java.lang.String str13 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int16 = byteOrderMark14.get(0);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int int19 = byteOrderMark14.length();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark14.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 255 + "'", int16 == 255);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str25 = byteOrderMark0.getCharsetName();
        byte[] byteArray26 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass27 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-32BE" + "'", str25, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) (-1L));
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        byte[] byteArray16 = byteOrderMark12.getBytes();
        boolean boolean17 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) boolean17);
        java.lang.String str19 = byteOrderMark0.getCharsetName();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.Object obj22 = null;
        boolean boolean23 = byteOrderMark0.equals(obj22);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        int int13 = byteOrderMark9.length();
        java.lang.String str14 = byteOrderMark9.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        java.lang.String str19 = byteOrderMark15.getCharsetName();
        byte[] byteArray20 = byteOrderMark15.getBytes();
        java.lang.String str21 = byteOrderMark15.getCharsetName();
        int int23 = byteOrderMark15.get(0);
        boolean boolean24 = byteOrderMark9.equals((java.lang.Object) byteOrderMark15);
        java.lang.Class<?> wildcardClass25 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16BE" + "'", str21, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj37 = null;
        boolean boolean38 = byteOrderMark36.equals(obj37);
        byte[] byteArray39 = byteOrderMark36.getBytes();
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) byteOrderMark36);
        int int41 = byteOrderMark35.length();
        java.lang.String str42 = byteOrderMark35.getCharsetName();
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        boolean boolean53 = byteOrderMark35.equals((java.lang.Object) "hi!");
        int int54 = byteOrderMark35.length();
        boolean boolean55 = byteOrderMark19.equals((java.lang.Object) byteOrderMark35);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = byteOrderMark35.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        int int56 = byteOrderMark47.length();
        java.lang.String str57 = byteOrderMark47.getCharsetName();
        java.lang.Object obj58 = null;
        boolean boolean59 = byteOrderMark47.equals(obj58);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean62 = byteOrderMark60.equals((java.lang.Object) 1L);
        java.lang.String str63 = byteOrderMark60.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean65 = byteOrderMark60.equals((java.lang.Object) byteOrderMark64);
        java.lang.String str66 = byteOrderMark60.toString();
        java.lang.String str67 = byteOrderMark60.toString();
        int[] intArray75 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("hi!", intArray75);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray75);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("hi!", intArray75);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray75);
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean82 = byteOrderMark80.equals((java.lang.Object) (-1L));
        java.lang.String str83 = byteOrderMark80.toString();
        java.lang.String str84 = byteOrderMark80.getCharsetName();
        boolean boolean85 = byteOrderMark79.equals((java.lang.Object) byteOrderMark80);
        java.lang.String str86 = byteOrderMark79.getCharsetName();
        int int87 = byteOrderMark79.length();
        byte[] byteArray88 = byteOrderMark79.getBytes();
        java.lang.String str89 = byteOrderMark79.getCharsetName();
        boolean boolean90 = byteOrderMark60.equals((java.lang.Object) byteOrderMark79);
        java.lang.String str91 = byteOrderMark79.toString();
        java.lang.String str92 = byteOrderMark79.getCharsetName();
        boolean boolean93 = byteOrderMark47.equals((java.lang.Object) str92);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-16LE" + "'", str57, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteOrderMark60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-16LE" + "'", str63, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str66, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str67, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str83, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UTF-16LE" + "'", str84, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str86, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 3 + "'", int87 == 3);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str89, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str91, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str92, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0x0,0xA,0xFF]", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        java.lang.String str19 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        int[] intArray4 = new int[] { 1, 35, 3 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        byte[] byteArray10 = byteOrderMark6.getBytes();
        byte[] byteArray11 = byteOrderMark6.getBytes();
        int int12 = byteOrderMark6.length();
        boolean boolean13 = byteOrderMark5.equals((java.lang.Object) byteOrderMark6);
        int int14 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[1, 35, 3]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_32LE;
        boolean boolean18 = byteOrderMark16.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        java.lang.Class<?> wildcardClass19 = byteOrderMark16.getClass();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        byte[] byteArray21 = byteOrderMark15.getBytes();
        boolean boolean22 = byteOrderMark13.equals((java.lang.Object) byteOrderMark15);
        int int23 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int int14 = byteOrderMark11.get((int) (byte) 1);
        java.lang.String str15 = byteOrderMark11.toString();
        java.lang.String str16 = byteOrderMark11.toString();
        java.lang.String str17 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        java.lang.String str30 = byteOrderMark29.toString();
        byte[] byteArray31 = byteOrderMark29.getBytes();
        byte[] byteArray32 = byteOrderMark29.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray34 = byteOrderMark33.getBytes();
        int int35 = byteOrderMark33.length();
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        byte[] byteArray37 = byteOrderMark33.getBytes();
        boolean boolean38 = byteOrderMark29.equals((java.lang.Object) byteArray37);
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) 1L);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        int int10 = byteOrderMark6.length();
        boolean boolean12 = byteOrderMark6.equals((java.lang.Object) (byte) -1);
        byte[] byteArray13 = byteOrderMark6.getBytes();
        java.lang.String str14 = byteOrderMark6.getCharsetName();
        java.lang.String str15 = byteOrderMark6.getCharsetName();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray23);
        boolean boolean28 = byteOrderMark6.equals((java.lang.Object) byteOrderMark27);
        java.lang.String str29 = byteOrderMark27.getCharsetName();
        int int31 = byteOrderMark27.get((int) (short) 0);
        java.lang.String str32 = byteOrderMark27.toString();
        byte[] byteArray33 = byteOrderMark27.getBytes();
        boolean boolean34 = byteOrderMark5.equals((java.lang.Object) byteArray33);
        java.lang.String str35 = byteOrderMark5.getCharsetName();
        java.lang.String str36 = byteOrderMark5.toString();
        int int37 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str35, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]" + "'", str36, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        int int8 = byteOrderMark0.length();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 0L);
        int int16 = byteOrderMark10.length();
        int int17 = byteOrderMark10.length();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        boolean boolean28 = byteOrderMark10.equals((java.lang.Object) intArray24);
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray36);
        int int41 = byteOrderMark40.length();
        boolean boolean42 = byteOrderMark10.equals((java.lang.Object) byteOrderMark40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int45 = byteOrderMark43.get(0);
        boolean boolean47 = byteOrderMark43.equals((java.lang.Object) (short) 0);
        int[] intArray54 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        boolean boolean58 = byteOrderMark43.equals((java.lang.Object) byteOrderMark57);
        boolean boolean59 = byteOrderMark10.equals((java.lang.Object) byteOrderMark43);
        byte[] byteArray60 = byteOrderMark43.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int66 = byteOrderMark64.get((int) (byte) 0);
        byte[] byteArray67 = byteOrderMark64.getBytes();
        byte[] byteArray68 = byteOrderMark64.getBytes();
        boolean boolean69 = byteOrderMark61.equals((java.lang.Object) byteOrderMark64);
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int72 = byteOrderMark70.get(0);
        java.lang.String str73 = byteOrderMark70.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj75 = null;
        boolean boolean76 = byteOrderMark74.equals(obj75);
        int int77 = byteOrderMark74.length();
        boolean boolean79 = byteOrderMark74.equals((java.lang.Object) 0L);
        int int80 = byteOrderMark74.length();
        boolean boolean81 = byteOrderMark70.equals((java.lang.Object) int80);
        int int83 = byteOrderMark70.get(0);
        boolean boolean84 = byteOrderMark61.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark85 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean87 = byteOrderMark85.equals((java.lang.Object) (-1L));
        java.lang.String str88 = byteOrderMark85.toString();
        byte[] byteArray89 = byteOrderMark85.getBytes();
        java.lang.Class<?> wildcardClass90 = byteArray89.getClass();
        boolean boolean91 = byteOrderMark61.equals((java.lang.Object) wildcardClass90);
        boolean boolean92 = byteOrderMark43.equals((java.lang.Object) wildcardClass90);
        boolean boolean93 = byteOrderMark0.equals((java.lang.Object) wildcardClass90);
        byte[] byteArray94 = byteOrderMark0.getBytes();
        java.lang.String str95 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteOrderMark43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 255 + "'", int45 == 255);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark61);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 239 + "'", int66 == 239);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(byteOrderMark70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 255 + "'", int72 == 255);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "UTF-16LE" + "'", str73, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 255 + "'", int83 == 255);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(byteOrderMark85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str88, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(byteArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray94), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str95, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean4 = byteOrderMark2.equals((java.lang.Object) (-1L));
        java.lang.String str5 = byteOrderMark2.getCharsetName();
        java.lang.String str6 = byteOrderMark2.getCharsetName();
        boolean boolean7 = byteOrderMark0.equals((java.lang.Object) str6);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str31 = byteOrderMark0.toString();
        java.lang.String str32 = byteOrderMark0.getCharsetName();
        int int33 = byteOrderMark0.length();
        int int34 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass35 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-32BE" + "'", str32, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        java.lang.String str13 = byteOrderMark11.getCharsetName();
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        java.lang.String str15 = byteOrderMark11.getCharsetName();
        int int16 = byteOrderMark11.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str43 = byteOrderMark42.toString();
        java.lang.String str44 = byteOrderMark42.toString();
        int int46 = byteOrderMark42.get(2);
        boolean boolean48 = byteOrderMark42.equals((java.lang.Object) (byte) 10);
        byte[] byteArray49 = byteOrderMark42.getBytes();
        boolean boolean50 = byteOrderMark41.equals((java.lang.Object) byteOrderMark42);
        java.lang.String str51 = byteOrderMark41.toString();
        boolean boolean52 = byteOrderMark19.equals((java.lang.Object) str51);
        java.lang.Class<?> wildcardClass53 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str43, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str44, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 254 + "'", int46 == 254);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str51, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        java.lang.String str12 = byteOrderMark11.toString();
        java.lang.String str13 = byteOrderMark11.toString();
        boolean boolean15 = byteOrderMark11.equals((java.lang.Object) true);
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) "UTF-32BE");
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray27);
        boolean boolean34 = byteOrderMark11.equals((java.lang.Object) intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray27);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        byte[] byteArray24 = byteOrderMark21.getBytes();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.toString();
        java.lang.Class<?> wildcardClass27 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray33);
        java.lang.String str42 = byteOrderMark41.getCharsetName();
        boolean boolean43 = byteOrderMark21.equals((java.lang.Object) byteOrderMark41);
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray49);
        boolean boolean52 = byteOrderMark41.equals((java.lang.Object) byteOrderMark51);
        java.lang.String str53 = byteOrderMark41.toString();
        int int54 = byteOrderMark41.length();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str42, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str53, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        byte[] byteArray24 = byteOrderMark21.getBytes();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        int int26 = byteOrderMark21.length();
        java.lang.String str27 = byteOrderMark21.toString();
        byte[] byteArray28 = byteOrderMark21.getBytes();
        java.lang.String str29 = byteOrderMark21.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int31 = byteOrderMark21.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str27, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        java.lang.String str17 = byteOrderMark13.toString();
        byte[] byteArray18 = byteOrderMark13.getBytes();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray30);
        java.lang.String str39 = byteOrderMark38.getCharsetName();
        int[] intArray45 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray45);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray45);
        boolean boolean48 = byteOrderMark38.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark13.equals((java.lang.Object) boolean48);
        int int50 = byteOrderMark13.length();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str39, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        java.lang.String str9 = byteOrderMark5.toString();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.getCharsetName();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        java.lang.Class<?> wildcardClass24 = intArray13.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj20 = null;
        boolean boolean21 = byteOrderMark19.equals(obj20);
        byte[] byteArray22 = byteOrderMark19.getBytes();
        java.lang.String str23 = byteOrderMark19.toString();
        byte[] byteArray24 = byteOrderMark19.getBytes();
        boolean boolean25 = byteOrderMark17.equals((java.lang.Object) byteOrderMark19);
        int int26 = byteOrderMark17.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        byte[] byteArray21 = byteOrderMark9.getBytes();
        java.lang.String str22 = byteOrderMark9.getCharsetName();
        java.lang.String str23 = byteOrderMark9.getCharsetName();
        int int24 = byteOrderMark9.length();
        java.lang.String str25 = byteOrderMark9.getCharsetName();
        java.lang.Class<?> wildcardClass26 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int1 = byteOrderMark0.length();
        int int3 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) 1L);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        int int10 = byteOrderMark6.length();
        java.lang.String str11 = byteOrderMark6.toString();
        byte[] byteArray12 = byteOrderMark6.getBytes();
        byte[] byteArray13 = byteOrderMark6.getBytes();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) byteArray13);
        java.lang.String str15 = byteOrderMark0.getCharsetName();
        java.lang.String str16 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = byteOrderMark0.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 254 + "'", int3 == 254);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16BE" + "'", str15, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16BE" + "'", str16, "UTF-16BE");
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = byteOrderMark0.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray7);
        int int12 = byteOrderMark11.length();
        java.lang.String str13 = byteOrderMark11.getCharsetName();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = byteOrderMark0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) 1L);
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        int int12 = byteOrderMark8.length();
        boolean boolean14 = byteOrderMark8.equals((java.lang.Object) (byte) -1);
        byte[] byteArray15 = byteOrderMark8.getBytes();
        java.lang.String str16 = byteOrderMark8.getCharsetName();
        java.lang.String str17 = byteOrderMark8.getCharsetName();
        java.lang.String str18 = byteOrderMark8.getCharsetName();
        boolean boolean19 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray20 = byteOrderMark4.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray22 = byteOrderMark21.getBytes();
        int int23 = byteOrderMark21.length();
        int int24 = byteOrderMark21.length();
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray36);
        boolean boolean45 = byteOrderMark21.equals((java.lang.Object) byteOrderMark44);
        java.lang.String str46 = byteOrderMark21.getCharsetName();
        byte[] byteArray47 = byteOrderMark21.getBytes();
        boolean boolean48 = byteOrderMark4.equals((java.lang.Object) byteArray47);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 4 + "'", int23 == 4);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-32BE" + "'", str46, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str15 = byteOrderMark14.toString();
        java.lang.String str16 = byteOrderMark14.toString();
        int int18 = byteOrderMark14.get(2);
        byte[] byteArray19 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int22 = byteOrderMark20.get(0);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark24.equals(obj25);
        int int27 = byteOrderMark24.length();
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) 0L);
        int int30 = byteOrderMark24.length();
        boolean boolean31 = byteOrderMark20.equals((java.lang.Object) int30);
        boolean boolean32 = byteOrderMark14.equals((java.lang.Object) byteOrderMark20);
        byte[] byteArray33 = byteOrderMark20.getBytes();
        java.lang.String str34 = byteOrderMark20.getCharsetName();
        boolean boolean35 = byteOrderMark13.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str36 = byteOrderMark13.toString();
        java.lang.String str37 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean40 = byteOrderMark38.equals((java.lang.Object) 1L);
        java.lang.String str41 = byteOrderMark38.getCharsetName();
        int int42 = byteOrderMark38.length();
        java.lang.String str43 = byteOrderMark38.toString();
        byte[] byteArray44 = byteOrderMark38.getBytes();
        byte[] byteArray45 = byteOrderMark38.getBytes();
        boolean boolean46 = byteOrderMark13.equals((java.lang.Object) byteOrderMark38);
        byte[] byteArray47 = byteOrderMark38.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 254 + "'", int18 == 254);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 255 + "'", int22 == 255);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str36, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str37, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, -2]");
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int1 = byteOrderMark0.length();
        int int3 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark6.equals(obj7);
        byte[] byteArray9 = byteOrderMark6.getBytes();
        java.lang.String str10 = byteOrderMark6.toString();
        java.lang.String str11 = byteOrderMark6.getCharsetName();
        java.lang.String str12 = byteOrderMark6.toString();
        byte[] byteArray13 = byteOrderMark6.getBytes();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) byteOrderMark6);
        int int15 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 254 + "'", int3 == 254);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str10, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16BE" + "'", str11, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str12, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        int int23 = byteOrderMark21.get(1);
        int int24 = byteOrderMark21.length();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray17 = byteOrderMark16.getBytes();
        byte[] byteArray18 = byteOrderMark16.getBytes();
        boolean boolean19 = byteOrderMark0.equals((java.lang.Object) byteArray18);
        java.lang.Class<?> wildcardClass20 = byteArray18.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        java.lang.String str13 = byteOrderMark11.toString();
        int int15 = byteOrderMark11.get((int) (short) 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xA,0x61,0x23]", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        byte[] byteArray5 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int8 = byteOrderMark6.get(0);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 0L);
        int int16 = byteOrderMark10.length();
        boolean boolean17 = byteOrderMark6.equals((java.lang.Object) int16);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark6);
        java.lang.String str19 = byteOrderMark6.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str37 = byteOrderMark36.toString();
        java.lang.String str38 = byteOrderMark36.toString();
        int int40 = byteOrderMark36.get(2);
        boolean boolean42 = byteOrderMark36.equals((java.lang.Object) (byte) 10);
        byte[] byteArray43 = byteOrderMark36.getBytes();
        byte[] byteArray44 = byteOrderMark36.getBytes();
        int int45 = byteOrderMark36.length();
        byte[] byteArray46 = byteOrderMark36.getBytes();
        java.lang.Class<?> wildcardClass47 = byteOrderMark36.getClass();
        boolean boolean48 = byteOrderMark35.equals((java.lang.Object) byteOrderMark36);
        byte[] byteArray49 = byteOrderMark35.getBytes();
        boolean boolean50 = byteOrderMark6.equals((java.lang.Object) byteOrderMark35);
        int[] intArray60 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray60);
        int int68 = byteOrderMark66.get(2);
        byte[] byteArray69 = byteOrderMark66.getBytes();
        boolean boolean70 = byteOrderMark6.equals((java.lang.Object) byteOrderMark66);
        int int71 = byteOrderMark66.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 255 + "'", int8 == 255);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str37, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str38, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 254 + "'", int40 == 254);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 4 + "'", int45 == 4);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 35 + "'", int68 == 35);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 3 + "'", int71 == 3);
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        int int19 = byteOrderMark17.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 97 + "'", int19 == 97);
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray14);
        java.lang.String str26 = byteOrderMark25.getCharsetName();
        int int27 = byteOrderMark25.length();
        int int28 = byteOrderMark25.length();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        byte[] byteArray19 = byteOrderMark0.getBytes();
        int int20 = byteOrderMark0.length();
        java.lang.String str21 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        boolean boolean40 = byteOrderMark22.equals((java.lang.Object) intArray33);
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) intArray33);
        java.lang.String str42 = byteOrderMark0.toString();
        java.lang.String str43 = byteOrderMark0.getCharsetName();
        java.lang.String str44 = byteOrderMark0.toString();
        int[] intArray48 = new int[] { (byte) -1 };
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray48);
        boolean boolean51 = byteOrderMark0.equals((java.lang.Object) intArray48);
        int int53 = byteOrderMark0.get((int) (short) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16BE" + "'", str21, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str42, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16BE" + "'", str43, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str44, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 254 + "'", int53 == 254);
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (-1.0f));
        int int7 = byteOrderMark0.length();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) 100.0f);
        int[] intArray16 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        byte[] byteArray21 = byteOrderMark19.getBytes();
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 10, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-8" + "'", str22, "UTF-8");
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0x0,0xA,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        int int27 = byteOrderMark23.length();
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        boolean boolean44 = byteOrderMark23.equals((java.lang.Object) intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray37);
        java.lang.Class<?> wildcardClass46 = byteOrderMark45.getClass();
        boolean boolean47 = byteOrderMark17.equals((java.lang.Object) wildcardClass46);
        java.lang.String str48 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        java.lang.String str20 = byteOrderMark17.toString();
        byte[] byteArray21 = byteOrderMark17.getBytes();
        int int23 = byteOrderMark17.get((int) (short) 0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        int int23 = byteOrderMark21.length();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str16 = byteOrderMark0.getCharsetName();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray24);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = byteOrderMark0.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        java.lang.String str12 = byteOrderMark0.toString();
        int int13 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str12, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean11 = byteOrderMark9.equals((java.lang.Object) 1L);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        int int13 = byteOrderMark9.length();
        java.lang.String str14 = byteOrderMark9.toString();
        java.lang.String str15 = byteOrderMark9.getCharsetName();
        int int16 = byteOrderMark9.length();
        java.lang.String str17 = byteOrderMark9.toString();
        java.lang.String str18 = byteOrderMark9.getCharsetName();
        java.lang.String str19 = byteOrderMark9.toString();
        int int20 = byteOrderMark9.length();
        boolean boolean21 = byteOrderMark7.equals((java.lang.Object) byteOrderMark9);
        java.lang.String str22 = byteOrderMark7.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.toString();
        java.lang.String str27 = byteOrderMark23.toString();
        java.lang.String str28 = byteOrderMark23.toString();
        boolean boolean29 = byteOrderMark7.equals((java.lang.Object) byteOrderMark23);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str17, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str27, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str28, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark6.equals(obj7);
        int int9 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark6.equals((java.lang.Object) 0L);
        byte[] byteArray12 = byteOrderMark6.getBytes();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteArray12);
        int int14 = byteOrderMark0.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark28.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray19 = byteOrderMark18.getBytes();
        int int20 = byteOrderMark18.length();
        int int21 = byteOrderMark18.length();
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray33);
        boolean boolean42 = byteOrderMark18.equals((java.lang.Object) byteOrderMark41);
        boolean boolean43 = byteOrderMark17.equals((java.lang.Object) boolean42);
        java.lang.String str44 = byteOrderMark17.getCharsetName();
        java.lang.Class<?> wildcardClass45 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str44, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        int int21 = byteOrderMark19.get((int) (short) 1);
        java.lang.String str22 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 97 + "'", int21 == 97);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str27 = byteOrderMark13.getCharsetName();
        int int29 = byteOrderMark13.get((int) (byte) 1);
        int int31 = byteOrderMark13.get((int) (byte) 1);
        java.lang.String str32 = byteOrderMark13.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int34 = byteOrderMark13.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-32BE" + "'", str27, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 97 + "'", int31 == 97);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-32BE" + "'", str32, "UTF-32BE");
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = byteOrderMark0.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) wildcardClass40);
        java.lang.String str42 = byteOrderMark0.toString();
        int int44 = byteOrderMark0.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str42, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        int int20 = byteOrderMark17.length();
        java.lang.Object obj21 = null;
        boolean boolean22 = byteOrderMark17.equals(obj21);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean37 = byteOrderMark35.equals((java.lang.Object) (-1L));
        java.lang.String str38 = byteOrderMark35.toString();
        java.lang.String str39 = byteOrderMark35.getCharsetName();
        boolean boolean40 = byteOrderMark34.equals((java.lang.Object) byteOrderMark35);
        java.lang.String str41 = byteOrderMark34.getCharsetName();
        int int42 = byteOrderMark34.length();
        byte[] byteArray43 = byteOrderMark34.getBytes();
        java.lang.String str44 = byteOrderMark34.getCharsetName();
        boolean boolean45 = byteOrderMark17.equals((java.lang.Object) str44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = byteOrderMark17.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str38, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-16LE" + "'", str39, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str41, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str44, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.toString();
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int17 = byteOrderMark16.length();
        java.lang.String str18 = byteOrderMark16.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        int int23 = byteOrderMark19.length();
        boolean boolean25 = byteOrderMark19.equals((java.lang.Object) (byte) -1);
        java.lang.String str26 = byteOrderMark19.toString();
        boolean boolean27 = byteOrderMark16.equals((java.lang.Object) str26);
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) byteOrderMark16);
        byte[] byteArray29 = byteOrderMark16.getBytes();
        java.lang.String str30 = byteOrderMark16.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16BE" + "'", str3, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray12);
        int int22 = byteOrderMark21.length();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark28.getCharsetName();
        byte[] byteArray31 = byteOrderMark28.getBytes();
        java.lang.String str32 = byteOrderMark28.getCharsetName();
        int int33 = byteOrderMark28.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-32BE" + "'", str30, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-32BE" + "'", str32, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean32 = byteOrderMark30.equals((java.lang.Object) 1L);
        java.lang.String str33 = byteOrderMark30.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean35 = byteOrderMark30.equals((java.lang.Object) byteOrderMark34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean38 = byteOrderMark36.equals((java.lang.Object) (-1L));
        java.lang.String str39 = byteOrderMark36.toString();
        int int40 = byteOrderMark36.length();
        boolean boolean41 = byteOrderMark34.equals((java.lang.Object) int40);
        int int42 = byteOrderMark34.length();
        byte[] byteArray43 = byteOrderMark34.getBytes();
        boolean boolean44 = byteOrderMark0.equals((java.lang.Object) byteArray43);
        java.lang.String str45 = byteOrderMark0.toString();
        java.lang.String str46 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteOrderMark30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str39, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str45, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-16LE" + "'", str46, "UTF-16LE");
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.toString();
        boolean boolean27 = byteOrderMark21.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray28 = byteOrderMark23.getBytes();
        java.lang.Class<?> wildcardClass29 = byteOrderMark23.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark0.getBytes();
        byte[] byteArray17 = byteOrderMark0.getBytes();
        java.lang.String str18 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        java.lang.String str27 = byteOrderMark23.getCharsetName();
        int int28 = byteOrderMark23.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray30 = byteOrderMark29.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean33 = byteOrderMark31.equals((java.lang.Object) 1L);
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean36 = byteOrderMark31.equals((java.lang.Object) byteOrderMark35);
        boolean boolean37 = byteOrderMark29.equals((java.lang.Object) byteOrderMark31);
        java.lang.String str38 = byteOrderMark31.toString();
        boolean boolean39 = byteOrderMark23.equals((java.lang.Object) str38);
        boolean boolean40 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int42 = byteOrderMark23.get(0);
        int[] intArray53 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray53);
        int int61 = byteOrderMark60.length();
        int[] intArray72 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray72);
        boolean boolean80 = byteOrderMark60.equals((java.lang.Object) byteOrderMark79);
        int int81 = byteOrderMark60.length();
        boolean boolean82 = byteOrderMark23.equals((java.lang.Object) byteOrderMark60);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = byteOrderMark60.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16BE" + "'", str27, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str38, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 254 + "'", int42 == 254);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 3 + "'", int61 == 3);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray19 = byteOrderMark18.getBytes();
        int int20 = byteOrderMark18.length();
        boolean boolean22 = byteOrderMark18.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        boolean boolean23 = byteOrderMark17.equals((java.lang.Object) byteOrderMark18);
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str47 = byteOrderMark46.toString();
        java.lang.String str48 = byteOrderMark46.toString();
        int int50 = byteOrderMark46.get(2);
        boolean boolean52 = byteOrderMark46.equals((java.lang.Object) (byte) 10);
        byte[] byteArray53 = byteOrderMark46.getBytes();
        boolean boolean54 = byteOrderMark45.equals((java.lang.Object) byteOrderMark46);
        java.lang.String str55 = byteOrderMark45.toString();
        boolean boolean56 = byteOrderMark17.equals((java.lang.Object) byteOrderMark45);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str47, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str48, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 254 + "'", int50 == 254);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str55, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        int[] intArray4 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray4);
        int[] intArray11 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        boolean boolean15 = byteOrderMark5.equals((java.lang.Object) byteArray14);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark5.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        java.lang.Class<?> wildcardClass19 = byteArray18.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]", intArray11);
        java.lang.Class<?> wildcardClass20 = intArray11.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray10 = byteOrderMark8.getBytes();
        int int11 = byteOrderMark8.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        java.lang.String str21 = byteOrderMark12.getCharsetName();
        java.lang.String str22 = byteOrderMark12.getCharsetName();
        boolean boolean23 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) boolean23);
        java.lang.String str25 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        java.lang.String str22 = byteOrderMark21.getCharsetName();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        int int4 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass5 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        int int13 = byteOrderMark12.length();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) int13);
        java.lang.String str15 = byteOrderMark0.getCharsetName();
        int int16 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        int int9 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) "hi!");
        java.lang.String str21 = byteOrderMark0.toString();
        java.lang.String str22 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-32BE" + "'", str22, "UTF-32BE");
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        int[] intArray4 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray4);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[255]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1]");
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        java.lang.String str22 = byteOrderMark21.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = byteOrderMark21.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray10);
        int int19 = byteOrderMark17.get(0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int13 = byteOrderMark11.get((int) (short) 1);
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        int[] intArray21 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray21);
        byte[] byteArray24 = byteOrderMark23.getBytes();
        byte[] byteArray25 = byteOrderMark23.getBytes();
        boolean boolean26 = byteOrderMark11.equals((java.lang.Object) byteArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str28 = byteOrderMark27.toString();
        java.lang.String str29 = byteOrderMark27.toString();
        java.lang.String str30 = byteOrderMark27.getCharsetName();
        java.lang.String str31 = byteOrderMark27.getCharsetName();
        java.lang.String str32 = byteOrderMark27.getCharsetName();
        boolean boolean33 = byteOrderMark11.equals((java.lang.Object) str32);
        java.lang.String str34 = byteOrderMark11.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-32BE" + "'", str30, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-32BE" + "'", str31, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-32BE" + "'", str32, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass17 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark5);
        java.lang.Object obj10 = null;
        boolean boolean11 = byteOrderMark5.equals(obj10);
        int int12 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray47 = byteOrderMark33.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, -2]");
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        java.lang.String str13 = byteOrderMark11.getCharsetName();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        java.lang.String str21 = byteOrderMark20.getCharsetName();
        byte[] byteArray22 = byteOrderMark20.getBytes();
        int int23 = byteOrderMark20.length();
        byte[] byteArray24 = byteOrderMark20.getBytes();
        boolean boolean25 = byteOrderMark11.equals((java.lang.Object) byteArray24);
        byte[] byteArray26 = byteOrderMark11.getBytes();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray9);
        java.lang.String str16 = byteOrderMark15.toString();
        byte[] byteArray17 = byteOrderMark15.getBytes();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray5 = byteOrderMark4.getBytes();
        java.lang.String str6 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int9 = byteOrderMark7.get((int) (byte) 0);
        byte[] byteArray10 = byteOrderMark7.getBytes();
        byte[] byteArray11 = byteOrderMark7.getBytes();
        boolean boolean12 = byteOrderMark4.equals((java.lang.Object) byteOrderMark7);
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray22);
        boolean boolean29 = byteOrderMark4.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray22);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-32BE" + "'", str6, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 239 + "'", int9 == 239);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        boolean boolean34 = byteOrderMark17.equals((java.lang.Object) byteOrderMark31);
        int[] intArray41 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray41);
        boolean boolean45 = byteOrderMark17.equals((java.lang.Object) byteOrderMark44);
        int[] intArray52 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray52);
        boolean boolean56 = byteOrderMark44.equals((java.lang.Object) "UTF-32BE");
        java.lang.String str57 = byteOrderMark44.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 254, 100]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str57, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        int[] intArray5 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int9 = byteOrderMark7.get((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark7.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        int int25 = byteOrderMark21.get((int) (short) 0);
        java.lang.String str26 = byteOrderMark21.toString();
        byte[] byteArray27 = byteOrderMark21.getBytes();
        java.lang.String str28 = byteOrderMark21.getCharsetName();
        byte[] byteArray29 = byteOrderMark21.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        int int10 = byteOrderMark5.length();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        int int30 = byteOrderMark28.length();
        java.lang.String str31 = byteOrderMark28.getCharsetName();
        byte[] byteArray32 = byteOrderMark28.getBytes();
        boolean boolean33 = byteOrderMark5.equals((java.lang.Object) byteOrderMark28);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str29, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str31, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        java.lang.String str19 = byteOrderMark0.toString();
        byte[] byteArray20 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray6 = byteOrderMark5.getBytes();
        int int7 = byteOrderMark5.length();
        boolean boolean9 = byteOrderMark5.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        java.lang.String str10 = byteOrderMark5.getCharsetName();
        java.lang.Class<?> wildcardClass11 = byteOrderMark5.getClass();
        boolean boolean12 = byteOrderMark0.equals((java.lang.Object) byteOrderMark5);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-32BE" + "'", str10, "UTF-32BE");
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.toString();
        int int15 = byteOrderMark13.length();
        byte[] byteArray16 = byteOrderMark13.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean4 = byteOrderMark2.equals((java.lang.Object) 1L);
        java.lang.String str5 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean7 = byteOrderMark2.equals((java.lang.Object) byteOrderMark6);
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark2);
        byte[] byteArray9 = byteOrderMark2.getBytes();
        java.lang.String str10 = byteOrderMark2.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = byteOrderMark2.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray6 = byteOrderMark5.getBytes();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        boolean boolean23 = byteOrderMark5.equals((java.lang.Object) intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray16);
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        java.lang.String str5 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int8 = byteOrderMark6.get((int) (byte) 0);
        byte[] byteArray9 = byteOrderMark6.getBytes();
        byte[] byteArray10 = byteOrderMark6.getBytes();
        boolean boolean11 = byteOrderMark3.equals((java.lang.Object) byteOrderMark6);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean28 = byteOrderMark3.equals((java.lang.Object) intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray21);
        java.lang.String str32 = byteOrderMark31.toString();
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 239 + "'", int8 == 239);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.toString();
        java.lang.String str10 = byteOrderMark3.toString();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        java.lang.String str27 = byteOrderMark26.toString();
        boolean boolean28 = byteOrderMark3.equals((java.lang.Object) byteOrderMark26);
        java.lang.Class<?> wildcardClass29 = byteOrderMark26.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str9, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str10, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str27, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean21 = byteOrderMark3.equals((java.lang.Object) intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        boolean boolean47 = byteOrderMark24.equals((java.lang.Object) intArray37);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean20 = byteOrderMark18.equals((java.lang.Object) (-1L));
        java.lang.String str21 = byteOrderMark18.toString();
        java.lang.String str22 = byteOrderMark18.getCharsetName();
        boolean boolean23 = byteOrderMark17.equals((java.lang.Object) byteOrderMark18);
        java.lang.String str24 = byteOrderMark18.toString();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        java.lang.String str26 = byteOrderMark18.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str21, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.toString();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        int int16 = byteOrderMark13.length();
        java.lang.String str17 = byteOrderMark13.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        byte[] byteArray25 = byteOrderMark24.getBytes();
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) byteOrderMark24);
        int int27 = byteOrderMark24.length();
        int int29 = byteOrderMark24.get(1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark13.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = byteOrderMark7.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean11 = byteOrderMark9.equals((java.lang.Object) 1L);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        int int13 = byteOrderMark9.length();
        boolean boolean15 = byteOrderMark9.equals((java.lang.Object) (byte) -1);
        byte[] byteArray16 = byteOrderMark9.getBytes();
        java.lang.String str17 = byteOrderMark9.getCharsetName();
        byte[] byteArray18 = byteOrderMark9.getBytes();
        boolean boolean19 = byteOrderMark0.equals((java.lang.Object) byteArray18);
        byte[] byteArray20 = byteOrderMark0.getBytes();
        java.lang.String str21 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark9.equals(obj13);
        java.lang.String str15 = byteOrderMark9.getCharsetName();
        java.lang.String str16 = byteOrderMark9.toString();
        int int18 = byteOrderMark9.get((int) (byte) 0);
        byte[] byteArray19 = byteOrderMark9.getBytes();
        java.lang.Class<?> wildcardClass20 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int int13 = byteOrderMark0.get((int) (byte) 1);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray19);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        java.lang.String str23 = byteOrderMark0.toString();
        int int24 = byteOrderMark0.length();
        java.lang.String str25 = byteOrderMark0.toString();
        byte[] byteArray26 = byteOrderMark0.getBytes();
        java.lang.String str27 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass28 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 254 + "'", int13 == 254);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str25, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str27, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = byteOrderMark5.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray29);
        int int37 = byteOrderMark35.get((int) (byte) 0);
        int[] intArray46 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray46);
        byte[] byteArray52 = byteOrderMark51.getBytes();
        int int53 = byteOrderMark51.length();
        java.lang.String str54 = byteOrderMark51.toString();
        int[] intArray60 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray60);
        byte[] byteArray63 = byteOrderMark62.getBytes();
        boolean boolean64 = byteOrderMark51.equals((java.lang.Object) byteOrderMark62);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str66 = byteOrderMark65.toString();
        java.lang.String str67 = byteOrderMark65.toString();
        int int69 = byteOrderMark65.get(2);
        boolean boolean71 = byteOrderMark65.equals((java.lang.Object) (byte) 10);
        boolean boolean72 = byteOrderMark51.equals((java.lang.Object) boolean71);
        byte[] byteArray73 = byteOrderMark51.getBytes();
        boolean boolean74 = byteOrderMark35.equals((java.lang.Object) byteOrderMark51);
        byte[] byteArray75 = byteOrderMark51.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str54, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteOrderMark65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str66, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str67, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 254 + "'", int69 == 254);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray5 = byteOrderMark4.getBytes();
        java.lang.String str6 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int9 = byteOrderMark7.get((int) (byte) 0);
        byte[] byteArray10 = byteOrderMark7.getBytes();
        byte[] byteArray11 = byteOrderMark7.getBytes();
        boolean boolean12 = byteOrderMark4.equals((java.lang.Object) byteOrderMark7);
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray22);
        boolean boolean29 = byteOrderMark4.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("", intArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-32BE" + "'", str6, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 239 + "'", int9 == 239);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (-1.0f));
        java.lang.String str7 = byteOrderMark0.toString();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean11 = byteOrderMark9.equals((java.lang.Object) (-1L));
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) 1L);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        int int18 = byteOrderMark14.length();
        boolean boolean20 = byteOrderMark14.equals((java.lang.Object) (byte) -1);
        byte[] byteArray21 = byteOrderMark14.getBytes();
        java.lang.String str22 = byteOrderMark14.getCharsetName();
        byte[] byteArray23 = byteOrderMark14.getBytes();
        int int25 = byteOrderMark14.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean27 = byteOrderMark14.equals((java.lang.Object) byteOrderMark26);
        byte[] byteArray28 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str30 = byteOrderMark29.toString();
        java.lang.String str31 = byteOrderMark29.toString();
        int int33 = byteOrderMark29.get(2);
        java.lang.String str34 = byteOrderMark29.toString();
        int int35 = byteOrderMark29.length();
        boolean boolean36 = byteOrderMark14.equals((java.lang.Object) byteOrderMark29);
        java.lang.String str37 = byteOrderMark29.getCharsetName();
        boolean boolean38 = byteOrderMark0.equals((java.lang.Object) str37);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 255 + "'", int25 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 254 + "'", int33 == 254);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str34, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-32BE" + "'", str37, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        boolean boolean38 = byteOrderMark18.equals((java.lang.Object) int37);
        byte[] byteArray39 = byteOrderMark18.getBytes();
        int int40 = byteOrderMark18.length();
        byte[] byteArray41 = byteOrderMark18.getBytes();
        int int42 = byteOrderMark18.length();
        byte[] byteArray43 = byteOrderMark18.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 3 + "'", int42 == 3);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark17.equals(obj19);
        byte[] byteArray21 = byteOrderMark17.getBytes();
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteArray21);
        byte[] byteArray23 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        int[] intArray4 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray4);
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        boolean boolean16 = byteOrderMark7.equals((java.lang.Object) byteOrderMark15);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[255]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray29);
        int int37 = byteOrderMark35.get((int) (byte) 0);
        int int38 = byteOrderMark35.length();
        int int39 = byteOrderMark35.length();
        byte[] byteArray40 = byteOrderMark35.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[10, 97, 35]");
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        int int11 = byteOrderMark9.length();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean15 = byteOrderMark13.equals((java.lang.Object) (-1L));
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        byte[] byteArray18 = byteOrderMark13.getBytes();
        java.lang.String str19 = byteOrderMark13.getCharsetName();
        java.lang.Class<?> wildcardClass20 = byteOrderMark13.getClass();
        boolean boolean21 = byteOrderMark9.equals((java.lang.Object) byteOrderMark13);
        java.lang.String str22 = byteOrderMark13.toString();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str16, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        int int13 = byteOrderMark11.get((int) (byte) 0);
        java.lang.String str14 = byteOrderMark11.toString();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        int int16 = byteOrderMark11.length();
        java.lang.String str17 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        java.lang.String str22 = byteOrderMark21.getCharsetName();
        byte[] byteArray23 = byteOrderMark21.getBytes();
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray36);
        boolean boolean46 = byteOrderMark21.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-32BE" + "'", str22, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.Object obj8 = null;
        boolean boolean9 = byteOrderMark0.equals(obj8);
        int int10 = byteOrderMark0.length();
        int int11 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        java.lang.String str17 = byteOrderMark13.toString();
        byte[] byteArray18 = byteOrderMark13.getBytes();
        int int19 = byteOrderMark13.length();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        int int14 = byteOrderMark11.length();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        java.lang.String str16 = byteOrderMark11.getCharsetName();
        int int17 = byteOrderMark11.length();
        int int19 = byteOrderMark11.get(2);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray14);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        byte[] byteArray19 = byteOrderMark17.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str21 = byteOrderMark20.toString();
        boolean boolean23 = byteOrderMark20.equals((java.lang.Object) ' ');
        java.lang.String str24 = byteOrderMark20.toString();
        java.lang.String str25 = byteOrderMark20.getCharsetName();
        java.lang.String str26 = byteOrderMark20.getCharsetName();
        java.lang.Class<?> wildcardClass27 = byteOrderMark20.getClass();
        boolean boolean28 = byteOrderMark17.equals((java.lang.Object) byteOrderMark20);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-32BE" + "'", str25, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-32BE" + "'", str26, "UTF-32BE");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray13);
        int int24 = byteOrderMark23.length();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        int int25 = byteOrderMark23.get(0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        int[] intArray10 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[0, 10, -1]");
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0x0,0xA,0xFF]", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        byte[] byteArray9 = byteOrderMark7.getBytes();
        java.lang.String str10 = byteOrderMark7.toString();
        int int11 = byteOrderMark7.length();
        java.lang.String str12 = byteOrderMark7.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-32BE" + "'", str12, "UTF-32BE");
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xFF]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        int int5 = byteOrderMark0.length();
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        byte[] byteArray5 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int8 = byteOrderMark6.get(0);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 0L);
        int int16 = byteOrderMark10.length();
        boolean boolean17 = byteOrderMark6.equals((java.lang.Object) int16);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark6);
        byte[] byteArray19 = byteOrderMark0.getBytes();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) str40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean44 = byteOrderMark42.equals((java.lang.Object) 1L);
        java.lang.String str45 = byteOrderMark42.getCharsetName();
        int int46 = byteOrderMark42.length();
        boolean boolean48 = byteOrderMark42.equals((java.lang.Object) (byte) -1);
        byte[] byteArray49 = byteOrderMark42.getBytes();
        java.lang.String str50 = byteOrderMark42.getCharsetName();
        byte[] byteArray51 = byteOrderMark42.getBytes();
        int int53 = byteOrderMark42.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray55 = byteOrderMark54.getBytes();
        java.lang.String str56 = byteOrderMark54.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int59 = byteOrderMark57.get((int) (byte) 0);
        byte[] byteArray60 = byteOrderMark57.getBytes();
        byte[] byteArray61 = byteOrderMark57.getBytes();
        boolean boolean62 = byteOrderMark54.equals((java.lang.Object) byteOrderMark57);
        boolean boolean63 = byteOrderMark42.equals((java.lang.Object) byteOrderMark54);
        java.lang.String str64 = byteOrderMark54.getCharsetName();
        boolean boolean65 = byteOrderMark0.equals((java.lang.Object) str64);
        int int66 = byteOrderMark0.length();
        java.lang.String str67 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 255 + "'", int8 == 255);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteOrderMark42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-16LE" + "'", str45, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16LE" + "'", str50, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 255 + "'", int53 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark54);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "UTF-32BE" + "'", str56, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 239 + "'", int59 == 239);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UTF-32BE" + "'", str64, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "UTF-32BE" + "'", str67, "UTF-32BE");
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass11 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        java.lang.String str27 = byteOrderMark23.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str27, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        java.lang.String str11 = byteOrderMark0.getCharsetName();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int13 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        boolean boolean64 = byteOrderMark47.equals((java.lang.Object) byteOrderMark61);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        java.lang.Object obj72 = null;
        boolean boolean73 = byteOrderMark70.equals(obj72);
        int int74 = byteOrderMark70.length();
        byte[] byteArray75 = byteOrderMark70.getBytes();
        java.lang.Class<?> wildcardClass76 = byteOrderMark70.getClass();
        boolean boolean77 = byteOrderMark61.equals((java.lang.Object) wildcardClass76);
        boolean boolean78 = byteOrderMark11.equals((java.lang.Object) byteOrderMark61);
        java.lang.String str79 = byteOrderMark61.toString();
        int int80 = byteOrderMark61.length();
        java.lang.String str81 = byteOrderMark61.getCharsetName();
        java.lang.String str82 = byteOrderMark61.toString();
        byte[] byteArray83 = byteOrderMark61.getBytes();
        java.lang.Class<?> wildcardClass84 = byteArray83.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str79, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "UTF-32BE" + "'", str81, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str82, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        java.lang.String str15 = byteOrderMark11.toString();
        byte[] byteArray16 = byteOrderMark11.getBytes();
        java.lang.Class<?> wildcardClass17 = byteArray16.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int12 = byteOrderMark11.length();
        java.lang.Class<?> wildcardClass13 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray14);
        java.lang.String str26 = byteOrderMark25.getCharsetName();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str26, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = byteOrderMark0.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int12 = byteOrderMark10.get((int) (byte) 0);
        byte[] byteArray13 = byteOrderMark10.getBytes();
        byte[] byteArray14 = byteOrderMark10.getBytes();
        boolean boolean15 = byteOrderMark7.equals((java.lang.Object) byteOrderMark10);
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray25);
        boolean boolean32 = byteOrderMark7.equals((java.lang.Object) intArray25);
        boolean boolean33 = byteOrderMark0.equals((java.lang.Object) boolean32);
        int int34 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass35 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 239 + "'", int12 == 239);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray10 = byteOrderMark4.getBytes();
        int int11 = byteOrderMark4.length();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        boolean boolean24 = byteOrderMark4.equals((java.lang.Object) byteOrderMark23);
        int[] intArray31 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray31);
        boolean boolean35 = byteOrderMark4.equals((java.lang.Object) byteOrderMark34);
        java.lang.String str36 = byteOrderMark4.getCharsetName();
        java.lang.String str37 = byteOrderMark4.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.toString();
        byte[] byteArray12 = byteOrderMark5.getBytes();
        java.lang.String str13 = byteOrderMark5.getCharsetName();
        int int14 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        byte[] byteArray6 = byteOrderMark5.getBytes();
        int int7 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10, -2, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 3 + "'", int7 == 3);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        byte[] byteArray26 = byteOrderMark0.getBytes();
        byte[] byteArray27 = byteOrderMark0.getBytes();
        java.lang.String str28 = byteOrderMark0.toString();
        java.lang.String str29 = byteOrderMark0.toString();
        byte[] byteArray30 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, -2, -1]");
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        byte[] byteArray15 = byteOrderMark14.getBytes();
        byte[] byteArray16 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        boolean boolean22 = byteOrderMark17.equals((java.lang.Object) 0L);
        int int23 = byteOrderMark17.length();
        int int24 = byteOrderMark17.length();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) intArray31);
        boolean boolean36 = byteOrderMark14.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray31);
        java.lang.String str40 = byteOrderMark39.toString();
        java.lang.Class<?> wildcardClass41 = byteOrderMark39.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        java.lang.String str21 = byteOrderMark12.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) byteOrderMark33);
        boolean boolean35 = byteOrderMark11.equals((java.lang.Object) boolean34);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = byteOrderMark11.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        int int23 = byteOrderMark0.length();
        java.lang.String str24 = byteOrderMark0.getCharsetName();
        byte[] byteArray25 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, -2]");
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        int int3 = byteOrderMark1.length();
        int int4 = byteOrderMark1.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray16);
        boolean boolean25 = byteOrderMark1.equals((java.lang.Object) byteOrderMark24);
        java.lang.String str26 = byteOrderMark1.getCharsetName();
        byte[] byteArray27 = byteOrderMark1.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int36 = byteOrderMark34.get((int) (byte) 0);
        byte[] byteArray37 = byteOrderMark34.getBytes();
        byte[] byteArray38 = byteOrderMark34.getBytes();
        boolean boolean39 = byteOrderMark31.equals((java.lang.Object) byteOrderMark34);
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray49);
        boolean boolean56 = byteOrderMark31.equals((java.lang.Object) intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray49);
        boolean boolean60 = byteOrderMark1.equals((java.lang.Object) intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]", intArray49);
        java.lang.String str62 = byteOrderMark61.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-32BE" + "'", str26, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 239 + "'", int36 == 239);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]" + "'", str62, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]");
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        byte[] byteArray10 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.get(1);
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str11 = byteOrderMark10.toString();
        java.lang.String str12 = byteOrderMark10.toString();
        int int14 = byteOrderMark10.get(2);
        java.lang.String str15 = byteOrderMark10.toString();
        int int17 = byteOrderMark10.get(1);
        java.lang.Class<?> wildcardClass18 = byteOrderMark10.getClass();
        boolean boolean19 = byteOrderMark0.equals((java.lang.Object) wildcardClass18);
        java.lang.String str20 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str12, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 254 + "'", int14 == 254);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray15);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.String str8 = byteOrderMark0.toString();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        byte[] byteArray23 = byteOrderMark22.getBytes();
        int int24 = byteOrderMark22.length();
        java.lang.String str25 = byteOrderMark22.toString();
        byte[] byteArray26 = byteOrderMark22.getBytes();
        java.lang.String str27 = byteOrderMark22.getCharsetName();
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) str27);
        byte[] byteArray29 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-32BE" + "'", str27, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -2]");
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        int int56 = byteOrderMark47.length();
        byte[] byteArray57 = byteOrderMark47.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-1, -2]");
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        int int23 = byteOrderMark21.get(0);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        byte[] byteArray9 = byteOrderMark7.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark7.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 10, -1]");
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        boolean boolean39 = byteOrderMark18.equals((java.lang.Object) intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]", intArray30);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray14 = byteOrderMark12.getBytes();
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        java.lang.String str16 = byteOrderMark12.toString();
        byte[] byteArray17 = byteOrderMark12.getBytes();
        java.lang.String str18 = byteOrderMark12.toString();
        java.lang.Class<?> wildcardClass19 = byteOrderMark12.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str16, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str18, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        int int13 = byteOrderMark12.length();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) int13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean17 = byteOrderMark15.equals((java.lang.Object) 1L);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        int int19 = byteOrderMark15.length();
        boolean boolean21 = byteOrderMark15.equals((java.lang.Object) (byte) -1);
        byte[] byteArray22 = byteOrderMark15.getBytes();
        java.lang.String str23 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass24 = byteOrderMark15.getClass();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark15);
        int int26 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int12 = byteOrderMark10.get(0);
        byte[] byteArray13 = byteOrderMark10.getBytes();
        byte[] byteArray14 = byteOrderMark10.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean17 = byteOrderMark15.equals((java.lang.Object) 1L);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        boolean boolean19 = byteOrderMark10.equals((java.lang.Object) byteOrderMark15);
        byte[] byteArray20 = byteOrderMark10.getBytes();
        boolean boolean21 = byteOrderMark9.equals((java.lang.Object) byteOrderMark10);
        byte[] byteArray22 = byteOrderMark10.getBytes();
        java.lang.String str23 = byteOrderMark10.toString();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 255 + "'", int12 == 255);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray8);
        int int14 = byteOrderMark13.length();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        java.lang.String str17 = byteOrderMark13.toString();
        byte[] byteArray18 = byteOrderMark13.getBytes();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray30);
        java.lang.String str39 = byteOrderMark38.getCharsetName();
        int[] intArray45 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray45);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray45);
        boolean boolean48 = byteOrderMark38.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark13.equals((java.lang.Object) boolean48);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = byteOrderMark13.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str39, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        int[] intArray5 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.toString();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 254, 100]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str8, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0xFE,0x64]" + "'", str9, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0xFE,0x64]");
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        java.lang.String str30 = byteOrderMark29.toString();
        byte[] byteArray31 = byteOrderMark29.getBytes();
        byte[] byteArray32 = byteOrderMark29.getBytes();
        java.lang.String str33 = byteOrderMark29.toString();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str33, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-32BE" + "'", str10, "UTF-32BE");
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0xFE,0x64]", intArray7);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray13);
        java.lang.String str24 = byteOrderMark23.toString();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        int int7 = byteOrderMark4.length();
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) 0L);
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) int10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int14 = byteOrderMark12.get((int) (byte) 0);
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray24);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark12.equals((java.lang.Object) byteOrderMark30);
        boolean boolean33 = byteOrderMark0.equals((java.lang.Object) boolean32);
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        java.lang.Object obj41 = null;
        boolean boolean42 = byteOrderMark39.equals(obj41);
        int int43 = byteOrderMark39.length();
        byte[] byteArray44 = byteOrderMark39.getBytes();
        java.lang.Class<?> wildcardClass45 = byteOrderMark39.getClass();
        boolean boolean46 = byteOrderMark0.equals((java.lang.Object) wildcardClass45);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 239 + "'", int14 == 239);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) '4');
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int9 = byteOrderMark7.get(0);
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) str10);
        java.lang.Object obj12 = null;
        boolean boolean13 = byteOrderMark0.equals(obj12);
        int int14 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 255 + "'", int9 == 255);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean3 = byteOrderMark1.equals((java.lang.Object) 1L);
        java.lang.String str4 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) byteOrderMark5);
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        int int9 = byteOrderMark5.length();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        boolean boolean26 = byteOrderMark5.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray37);
        byte[] byteArray43 = byteOrderMark42.getBytes();
        boolean boolean44 = byteOrderMark27.equals((java.lang.Object) byteOrderMark42);
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        int int20 = byteOrderMark19.length();
        int int21 = byteOrderMark19.length();
        java.lang.String str22 = byteOrderMark19.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = byteOrderMark19.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        java.lang.Class<?> wildcardClass10 = byteArray9.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) 0L);
        int int18 = byteOrderMark12.length();
        int int19 = byteOrderMark12.length();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) intArray26);
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray38);
        int int43 = byteOrderMark42.length();
        boolean boolean44 = byteOrderMark12.equals((java.lang.Object) byteOrderMark42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean47 = byteOrderMark45.equals((java.lang.Object) 1L);
        java.lang.String str48 = byteOrderMark45.getCharsetName();
        int int49 = byteOrderMark45.length();
        boolean boolean51 = byteOrderMark45.equals((java.lang.Object) (byte) -1);
        byte[] byteArray52 = byteOrderMark45.getBytes();
        java.lang.String str53 = byteOrderMark45.getCharsetName();
        java.lang.String str54 = byteOrderMark45.getCharsetName();
        java.lang.String str55 = byteOrderMark45.toString();
        int int56 = byteOrderMark45.length();
        int int57 = byteOrderMark45.length();
        boolean boolean58 = byteOrderMark42.equals((java.lang.Object) byteOrderMark45);
        int int59 = byteOrderMark42.length();
        java.lang.String str60 = byteOrderMark42.getCharsetName();
        boolean boolean61 = byteOrderMark0.equals((java.lang.Object) byteOrderMark42);
        // The following exception was thrown during execution in test generation
        try {
            int int63 = byteOrderMark42.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-16LE" + "'", str48, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-16LE" + "'", str53, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str55, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str60, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        int int12 = byteOrderMark11.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int18 = byteOrderMark16.get((int) (byte) 0);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        byte[] byteArray20 = byteOrderMark16.getBytes();
        boolean boolean21 = byteOrderMark13.equals((java.lang.Object) byteOrderMark16);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        boolean boolean38 = byteOrderMark13.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        java.lang.Class<?> wildcardClass41 = byteOrderMark39.getClass();
        boolean boolean42 = byteOrderMark13.equals((java.lang.Object) wildcardClass41);
        int int43 = byteOrderMark13.length();
        int int44 = byteOrderMark13.length();
        boolean boolean45 = byteOrderMark11.equals((java.lang.Object) byteOrderMark13);
        int int46 = byteOrderMark11.length();
        java.lang.String str47 = byteOrderMark11.toString();
        int int48 = byteOrderMark11.length();
        java.lang.String str49 = byteOrderMark11.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-32BE" + "'", str15, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 239 + "'", int18 == 239);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16LE" + "'", str40, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str47, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-32BE" + "'", str49, "UTF-32BE");
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        int int9 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) "hi!");
        java.lang.String str21 = byteOrderMark0.toString();
        int int23 = byteOrderMark0.get(0);
        int int24 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 4 + "'", int24 == 4);
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        int int9 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) "hi!");
        int int21 = byteOrderMark0.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray29);
        byte[] byteArray34 = byteOrderMark33.getBytes();
        byte[] byteArray35 = byteOrderMark33.getBytes();
        byte[] byteArray36 = byteOrderMark33.getBytes();
        java.lang.String str37 = byteOrderMark33.toString();
        byte[] byteArray38 = byteOrderMark33.getBytes();
        java.lang.String str39 = byteOrderMark33.toString();
        java.lang.String str40 = byteOrderMark33.getCharsetName();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) byteOrderMark33);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str37, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str39, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str40, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        int int13 = byteOrderMark11.get((int) (byte) 0);
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        int int15 = byteOrderMark11.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        int int9 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) "hi!");
        int int21 = byteOrderMark0.length();
        java.lang.String str22 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 4 + "'", int21 == 4);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray7);
        int int12 = byteOrderMark11.length();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass6 = byteArray5.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        int int23 = byteOrderMark22.length();
        int[] intArray28 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        java.lang.String str30 = byteOrderMark29.getCharsetName();
        java.lang.Object obj31 = null;
        boolean boolean32 = byteOrderMark29.equals(obj31);
        boolean boolean33 = byteOrderMark22.equals(obj31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean36 = byteOrderMark34.equals((java.lang.Object) (-1L));
        java.lang.String str37 = byteOrderMark34.getCharsetName();
        java.lang.String str38 = byteOrderMark34.getCharsetName();
        java.lang.String str39 = byteOrderMark34.getCharsetName();
        boolean boolean40 = byteOrderMark22.equals((java.lang.Object) byteOrderMark34);
        byte[] byteArray41 = byteOrderMark34.getBytes();
        boolean boolean42 = byteOrderMark11.equals((java.lang.Object) byteArray41);
        java.lang.String str43 = byteOrderMark11.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16LE" + "'", str38, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-16LE" + "'", str39, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str43, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        boolean boolean18 = byteOrderMark15.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]");
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark15.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        int int13 = byteOrderMark12.length();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) int13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean17 = byteOrderMark15.equals((java.lang.Object) 1L);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        int int19 = byteOrderMark15.length();
        boolean boolean21 = byteOrderMark15.equals((java.lang.Object) (byte) -1);
        byte[] byteArray22 = byteOrderMark15.getBytes();
        java.lang.String str23 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass24 = byteOrderMark15.getClass();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark15);
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray37);
        boolean boolean46 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        byte[] byteArray47 = byteOrderMark0.getBytes();
        java.lang.String str48 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-16LE" + "'", str48, "UTF-16LE");
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        java.lang.String str19 = byteOrderMark17.toString();
        java.lang.Class<?> wildcardClass20 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark24.equals(obj25);
        int int27 = byteOrderMark24.length();
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) 0L);
        int int30 = byteOrderMark24.length();
        boolean boolean32 = byteOrderMark24.equals((java.lang.Object) 3);
        java.lang.String str33 = byteOrderMark24.getCharsetName();
        java.lang.String str34 = byteOrderMark24.getCharsetName();
        java.lang.String str35 = byteOrderMark24.toString();
        byte[] byteArray36 = byteOrderMark24.getBytes();
        java.lang.Class<?> wildcardClass37 = byteOrderMark24.getClass();
        boolean boolean38 = byteOrderMark23.equals((java.lang.Object) byteOrderMark24);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16BE" + "'", str33, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16BE" + "'", str34, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str35, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        java.lang.String str12 = byteOrderMark0.getCharsetName();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        java.lang.Class<?> wildcardClass27 = intArray21.getClass();
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) intArray21);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.getCharsetName();
        byte[] byteArray10 = byteOrderMark3.getBytes();
        java.lang.String str11 = byteOrderMark3.getCharsetName();
        java.lang.String str12 = byteOrderMark3.getCharsetName();
        java.lang.Class<?> wildcardClass13 = byteOrderMark3.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-8" + "'", str12, "UTF-8");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray13);
        java.lang.Class<?> wildcardClass24 = intArray13.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        int[] intArray4 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray4);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[255]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str8, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int33 = byteOrderMark32.length();
        java.lang.String str34 = byteOrderMark32.getCharsetName();
        byte[] byteArray35 = byteOrderMark32.getBytes();
        byte[] byteArray36 = byteOrderMark32.getBytes();
        java.lang.String str37 = byteOrderMark32.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean41 = byteOrderMark39.equals((java.lang.Object) 1L);
        java.lang.String str42 = byteOrderMark39.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean44 = byteOrderMark39.equals((java.lang.Object) byteOrderMark43);
        byte[] byteArray45 = byteOrderMark43.getBytes();
        int int46 = byteOrderMark43.length();
        int int47 = byteOrderMark43.length();
        int[] intArray57 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("hi!", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray57);
        boolean boolean64 = byteOrderMark43.equals((java.lang.Object) intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray57);
        boolean boolean66 = byteOrderMark32.equals((java.lang.Object) byteOrderMark65);
        boolean boolean67 = byteOrderMark15.equals((java.lang.Object) boolean66);
        java.lang.String str68 = byteOrderMark15.getCharsetName();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str34, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str37, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str68, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean4 = byteOrderMark2.equals((java.lang.Object) 1L);
        java.lang.String str5 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean7 = byteOrderMark2.equals((java.lang.Object) byteOrderMark6);
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark2);
        java.lang.String str9 = byteOrderMark2.getCharsetName();
        int int11 = byteOrderMark2.get(0);
        java.lang.String str12 = byteOrderMark2.toString();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray24);
        java.lang.String str33 = byteOrderMark32.toString();
        boolean boolean34 = byteOrderMark2.equals((java.lang.Object) byteOrderMark32);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str12, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str33, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (-1.0f));
        int int7 = byteOrderMark0.length();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) 100.0f);
        int[] intArray16 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        byte[] byteArray21 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass22 = byteArray21.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.toString();
        boolean boolean27 = byteOrderMark21.equals((java.lang.Object) byteOrderMark23);
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        byte[] byteArray42 = byteOrderMark41.getBytes();
        byte[] byteArray43 = byteOrderMark41.getBytes();
        boolean boolean44 = byteOrderMark23.equals((java.lang.Object) byteOrderMark41);
        int[] intArray54 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray54);
        byte[] byteArray61 = byteOrderMark60.getBytes();
        java.lang.String str62 = byteOrderMark60.toString();
        boolean boolean63 = byteOrderMark41.equals((java.lang.Object) byteOrderMark60);
        java.lang.Class<?> wildcardClass64 = byteOrderMark41.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str62, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        int int4 = byteOrderMark0.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 255 + "'", int4 == 255);
    }
}


import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray5);
        int int8 = byteOrderMark7.length();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = byteOrderMark7.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        byte[] byteArray20 = byteOrderMark17.getBytes();
        int int22 = byteOrderMark17.get((int) (byte) 1);
        java.lang.String str23 = byteOrderMark17.getCharsetName();
        byte[] byteArray24 = byteOrderMark17.getBytes();
        byte[] byteArray25 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        int[] intArray5 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray5);
        java.lang.String str10 = byteOrderMark9.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = byteOrderMark9.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[255]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]" + "'", str10, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int13 = byteOrderMark0.length();
        java.lang.String str14 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass15 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray29);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = byteOrderMark35.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        int int15 = byteOrderMark11.length();
        int int17 = byteOrderMark11.get(0);
        java.lang.String str18 = byteOrderMark11.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        boolean boolean64 = byteOrderMark47.equals((java.lang.Object) byteOrderMark61);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        java.lang.Object obj72 = null;
        boolean boolean73 = byteOrderMark70.equals(obj72);
        int int74 = byteOrderMark70.length();
        byte[] byteArray75 = byteOrderMark70.getBytes();
        java.lang.Class<?> wildcardClass76 = byteOrderMark70.getClass();
        boolean boolean77 = byteOrderMark61.equals((java.lang.Object) wildcardClass76);
        boolean boolean78 = byteOrderMark11.equals((java.lang.Object) byteOrderMark61);
        java.lang.String str79 = byteOrderMark61.toString();
        java.lang.String str80 = byteOrderMark61.toString();
        byte[] byteArray81 = byteOrderMark61.getBytes();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str79, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str80, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[10, 97, 35]");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        int int8 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = byteOrderMark0.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("", intArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        int int7 = byteOrderMark4.length();
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) 0L);
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) int10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int14 = byteOrderMark12.get((int) (byte) 0);
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray24);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark12.equals((java.lang.Object) byteOrderMark30);
        boolean boolean33 = byteOrderMark0.equals((java.lang.Object) boolean32);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = byteOrderMark0.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 239 + "'", int14 == 239);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        int int17 = byteOrderMark16.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark23.equals(obj25);
        boolean boolean27 = byteOrderMark16.equals(obj25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean30 = byteOrderMark28.equals((java.lang.Object) (-1L));
        java.lang.String str31 = byteOrderMark28.getCharsetName();
        java.lang.String str32 = byteOrderMark28.getCharsetName();
        java.lang.String str33 = byteOrderMark28.getCharsetName();
        boolean boolean34 = byteOrderMark16.equals((java.lang.Object) byteOrderMark28);
        boolean boolean35 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        int int37 = byteOrderMark0.get(1);
        int int38 = byteOrderMark0.length();
        java.lang.String str39 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int41 = byteOrderMark0.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 254 + "'", int37 == 254);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-16LE" + "'", str39, "UTF-16LE");
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int int8 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        int int17 = byteOrderMark16.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark23.equals(obj25);
        boolean boolean27 = byteOrderMark16.equals(obj25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean30 = byteOrderMark28.equals((java.lang.Object) (-1L));
        java.lang.String str31 = byteOrderMark28.getCharsetName();
        java.lang.String str32 = byteOrderMark28.getCharsetName();
        java.lang.String str33 = byteOrderMark28.getCharsetName();
        boolean boolean34 = byteOrderMark16.equals((java.lang.Object) byteOrderMark28);
        boolean boolean35 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        int int37 = byteOrderMark0.get(1);
        int int38 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int40 = byteOrderMark0.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 254 + "'", int37 == 254);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        boolean boolean15 = byteOrderMark9.equals((java.lang.Object) "UTF-32BE");
        java.lang.Class<?> wildcardClass16 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.Object obj10 = null;
        boolean boolean11 = byteOrderMark4.equals(obj10);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        int int24 = byteOrderMark23.length();
        java.lang.String str25 = byteOrderMark23.toString();
        java.lang.String str26 = byteOrderMark23.getCharsetName();
        boolean boolean27 = byteOrderMark4.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str28 = byteOrderMark23.getCharsetName();
        byte[] byteArray29 = byteOrderMark23.getBytes();
        int int30 = byteOrderMark23.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str26, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        int[] intArray4 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[239, 10]");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        byte[] byteArray17 = byteOrderMark16.getBytes();
        boolean boolean18 = byteOrderMark5.equals((java.lang.Object) byteOrderMark16);
        java.lang.String str19 = byteOrderMark16.toString();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        java.lang.Class<?> wildcardClass18 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16BE" + "'", str16, "UTF-16BE");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) 1L);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        int int18 = byteOrderMark14.length();
        boolean boolean20 = byteOrderMark14.equals((java.lang.Object) (byte) -1);
        byte[] byteArray21 = byteOrderMark14.getBytes();
        java.lang.String str22 = byteOrderMark14.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray24 = byteOrderMark23.getBytes();
        boolean boolean25 = byteOrderMark14.equals((java.lang.Object) byteOrderMark23);
        java.lang.Object obj26 = null;
        boolean boolean27 = byteOrderMark23.equals(obj26);
        int int28 = byteOrderMark23.length();
        boolean boolean29 = byteOrderMark13.equals((java.lang.Object) int28);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = byteOrderMark13.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.toString();
        java.lang.String str8 = byteOrderMark0.toString();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.toString();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        boolean boolean26 = byteOrderMark20.equals((java.lang.Object) byteOrderMark21);
        byte[] byteArray27 = byteOrderMark20.getBytes();
        java.lang.String str28 = byteOrderMark20.getCharsetName();
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) str28);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray19 = byteOrderMark18.getBytes();
        java.lang.String str20 = byteOrderMark18.toString();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean37 = byteOrderMark18.equals((java.lang.Object) intArray30);
        boolean boolean38 = byteOrderMark17.equals((java.lang.Object) byteOrderMark18);
        java.lang.Class<?> wildcardClass39 = byteOrderMark18.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        int int18 = byteOrderMark17.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        java.lang.String str25 = byteOrderMark24.getCharsetName();
        java.lang.Object obj26 = null;
        boolean boolean27 = byteOrderMark24.equals(obj26);
        boolean boolean28 = byteOrderMark17.equals(obj26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) (-1L));
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        java.lang.String str33 = byteOrderMark29.getCharsetName();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) byteOrderMark29);
        byte[] byteArray36 = byteOrderMark29.getBytes();
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) byteOrderMark29);
        byte[] byteArray38 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, -2, -1]");
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.getCharsetName();
        byte[] byteArray10 = byteOrderMark3.getBytes();
        java.lang.Class<?> wildcardClass11 = byteOrderMark3.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str27 = byteOrderMark26.getCharsetName();
        java.lang.Class<?> wildcardClass28 = byteOrderMark26.getClass();
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) wildcardClass28);
        int int30 = byteOrderMark0.length();
        int int31 = byteOrderMark0.length();
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        boolean boolean50 = byteOrderMark0.equals((java.lang.Object) byteOrderMark49);
        int[] intArray59 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray59);
        int[] intArray72 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray72);
        boolean boolean77 = byteOrderMark64.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str78 = byteOrderMark64.getCharsetName();
        int int80 = byteOrderMark64.get((int) (byte) 1);
        boolean boolean81 = byteOrderMark0.equals((java.lang.Object) byteOrderMark64);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "UTF-32BE" + "'", str78, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 97 + "'", int80 == 97);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int11 = byteOrderMark0.get(0);
        int int12 = byteOrderMark0.length();
        int int13 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        boolean boolean17 = byteOrderMark13.equals((java.lang.Object) (short) 100);
        java.lang.Class<?> wildcardClass18 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray10 = byteOrderMark8.getBytes();
        int int11 = byteOrderMark8.length();
        int int12 = byteOrderMark8.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        boolean boolean29 = byteOrderMark8.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray22);
        java.lang.Class<?> wildcardClass34 = byteOrderMark33.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        int int20 = byteOrderMark19.length();
        java.lang.Class<?> wildcardClass21 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int8 = byteOrderMark7.length();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark7.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) 1L);
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean34 = byteOrderMark29.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray35 = byteOrderMark33.getBytes();
        int int36 = byteOrderMark33.length();
        int int37 = byteOrderMark33.length();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        boolean boolean54 = byteOrderMark33.equals((java.lang.Object) intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        boolean boolean56 = byteOrderMark9.equals((java.lang.Object) byteOrderMark55);
        java.lang.String str57 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        boolean boolean34 = byteOrderMark17.equals((java.lang.Object) byteOrderMark31);
        int[] intArray41 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray41);
        boolean boolean45 = byteOrderMark17.equals((java.lang.Object) byteOrderMark44);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = byteOrderMark44.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        java.lang.String str21 = byteOrderMark19.getCharsetName();
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        java.lang.String str23 = byteOrderMark19.toString();
        boolean boolean24 = byteOrderMark11.equals((java.lang.Object) byteOrderMark19);
        byte[] byteArray25 = byteOrderMark11.getBytes();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        int int8 = byteOrderMark4.length();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        boolean boolean29 = byteOrderMark4.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        byte[] byteArray30 = byteOrderMark4.getBytes();
        int int32 = byteOrderMark4.get(1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 255 + "'", int32 == 255);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        int int12 = byteOrderMark11.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int18 = byteOrderMark16.get((int) (byte) 0);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        byte[] byteArray20 = byteOrderMark16.getBytes();
        boolean boolean21 = byteOrderMark13.equals((java.lang.Object) byteOrderMark16);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        boolean boolean38 = byteOrderMark13.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        java.lang.Class<?> wildcardClass41 = byteOrderMark39.getClass();
        boolean boolean42 = byteOrderMark13.equals((java.lang.Object) wildcardClass41);
        int int43 = byteOrderMark13.length();
        int int44 = byteOrderMark13.length();
        boolean boolean45 = byteOrderMark11.equals((java.lang.Object) byteOrderMark13);
        int int46 = byteOrderMark11.length();
        int int48 = byteOrderMark11.get((int) (short) 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-32BE" + "'", str15, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 239 + "'", int18 == 239);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16LE" + "'", str40, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 97 + "'", int48 == 97);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int13 = byteOrderMark0.length();
        int int14 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass15 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray9);
        int int16 = byteOrderMark15.length();
        int int17 = byteOrderMark15.length();
        java.lang.Class<?> wildcardClass18 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        java.lang.String str20 = byteOrderMark19.toString();
        int int21 = byteOrderMark19.length();
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        byte[] byteArray24 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -2]");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark30.length();
        java.lang.String str48 = byteOrderMark30.toString();
        java.lang.Class<?> wildcardClass49 = byteOrderMark30.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str11 = byteOrderMark10.toString();
        boolean boolean13 = byteOrderMark10.equals((java.lang.Object) ' ');
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 3);
        java.lang.String str16 = byteOrderMark10.toString();
        int int18 = byteOrderMark10.get((int) (short) 0);
        byte[] byteArray19 = byteOrderMark10.getBytes();
        byte[] byteArray20 = byteOrderMark10.getBytes();
        boolean boolean21 = byteOrderMark9.equals((java.lang.Object) byteOrderMark10);
        java.lang.String str22 = byteOrderMark9.toString();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16BE: 0x0,0xA,0xFF]" + "'", str22, "ByteOrderMark[UTF-16BE: 0x0,0xA,0xFF]");
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray10);
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean32 = byteOrderMark30.equals((java.lang.Object) (-1L));
        java.lang.String str33 = byteOrderMark30.toString();
        java.lang.String str34 = byteOrderMark30.getCharsetName();
        boolean boolean35 = byteOrderMark29.equals((java.lang.Object) byteOrderMark30);
        java.lang.Class<?> wildcardClass36 = byteOrderMark29.getClass();
        boolean boolean37 = byteOrderMark17.equals((java.lang.Object) byteOrderMark29);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = byteOrderMark29.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str33, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        int int1 = byteOrderMark0.length();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) "UTF-32BE");
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 4 + "'", int1 == 4);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj20 = null;
        boolean boolean21 = byteOrderMark19.equals(obj20);
        int int22 = byteOrderMark19.length();
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) 0L);
        int int25 = byteOrderMark19.length();
        int int26 = byteOrderMark19.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean29 = byteOrderMark27.equals((java.lang.Object) (-1L));
        java.lang.String str30 = byteOrderMark27.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int33 = byteOrderMark31.get(0);
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        byte[] byteArray35 = byteOrderMark31.getBytes();
        boolean boolean36 = byteOrderMark27.equals((java.lang.Object) byteOrderMark31);
        boolean boolean37 = byteOrderMark19.equals((java.lang.Object) boolean36);
        java.lang.String str38 = byteOrderMark19.getCharsetName();
        boolean boolean40 = byteOrderMark19.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.String str41 = byteOrderMark19.getCharsetName();
        java.lang.Class<?> wildcardClass42 = byteOrderMark19.getClass();
        boolean boolean43 = byteOrderMark17.equals((java.lang.Object) wildcardClass42);
        java.lang.Class<?> wildcardClass44 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 255 + "'", int33 == 255);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16BE" + "'", str38, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16BE" + "'", str41, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray23);
        java.lang.String str31 = byteOrderMark30.getCharsetName();
        boolean boolean32 = byteOrderMark4.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj34 = null;
        boolean boolean35 = byteOrderMark33.equals(obj34);
        int int36 = byteOrderMark33.length();
        boolean boolean38 = byteOrderMark33.equals((java.lang.Object) 0L);
        int int39 = byteOrderMark33.length();
        int int40 = byteOrderMark33.length();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        boolean boolean51 = byteOrderMark33.equals((java.lang.Object) intArray47);
        int[] intArray59 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray59);
        int int64 = byteOrderMark63.length();
        boolean boolean65 = byteOrderMark33.equals((java.lang.Object) byteOrderMark63);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int68 = byteOrderMark66.get(0);
        boolean boolean70 = byteOrderMark66.equals((java.lang.Object) (short) 0);
        int[] intArray77 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("hi!", intArray77);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray77);
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("hi!", intArray77);
        boolean boolean81 = byteOrderMark66.equals((java.lang.Object) byteOrderMark80);
        boolean boolean82 = byteOrderMark33.equals((java.lang.Object) byteOrderMark66);
        boolean boolean83 = byteOrderMark4.equals((java.lang.Object) byteOrderMark66);
        // The following exception was thrown during execution in test generation
        try {
            int int85 = byteOrderMark66.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str31, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(byteOrderMark66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 255 + "'", int68 == 255);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        java.lang.String str11 = byteOrderMark7.toString();
        java.lang.String str12 = byteOrderMark7.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        boolean boolean7 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = byteOrderMark0.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        int int10 = byteOrderMark9.length();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) 1L);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        int int18 = byteOrderMark14.length();
        boolean boolean19 = byteOrderMark9.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str20 = byteOrderMark9.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj22 = null;
        boolean boolean23 = byteOrderMark21.equals(obj22);
        byte[] byteArray24 = byteOrderMark21.getBytes();
        java.lang.String str25 = byteOrderMark21.toString();
        int int26 = byteOrderMark21.length();
        int int27 = byteOrderMark21.length();
        int int28 = byteOrderMark21.length();
        int int29 = byteOrderMark21.length();
        boolean boolean30 = byteOrderMark9.equals((java.lang.Object) int29);
        byte[] byteArray31 = byteOrderMark9.getBytes();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass3 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str2, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        int[] intArray18 = new int[] { (byte) -1 };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray18);
        java.lang.String str20 = byteOrderMark19.toString();
        boolean boolean21 = byteOrderMark15.equals((java.lang.Object) str20);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj37 = null;
        boolean boolean38 = byteOrderMark36.equals(obj37);
        byte[] byteArray39 = byteOrderMark36.getBytes();
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) byteOrderMark36);
        int int41 = byteOrderMark35.length();
        java.lang.String str42 = byteOrderMark35.getCharsetName();
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        boolean boolean53 = byteOrderMark35.equals((java.lang.Object) "hi!");
        int int54 = byteOrderMark35.length();
        boolean boolean55 = byteOrderMark19.equals((java.lang.Object) byteOrderMark35);
        byte[] byteArray56 = byteOrderMark19.getBytes();
        java.lang.String str57 = byteOrderMark19.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj59 = null;
        boolean boolean60 = byteOrderMark58.equals(obj59);
        int int61 = byteOrderMark58.length();
        byte[] byteArray62 = byteOrderMark58.getBytes();
        int int64 = byteOrderMark58.get(1);
        int int66 = byteOrderMark58.get((int) (byte) 0);
        java.lang.String str67 = byteOrderMark58.toString();
        boolean boolean68 = byteOrderMark19.equals((java.lang.Object) str67);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str57, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 255 + "'", int64 == 255);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 254 + "'", int66 == 254);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str67, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        int int14 = byteOrderMark13.length();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark13.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.length();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int10 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj3 = null;
        boolean boolean4 = byteOrderMark2.equals(obj3);
        byte[] byteArray5 = byteOrderMark2.getBytes();
        java.lang.String str6 = byteOrderMark2.toString();
        java.lang.String str7 = byteOrderMark2.getCharsetName();
        java.lang.String str8 = byteOrderMark2.toString();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        boolean boolean25 = byteOrderMark2.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray18);
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int26 = byteOrderMark23.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 10 + "'", int26 == 10);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str14 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean21 = byteOrderMark3.equals((java.lang.Object) intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str27 = byteOrderMark26.getCharsetName();
        java.lang.Class<?> wildcardClass28 = byteOrderMark26.getClass();
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) wildcardClass28);
        int int30 = byteOrderMark0.length();
        int int31 = byteOrderMark0.length();
        java.lang.String str32 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int34 = byteOrderMark0.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str32, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        boolean boolean64 = byteOrderMark47.equals((java.lang.Object) byteOrderMark61);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        java.lang.Object obj72 = null;
        boolean boolean73 = byteOrderMark70.equals(obj72);
        int int74 = byteOrderMark70.length();
        byte[] byteArray75 = byteOrderMark70.getBytes();
        java.lang.Class<?> wildcardClass76 = byteOrderMark70.getClass();
        boolean boolean77 = byteOrderMark61.equals((java.lang.Object) wildcardClass76);
        boolean boolean78 = byteOrderMark11.equals((java.lang.Object) byteOrderMark61);
        int int80 = byteOrderMark11.get(1);
        int[] intArray90 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark91 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark92 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark93 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark94 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark95 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark96 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray90);
        boolean boolean97 = byteOrderMark11.equals((java.lang.Object) byteOrderMark96);
        java.lang.String str98 = byteOrderMark11.toString();
        java.lang.String str99 = byteOrderMark11.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 97 + "'", int80 == 97);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str98, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str99, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        byte[] byteArray9 = byteOrderMark0.getBytes();
        byte[] byteArray10 = byteOrderMark0.getBytes();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        java.lang.Class<?> wildcardClass29 = byteOrderMark28.getClass();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        int[] intArray41 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray41);
        java.lang.String str49 = byteOrderMark48.getCharsetName();
        int int50 = byteOrderMark48.length();
        int int51 = byteOrderMark48.length();
        boolean boolean52 = byteOrderMark0.equals((java.lang.Object) byteOrderMark48);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = byteOrderMark48.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str49, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark6.equals(obj7);
        int int9 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark6.equals((java.lang.Object) 0L);
        byte[] byteArray12 = byteOrderMark6.getBytes();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteArray12);
        int int14 = byteOrderMark0.length();
        byte[] byteArray15 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean24 = byteOrderMark22.equals((java.lang.Object) 1L);
        java.lang.String str25 = byteOrderMark22.getCharsetName();
        int int26 = byteOrderMark22.length();
        boolean boolean28 = byteOrderMark22.equals((java.lang.Object) (-1.0f));
        java.lang.String str29 = byteOrderMark22.toString();
        byte[] byteArray30 = byteOrderMark22.getBytes();
        boolean boolean31 = byteOrderMark21.equals((java.lang.Object) byteArray30);
        int int32 = byteOrderMark21.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray34 = byteOrderMark33.getBytes();
        int int35 = byteOrderMark33.length();
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        java.lang.String str37 = byteOrderMark33.getCharsetName();
        java.lang.String str38 = byteOrderMark33.getCharsetName();
        byte[] byteArray39 = byteOrderMark33.getBytes();
        int int40 = byteOrderMark33.length();
        boolean boolean41 = byteOrderMark21.equals((java.lang.Object) int40);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str29, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16LE" + "'", str38, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark0.getBytes();
        int int18 = byteOrderMark0.get((int) (short) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 255 + "'", int18 == 255);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str15 = byteOrderMark14.toString();
        java.lang.String str16 = byteOrderMark14.toString();
        int int18 = byteOrderMark14.get(2);
        boolean boolean20 = byteOrderMark14.equals((java.lang.Object) (byte) 10);
        byte[] byteArray21 = byteOrderMark14.getBytes();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        boolean boolean38 = byteOrderMark14.equals((java.lang.Object) byteOrderMark37);
        int int39 = byteOrderMark14.length();
        int int41 = byteOrderMark14.get(0);
        boolean boolean42 = byteOrderMark13.equals((java.lang.Object) byteOrderMark14);
        java.lang.Class<?> wildcardClass43 = byteOrderMark14.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 254 + "'", int18 == 254);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean4 = byteOrderMark2.equals((java.lang.Object) (-1L));
        java.lang.String str5 = byteOrderMark2.getCharsetName();
        java.lang.String str6 = byteOrderMark2.getCharsetName();
        boolean boolean7 = byteOrderMark0.equals((java.lang.Object) str6);
        java.lang.String str8 = byteOrderMark0.toString();
        int int9 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark0.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) 1L);
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        int int12 = byteOrderMark8.length();
        boolean boolean14 = byteOrderMark8.equals((java.lang.Object) (byte) -1);
        byte[] byteArray15 = byteOrderMark8.getBytes();
        java.lang.String str16 = byteOrderMark8.getCharsetName();
        java.lang.String str17 = byteOrderMark8.getCharsetName();
        java.lang.String str18 = byteOrderMark8.getCharsetName();
        boolean boolean19 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark4.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        int int9 = byteOrderMark0.length();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        int int11 = byteOrderMark0.length();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) '4');
        byte[] byteArray14 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-32BE" + "'", str10, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 4 + "'", int11 == 4);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, -2, -1]");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        int int11 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark30.length();
        java.lang.String str48 = byteOrderMark30.getCharsetName();
        java.lang.String str49 = byteOrderMark30.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str48, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str49, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        int int14 = byteOrderMark11.length();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark11.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        java.lang.Object obj21 = null;
        boolean boolean22 = byteOrderMark19.equals(obj21);
        byte[] byteArray23 = byteOrderMark19.getBytes();
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteArray23);
        byte[] byteArray25 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-32BE" + "'", str20, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-17, -69, -65]");
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        boolean boolean10 = byteOrderMark3.equals((java.lang.Object) '\ufeff');
        byte[] byteArray11 = byteOrderMark3.getBytes();
        java.lang.Class<?> wildcardClass12 = byteOrderMark3.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str10, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        int int21 = byteOrderMark20.length();
        boolean boolean22 = byteOrderMark5.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        java.lang.String str24 = byteOrderMark20.toString();
        int int25 = byteOrderMark20.length();
        byte[] byteArray26 = byteOrderMark20.getBytes();
        java.lang.String str27 = byteOrderMark20.getCharsetName();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        int int7 = byteOrderMark4.length();
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) 0L);
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) int10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int14 = byteOrderMark12.get((int) (byte) 0);
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray24);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark12.equals((java.lang.Object) byteOrderMark30);
        boolean boolean33 = byteOrderMark0.equals((java.lang.Object) boolean32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean36 = byteOrderMark34.equals((java.lang.Object) 1L);
        java.lang.String str37 = byteOrderMark34.getCharsetName();
        int int38 = byteOrderMark34.length();
        boolean boolean40 = byteOrderMark34.equals((java.lang.Object) (byte) -1);
        byte[] byteArray41 = byteOrderMark34.getBytes();
        java.lang.String str42 = byteOrderMark34.getCharsetName();
        java.lang.String str43 = byteOrderMark34.getCharsetName();
        java.lang.String str44 = byteOrderMark34.getCharsetName();
        boolean boolean45 = byteOrderMark0.equals((java.lang.Object) byteOrderMark34);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 239 + "'", int14 == 239);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16LE" + "'", str43, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-16LE" + "'", str44, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        int int15 = byteOrderMark13.length();
        int int16 = byteOrderMark13.length();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        int int56 = byteOrderMark47.length();
        int int57 = byteOrderMark47.length();
        int int59 = byteOrderMark47.get(0);
        // The following exception was thrown during execution in test generation
        try {
            int int61 = byteOrderMark47.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 255 + "'", int59 == 255);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        int int28 = byteOrderMark9.length();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = byteOrderMark9.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray10);
        java.lang.Class<?> wildcardClass18 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray21 = byteOrderMark20.getBytes();
        java.lang.String str22 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int25 = byteOrderMark23.get((int) (byte) 0);
        byte[] byteArray26 = byteOrderMark23.getBytes();
        byte[] byteArray27 = byteOrderMark23.getBytes();
        boolean boolean28 = byteOrderMark20.equals((java.lang.Object) byteOrderMark23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int31 = byteOrderMark29.get(0);
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj34 = null;
        boolean boolean35 = byteOrderMark33.equals(obj34);
        int int36 = byteOrderMark33.length();
        boolean boolean38 = byteOrderMark33.equals((java.lang.Object) 0L);
        int int39 = byteOrderMark33.length();
        boolean boolean40 = byteOrderMark29.equals((java.lang.Object) int39);
        int int42 = byteOrderMark29.get(0);
        boolean boolean43 = byteOrderMark20.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean46 = byteOrderMark44.equals((java.lang.Object) (-1L));
        java.lang.String str47 = byteOrderMark44.toString();
        byte[] byteArray48 = byteOrderMark44.getBytes();
        java.lang.Class<?> wildcardClass49 = byteArray48.getClass();
        boolean boolean50 = byteOrderMark20.equals((java.lang.Object) wildcardClass49);
        boolean boolean51 = byteOrderMark19.equals((java.lang.Object) byteOrderMark20);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = byteOrderMark20.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-32BE" + "'", str22, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 239 + "'", int25 == 239);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 255 + "'", int31 == 255);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 255 + "'", int42 == 255);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteOrderMark44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str47, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        int int6 = byteOrderMark0.get((int) (short) 0);
        int int8 = byteOrderMark0.get((int) (short) 1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 254 + "'", int8 == 254);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.toString();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) (-1L));
        java.lang.String str23 = byteOrderMark20.toString();
        java.lang.String str24 = byteOrderMark20.getCharsetName();
        boolean boolean25 = byteOrderMark19.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str26 = byteOrderMark19.getCharsetName();
        int int27 = byteOrderMark19.length();
        byte[] byteArray28 = byteOrderMark19.getBytes();
        java.lang.String str29 = byteOrderMark19.getCharsetName();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        int int31 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str26, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray10 = byteOrderMark4.getBytes();
        int[] intArray16 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        int int20 = byteOrderMark18.get((int) (short) 0);
        boolean boolean21 = byteOrderMark4.equals((java.lang.Object) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str23 = byteOrderMark22.getCharsetName();
        java.lang.String str24 = byteOrderMark22.toString();
        boolean boolean25 = byteOrderMark4.equals((java.lang.Object) str24);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-32BE" + "'", str23, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray23);
        int int28 = byteOrderMark27.length();
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        boolean boolean45 = byteOrderMark27.equals((java.lang.Object) byteOrderMark44);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        int[] intArray72 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray72);
        byte[] byteArray78 = byteOrderMark77.getBytes();
        java.lang.String str79 = byteOrderMark77.getCharsetName();
        boolean boolean80 = byteOrderMark63.equals((java.lang.Object) byteOrderMark77);
        int[] intArray85 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark86 = new org.apache.commons.io.ByteOrderMark("hi!", intArray85);
        java.lang.String str87 = byteOrderMark86.getCharsetName();
        java.lang.Object obj88 = null;
        boolean boolean89 = byteOrderMark86.equals(obj88);
        int int90 = byteOrderMark86.length();
        byte[] byteArray91 = byteOrderMark86.getBytes();
        java.lang.Class<?> wildcardClass92 = byteOrderMark86.getClass();
        boolean boolean93 = byteOrderMark77.equals((java.lang.Object) wildcardClass92);
        boolean boolean94 = byteOrderMark27.equals((java.lang.Object) byteOrderMark77);
        java.lang.Class<?> wildcardClass95 = byteOrderMark27.getClass();
        boolean boolean96 = byteOrderMark15.equals((java.lang.Object) wildcardClass95);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "UTF-32BE" + "'", str79, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!" + "'", str87, "hi!");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 3 + "'", int90 == 3);
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark0.equals(obj7);
        int int10 = byteOrderMark0.get((int) (short) 0);
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark0.equals(obj11);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 255 + "'", int10 == 255);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        java.lang.String str13 = byteOrderMark11.getCharsetName();
        java.lang.String str14 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        int int14 = byteOrderMark11.length();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        java.lang.String str16 = byteOrderMark11.getCharsetName();
        boolean boolean18 = byteOrderMark11.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str6 = byteOrderMark4.getCharsetName();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        int[] intArray28 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray28);
        boolean boolean33 = byteOrderMark20.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str34 = byteOrderMark20.toString();
        java.lang.String str35 = byteOrderMark20.getCharsetName();
        boolean boolean36 = byteOrderMark4.equals((java.lang.Object) byteOrderMark20);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = byteOrderMark4.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-32BE" + "'", str35, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        java.lang.String str26 = byteOrderMark25.getCharsetName();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        int[] intArray8 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray8);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = byteOrderMark13.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[0, 10, -1]");
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray5);
        java.lang.String str8 = byteOrderMark7.toString();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str8, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.toString();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean9 = byteOrderMark7.equals((java.lang.Object) 1L);
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        int int11 = byteOrderMark7.length();
        boolean boolean13 = byteOrderMark7.equals((java.lang.Object) (byte) -1);
        byte[] byteArray14 = byteOrderMark7.getBytes();
        java.lang.String str15 = byteOrderMark7.getCharsetName();
        byte[] byteArray16 = byteOrderMark7.getBytes();
        int int18 = byteOrderMark7.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean20 = byteOrderMark7.equals((java.lang.Object) byteOrderMark19);
        int int21 = byteOrderMark7.length();
        int int22 = byteOrderMark7.length();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) int22);
        java.lang.String str24 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 255 + "'", int18 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str16 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        byte[] byteArray21 = byteOrderMark17.getBytes();
        java.lang.String str22 = byteOrderMark17.toString();
        java.lang.String str23 = byteOrderMark17.getCharsetName();
        java.lang.String str24 = byteOrderMark17.getCharsetName();
        java.lang.String str25 = byteOrderMark17.getCharsetName();
        boolean boolean26 = byteOrderMark0.equals((java.lang.Object) byteOrderMark17);
        byte[] byteArray27 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16BE" + "'", str23, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16BE" + "'", str24, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16BE" + "'", str25, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-2, -1]");
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass12 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray20 = byteOrderMark19.getBytes();
        boolean boolean21 = byteOrderMark17.equals((java.lang.Object) byteOrderMark19);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        int int13 = byteOrderMark9.length();
        java.lang.Class<?> wildcardClass14 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        int int15 = byteOrderMark13.get(1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 97 + "'", int15 == 97);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        java.lang.String str14 = byteOrderMark0.toString();
        int int15 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark0.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        int int13 = byteOrderMark12.length();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) int13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean17 = byteOrderMark15.equals((java.lang.Object) 1L);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        int int19 = byteOrderMark15.length();
        boolean boolean21 = byteOrderMark15.equals((java.lang.Object) (byte) -1);
        byte[] byteArray22 = byteOrderMark15.getBytes();
        java.lang.String str23 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass24 = byteOrderMark15.getClass();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark15);
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray37);
        boolean boolean46 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        byte[] byteArray47 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass48 = byteArray47.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        int int8 = byteOrderMark4.length();
        java.lang.Class<?> wildcardClass9 = byteOrderMark4.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        java.lang.String str12 = byteOrderMark9.toString();
        java.lang.String str13 = byteOrderMark9.toString();
        java.lang.String str14 = byteOrderMark9.toString();
        byte[] byteArray15 = byteOrderMark9.getBytes();
        java.lang.Class<?> wildcardClass16 = byteArray15.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        int[] intArray28 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray28);
        boolean boolean33 = byteOrderMark21.equals((java.lang.Object) byteOrderMark32);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[255]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        byte[] byteArray17 = byteOrderMark16.getBytes();
        boolean boolean18 = byteOrderMark5.equals((java.lang.Object) byteOrderMark16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray20 = byteOrderMark19.getBytes();
        int int21 = byteOrderMark19.length();
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        java.lang.String str23 = byteOrderMark19.getCharsetName();
        java.lang.String str24 = byteOrderMark19.getCharsetName();
        int int25 = byteOrderMark19.length();
        boolean boolean26 = byteOrderMark16.equals((java.lang.Object) int25);
        int int28 = byteOrderMark16.get(0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        byte[] byteArray28 = byteOrderMark21.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = byteOrderMark21.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        int int8 = byteOrderMark0.length();
        int int9 = byteOrderMark0.length();
        int[] intArray13 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        java.lang.String str17 = byteOrderMark15.toString();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) str17);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[255]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-8: 0xFF]" + "'", str17, "ByteOrderMark[UTF-8: 0xFF]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        java.lang.String str11 = byteOrderMark0.toString();
        java.lang.String str12 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        int int23 = byteOrderMark21.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 97 + "'", int23 == 97);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray14);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int5 = byteOrderMark3.get(0);
        java.lang.String str6 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj8 = null;
        boolean boolean9 = byteOrderMark7.equals(obj8);
        int int10 = byteOrderMark7.length();
        boolean boolean12 = byteOrderMark7.equals((java.lang.Object) 0L);
        int int13 = byteOrderMark7.length();
        boolean boolean14 = byteOrderMark3.equals((java.lang.Object) int13);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) boolean14);
        java.lang.String str16 = byteOrderMark0.getCharsetName();
        byte[] byteArray17 = byteOrderMark0.getBytes();
        int int19 = byteOrderMark0.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 255 + "'", int5 == 255);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 239 + "'", int19 == 239);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark0.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-32BE" + "'", str6, "UTF-32BE");
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str18 = byteOrderMark12.toString();
        java.lang.String str19 = byteOrderMark12.getCharsetName();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark12.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str15 = byteOrderMark14.toString();
        java.lang.String str16 = byteOrderMark14.toString();
        int int18 = byteOrderMark14.get(2);
        boolean boolean20 = byteOrderMark14.equals((java.lang.Object) (byte) 10);
        byte[] byteArray21 = byteOrderMark14.getBytes();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        boolean boolean38 = byteOrderMark14.equals((java.lang.Object) byteOrderMark37);
        int int39 = byteOrderMark14.length();
        int int41 = byteOrderMark14.get(0);
        boolean boolean42 = byteOrderMark13.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str43 = byteOrderMark14.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 254 + "'", int18 == 254);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str43, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.String str7 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int9 = byteOrderMark8.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark8.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) wildcardClass10);
        int int12 = byteOrderMark0.length();
        java.lang.String str13 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int16 = byteOrderMark14.get(0);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark14.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 255 + "'", int16 == 255);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        java.lang.Class<?> wildcardClass15 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        int int21 = byteOrderMark19.length();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        java.lang.String str35 = byteOrderMark34.toString();
        java.lang.String str36 = byteOrderMark34.toString();
        boolean boolean38 = byteOrderMark34.equals((java.lang.Object) true);
        boolean boolean40 = byteOrderMark34.equals((java.lang.Object) "UTF-32BE");
        java.lang.String str41 = byteOrderMark34.getCharsetName();
        java.lang.Class<?> wildcardClass42 = byteOrderMark34.getClass();
        boolean boolean43 = byteOrderMark23.equals((java.lang.Object) wildcardClass42);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str35, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str36, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        int int14 = byteOrderMark13.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray16 = byteOrderMark15.getBytes();
        int int17 = byteOrderMark15.length();
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark15.getClass();
        boolean boolean20 = byteOrderMark13.equals((java.lang.Object) byteOrderMark15);
        java.lang.String str21 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str21, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        byte[] byteArray19 = byteOrderMark0.getBytes();
        int int20 = byteOrderMark0.length();
        java.lang.String str21 = byteOrderMark0.getCharsetName();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray25 = byteOrderMark24.getBytes();
        java.lang.String str26 = byteOrderMark24.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int29 = byteOrderMark27.get((int) (byte) 0);
        byte[] byteArray30 = byteOrderMark27.getBytes();
        byte[] byteArray31 = byteOrderMark27.getBytes();
        boolean boolean32 = byteOrderMark24.equals((java.lang.Object) byteOrderMark27);
        byte[] byteArray33 = byteOrderMark27.getBytes();
        java.lang.String str34 = byteOrderMark27.toString();
        boolean boolean35 = byteOrderMark0.equals((java.lang.Object) str34);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16BE" + "'", str21, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-32BE" + "'", str26, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 239 + "'", int29 == 239);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str34, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        java.lang.String str22 = byteOrderMark20.toString();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        int int24 = byteOrderMark0.length();
        int int25 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = byteOrderMark0.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int13 = byteOrderMark11.get((int) (short) 1);
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        java.lang.Class<?> wildcardClass16 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int28 = byteOrderMark26.get((int) (short) 1);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark26);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 187 + "'", int28 == 187);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        int int18 = byteOrderMark17.length();
        int int19 = byteOrderMark17.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        int int7 = byteOrderMark4.length();
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) 0L);
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) int10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        byte[] byteArray21 = byteOrderMark12.getBytes();
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray23 = byteOrderMark12.getBytes();
        int int24 = byteOrderMark12.length();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = byteOrderMark12.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        boolean boolean64 = byteOrderMark47.equals((java.lang.Object) byteOrderMark61);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        java.lang.Object obj72 = null;
        boolean boolean73 = byteOrderMark70.equals(obj72);
        int int74 = byteOrderMark70.length();
        byte[] byteArray75 = byteOrderMark70.getBytes();
        java.lang.Class<?> wildcardClass76 = byteOrderMark70.getClass();
        boolean boolean77 = byteOrderMark61.equals((java.lang.Object) wildcardClass76);
        boolean boolean78 = byteOrderMark11.equals((java.lang.Object) byteOrderMark61);
        int int80 = byteOrderMark11.get(1);
        int[] intArray90 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark91 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark92 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark93 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark94 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark95 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark96 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray90);
        boolean boolean97 = byteOrderMark11.equals((java.lang.Object) byteOrderMark96);
        java.lang.String str98 = byteOrderMark96.getCharsetName();
        int int99 = byteOrderMark96.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 97 + "'", int80 == 97);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str98, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + 3 + "'", int99 == 3);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        int int15 = byteOrderMark13.get(0);
        int int16 = byteOrderMark13.length();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        int int8 = byteOrderMark4.length();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        boolean boolean29 = byteOrderMark4.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        byte[] byteArray30 = byteOrderMark4.getBytes();
        java.lang.String str31 = byteOrderMark4.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int33 = byteOrderMark4.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        int int19 = byteOrderMark16.length();
        boolean boolean21 = byteOrderMark16.equals((java.lang.Object) 0L);
        int int22 = byteOrderMark16.length();
        int int23 = byteOrderMark16.length();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean34 = byteOrderMark16.equals((java.lang.Object) intArray30);
        boolean boolean35 = byteOrderMark13.equals((java.lang.Object) intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        java.lang.String str38 = byteOrderMark37.getCharsetName();
        java.lang.Class<?> wildcardClass39 = byteOrderMark37.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str38, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int11 = byteOrderMark9.get(0);
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) (short) 0);
        byte[] byteArray14 = byteOrderMark9.getBytes();
        int int16 = byteOrderMark9.get(1);
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        byte[] byteArray18 = byteOrderMark9.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 254 + "'", int16 == 254);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -2]");
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray11);
        int int20 = byteOrderMark19.length();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray20);
        java.lang.Class<?> wildcardClass30 = byteOrderMark29.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark17.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str27 = byteOrderMark26.getCharsetName();
        java.lang.Class<?> wildcardClass28 = byteOrderMark26.getClass();
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) wildcardClass28);
        int int30 = byteOrderMark0.length();
        int int31 = byteOrderMark0.length();
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        boolean boolean50 = byteOrderMark0.equals((java.lang.Object) byteOrderMark49);
        java.lang.String str51 = byteOrderMark0.getCharsetName();
        java.lang.String str52 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 4 + "'", int30 == 4);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "UTF-32BE" + "'", str51, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str52, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) 1.0d);
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) wildcardClass40);
        int int43 = byteOrderMark0.get(0);
        java.lang.String str44 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-32BE" + "'", str44, "UTF-32BE");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) wildcardClass40);
        int int43 = byteOrderMark0.get(0);
        // The following exception was thrown during execution in test generation
        try {
            int int45 = byteOrderMark0.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int int9 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) 1L);
        java.lang.String str13 = byteOrderMark10.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark14.getBytes();
        int int17 = byteOrderMark14.length();
        java.lang.String str18 = byteOrderMark14.getCharsetName();
        java.lang.String str19 = byteOrderMark14.getCharsetName();
        byte[] byteArray20 = byteOrderMark14.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.Class<?> wildcardClass22 = byteOrderMark14.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16BE" + "'", str18, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        int int7 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = byteOrderMark0.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        int int14 = byteOrderMark0.length();
        byte[] byteArray15 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass16 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int5 = byteOrderMark3.get(0);
        java.lang.String str6 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj8 = null;
        boolean boolean9 = byteOrderMark7.equals(obj8);
        int int10 = byteOrderMark7.length();
        boolean boolean12 = byteOrderMark7.equals((java.lang.Object) 0L);
        int int13 = byteOrderMark7.length();
        boolean boolean14 = byteOrderMark3.equals((java.lang.Object) int13);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) boolean14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int18 = byteOrderMark16.get(0);
        boolean boolean20 = byteOrderMark16.equals((java.lang.Object) (short) 0);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        java.lang.String str38 = byteOrderMark36.toString();
        boolean boolean39 = byteOrderMark16.equals((java.lang.Object) str38);
        boolean boolean40 = byteOrderMark0.equals((java.lang.Object) boolean39);
        int int41 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 255 + "'", int5 == 255);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 255 + "'", int18 == 255);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str38, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        int int4 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray6 = byteOrderMark5.getBytes();
        int int7 = byteOrderMark5.length();
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        java.lang.String str9 = byteOrderMark5.getCharsetName();
        java.lang.String str10 = byteOrderMark5.getCharsetName();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        boolean boolean12 = byteOrderMark0.equals((java.lang.Object) byteOrderMark5);
        java.lang.String str13 = byteOrderMark5.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray12);
        java.lang.String str22 = byteOrderMark21.getCharsetName();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int int9 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) 1L);
        java.lang.String str13 = byteOrderMark10.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark14.getBytes();
        int int17 = byteOrderMark14.length();
        java.lang.String str18 = byteOrderMark14.getCharsetName();
        java.lang.String str19 = byteOrderMark14.getCharsetName();
        byte[] byteArray20 = byteOrderMark14.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray22 = byteOrderMark0.getBytes();
        java.lang.String str23 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16BE" + "'", str18, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        java.lang.String str18 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        boolean boolean34 = byteOrderMark17.equals((java.lang.Object) byteOrderMark31);
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        java.lang.String str41 = byteOrderMark40.getCharsetName();
        java.lang.Object obj42 = null;
        boolean boolean43 = byteOrderMark40.equals(obj42);
        int int44 = byteOrderMark40.length();
        byte[] byteArray45 = byteOrderMark40.getBytes();
        java.lang.Class<?> wildcardClass46 = byteOrderMark40.getClass();
        boolean boolean47 = byteOrderMark31.equals((java.lang.Object) wildcardClass46);
        java.lang.String str48 = byteOrderMark31.getCharsetName();
        java.lang.String str49 = byteOrderMark31.getCharsetName();
        byte[] byteArray50 = byteOrderMark31.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-32BE" + "'", str48, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-32BE" + "'", str49, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 97, 35]");
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark4.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        int[] intArray2 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray2);
        int int4 = byteOrderMark3.length();
        java.lang.String str5 = byteOrderMark3.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int7 = byteOrderMark3.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray2), "[255]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str5, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        boolean boolean20 = byteOrderMark2.equals((java.lang.Object) intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        java.lang.String str23 = byteOrderMark22.toString();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int int13 = byteOrderMark11.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray15 = byteOrderMark14.getBytes();
        int int16 = byteOrderMark14.length();
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        java.lang.Class<?> wildcardClass18 = byteOrderMark14.getClass();
        boolean boolean19 = byteOrderMark11.equals((java.lang.Object) wildcardClass18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj21 = null;
        boolean boolean22 = byteOrderMark20.equals(obj21);
        int int23 = byteOrderMark20.length();
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) 0L);
        int int26 = byteOrderMark20.length();
        boolean boolean28 = byteOrderMark20.equals((java.lang.Object) 3);
        java.lang.String str29 = byteOrderMark20.getCharsetName();
        java.lang.String str30 = byteOrderMark20.getCharsetName();
        java.lang.String str31 = byteOrderMark20.toString();
        byte[] byteArray32 = byteOrderMark20.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str34 = byteOrderMark33.getCharsetName();
        int int35 = byteOrderMark33.length();
        int int36 = byteOrderMark33.length();
        java.lang.String str37 = byteOrderMark33.getCharsetName();
        boolean boolean38 = byteOrderMark20.equals((java.lang.Object) str37);
        java.lang.String str39 = byteOrderMark20.toString();
        java.lang.Object obj40 = null;
        boolean boolean41 = byteOrderMark20.equals(obj40);
        boolean boolean42 = byteOrderMark11.equals(obj40);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16BE" + "'", str29, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16BE" + "'", str30, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str39, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        int int17 = byteOrderMark15.get((int) (byte) 0);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int40 = byteOrderMark39.length();
        java.lang.String str41 = byteOrderMark39.getCharsetName();
        byte[] byteArray42 = byteOrderMark39.getBytes();
        boolean boolean43 = byteOrderMark15.equals((java.lang.Object) byteArray42);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str41, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str2 = byteOrderMark1.toString();
        boolean boolean4 = byteOrderMark1.equals((java.lang.Object) ' ');
        java.lang.String str5 = byteOrderMark1.toString();
        java.lang.String str6 = byteOrderMark1.toString();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray20);
        boolean boolean31 = byteOrderMark1.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]", intArray20);
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.toString();
        java.lang.String str10 = byteOrderMark3.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str9, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-8" + "'", str10, "UTF-8");
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean28 = byteOrderMark26.equals((java.lang.Object) (-1L));
        java.lang.String str29 = byteOrderMark26.toString();
        java.lang.String str30 = byteOrderMark26.getCharsetName();
        boolean boolean31 = byteOrderMark25.equals((java.lang.Object) byteOrderMark26);
        boolean boolean32 = byteOrderMark13.equals((java.lang.Object) byteOrderMark25);
        java.lang.Class<?> wildcardClass33 = byteOrderMark25.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str29, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        byte[] byteArray10 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, -2, -1]");
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int int6 = byteOrderMark0.get(1);
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark0.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 254 + "'", int6 == 254);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        java.lang.String str20 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.toString();
        int int15 = byteOrderMark13.length();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark13.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        int int14 = byteOrderMark13.length();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        java.lang.String str16 = byteOrderMark13.toString();
        int int17 = byteOrderMark13.length();
        java.lang.Class<?> wildcardClass18 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) (-1L));
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        byte[] byteArray16 = byteOrderMark12.getBytes();
        boolean boolean17 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) boolean17);
        java.lang.String str19 = byteOrderMark0.getCharsetName();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.String str22 = byteOrderMark0.toString();
        java.lang.String str23 = byteOrderMark0.toString();
        java.lang.String str24 = byteOrderMark0.toString();
        byte[] byteArray25 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        java.lang.String str22 = byteOrderMark20.toString();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        java.lang.String str24 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = byteOrderMark0.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        byte[] byteArray28 = byteOrderMark21.getBytes();
        java.lang.Class<?> wildcardClass29 = byteArray28.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.toString();
        java.lang.String str10 = byteOrderMark3.toString();
        java.lang.String str11 = byteOrderMark3.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str9, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str10, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-8" + "'", str11, "UTF-8");
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        int int20 = byteOrderMark19.length();
        java.lang.String str21 = byteOrderMark19.getCharsetName();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int8 = byteOrderMark0.get(1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 254 + "'", int8 == 254);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int1 = byteOrderMark0.length();
        byte[] byteArray2 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-2, -1]");
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        java.lang.Class<?> wildcardClass26 = byteOrderMark25.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        int int13 = byteOrderMark11.length();
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        java.lang.String str15 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        int[] intArray8 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray8);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 254]");
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        byte[] byteArray19 = byteOrderMark0.getBytes();
        int int20 = byteOrderMark0.length();
        java.lang.String str21 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        boolean boolean40 = byteOrderMark22.equals((java.lang.Object) intArray33);
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) intArray33);
        java.lang.String str42 = byteOrderMark0.toString();
        int int43 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16BE" + "'", str21, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str42, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2 + "'", int43 == 2);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj20 = null;
        boolean boolean21 = byteOrderMark19.equals(obj20);
        int int22 = byteOrderMark19.length();
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) 0L);
        int int25 = byteOrderMark19.length();
        int int26 = byteOrderMark19.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean29 = byteOrderMark27.equals((java.lang.Object) (-1L));
        java.lang.String str30 = byteOrderMark27.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int33 = byteOrderMark31.get(0);
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        byte[] byteArray35 = byteOrderMark31.getBytes();
        boolean boolean36 = byteOrderMark27.equals((java.lang.Object) byteOrderMark31);
        boolean boolean37 = byteOrderMark19.equals((java.lang.Object) boolean36);
        java.lang.String str38 = byteOrderMark19.getCharsetName();
        boolean boolean40 = byteOrderMark19.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.String str41 = byteOrderMark19.getCharsetName();
        java.lang.Class<?> wildcardClass42 = byteOrderMark19.getClass();
        boolean boolean43 = byteOrderMark17.equals((java.lang.Object) wildcardClass42);
        int int44 = byteOrderMark17.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 255 + "'", int33 == 255);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16BE" + "'", str38, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16BE" + "'", str41, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str25 = byteOrderMark0.getCharsetName();
        byte[] byteArray26 = byteOrderMark0.getBytes();
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray39);
        int int50 = byteOrderMark48.get(1);
        boolean boolean51 = byteOrderMark0.equals((java.lang.Object) 1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-32BE" + "'", str25, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 97 + "'", int50 == 97);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        byte[] byteArray5 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int8 = byteOrderMark6.get(0);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 0L);
        int int16 = byteOrderMark10.length();
        boolean boolean17 = byteOrderMark6.equals((java.lang.Object) int16);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark6);
        byte[] byteArray19 = byteOrderMark6.getBytes();
        java.lang.String str20 = byteOrderMark6.toString();
        byte[] byteArray21 = byteOrderMark6.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 255 + "'", int8 == 255);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        byte[] byteArray20 = byteOrderMark17.getBytes();
        int int22 = byteOrderMark17.get((int) (byte) 1);
        java.lang.String str23 = byteOrderMark17.getCharsetName();
        byte[] byteArray24 = byteOrderMark17.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = byteOrderMark17.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        int int17 = byteOrderMark15.get(2);
        byte[] byteArray18 = byteOrderMark15.getBytes();
        java.lang.String str19 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray13);
        int int25 = byteOrderMark23.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        boolean boolean10 = byteOrderMark3.equals((java.lang.Object) '\ufeff');
        byte[] byteArray11 = byteOrderMark3.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        java.lang.String str21 = byteOrderMark12.getCharsetName();
        java.lang.String str22 = byteOrderMark12.toString();
        java.lang.String str23 = byteOrderMark12.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark24.equals(obj25);
        int int27 = byteOrderMark24.length();
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) 0L);
        int int30 = byteOrderMark24.length();
        int int31 = byteOrderMark24.length();
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        boolean boolean42 = byteOrderMark24.equals((java.lang.Object) intArray38);
        int[] intArray50 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray50);
        int int55 = byteOrderMark54.length();
        boolean boolean56 = byteOrderMark24.equals((java.lang.Object) byteOrderMark54);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean59 = byteOrderMark57.equals((java.lang.Object) 1L);
        java.lang.String str60 = byteOrderMark57.getCharsetName();
        int int61 = byteOrderMark57.length();
        boolean boolean63 = byteOrderMark57.equals((java.lang.Object) (byte) -1);
        byte[] byteArray64 = byteOrderMark57.getBytes();
        java.lang.String str65 = byteOrderMark57.getCharsetName();
        java.lang.String str66 = byteOrderMark57.getCharsetName();
        java.lang.String str67 = byteOrderMark57.toString();
        int int68 = byteOrderMark57.length();
        int int69 = byteOrderMark57.length();
        boolean boolean70 = byteOrderMark54.equals((java.lang.Object) byteOrderMark57);
        int int71 = byteOrderMark54.length();
        byte[] byteArray72 = byteOrderMark54.getBytes();
        java.lang.Class<?> wildcardClass73 = byteArray72.getClass();
        boolean boolean74 = byteOrderMark12.equals((java.lang.Object) wildcardClass73);
        boolean boolean75 = byteOrderMark3.equals((java.lang.Object) boolean74);
        byte[] byteArray76 = byteOrderMark3.getBytes();
        java.lang.Class<?> wildcardClass77 = byteArray76.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteOrderMark57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-16LE" + "'", str60, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2 + "'", int61 == 2);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "UTF-16LE" + "'", str65, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "UTF-16LE" + "'", str66, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str67, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 3 + "'", int71 == 3);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass7 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        byte[] byteArray56 = byteOrderMark33.getBytes();
        java.lang.Class<?> wildcardClass57 = byteArray56.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        int int18 = byteOrderMark17.length();
        int int20 = byteOrderMark17.get((int) (short) 0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        java.lang.Object obj21 = null;
        boolean boolean22 = byteOrderMark19.equals(obj21);
        byte[] byteArray23 = byteOrderMark19.getBytes();
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteArray23);
        java.lang.Class<?> wildcardClass25 = byteArray23.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-8" + "'", str5, "UTF-8");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-32BE" + "'", str20, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int10 = byteOrderMark4.length();
        java.lang.String str11 = byteOrderMark4.toString();
        java.lang.Class<?> wildcardClass12 = byteOrderMark4.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int6 = byteOrderMark0.length();
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        byte[] byteArray21 = byteOrderMark19.getBytes();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.String str19 = byteOrderMark17.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) 1L);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        int int24 = byteOrderMark20.length();
        boolean boolean26 = byteOrderMark20.equals((java.lang.Object) (byte) -1);
        byte[] byteArray27 = byteOrderMark20.getBytes();
        java.lang.String str28 = byteOrderMark20.getCharsetName();
        byte[] byteArray29 = byteOrderMark20.getBytes();
        int int31 = byteOrderMark20.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean33 = byteOrderMark20.equals((java.lang.Object) byteOrderMark32);
        byte[] byteArray34 = byteOrderMark32.getBytes();
        java.lang.String str35 = byteOrderMark32.getCharsetName();
        boolean boolean36 = byteOrderMark17.equals((java.lang.Object) str35);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-16LE" + "'", str28, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 255 + "'", int31 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) 1L);
        java.lang.String str13 = byteOrderMark10.getCharsetName();
        int int14 = byteOrderMark10.length();
        java.lang.String str15 = byteOrderMark10.toString();
        java.lang.String str16 = byteOrderMark10.getCharsetName();
        int int17 = byteOrderMark10.length();
        java.lang.String str18 = byteOrderMark10.toString();
        java.lang.String str19 = byteOrderMark10.getCharsetName();
        boolean boolean20 = byteOrderMark3.equals((java.lang.Object) str19);
        byte[] byteArray21 = byteOrderMark3.getBytes();
        java.lang.String str22 = byteOrderMark3.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int9 = byteOrderMark8.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark8.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) wildcardClass10);
        int int12 = byteOrderMark0.length();
        java.lang.String str13 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int16 = byteOrderMark14.get(0);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        java.lang.String str27 = byteOrderMark23.getCharsetName();
        int int28 = byteOrderMark23.length();
        int int29 = byteOrderMark23.length();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str31 = byteOrderMark23.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 255 + "'", int16 == 255);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16BE" + "'", str27, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        int[] intArray6 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0, 254]");
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        int int1 = byteOrderMark0.length();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) "UTF-32BE");
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        java.lang.String str22 = byteOrderMark20.getCharsetName();
        byte[] byteArray23 = byteOrderMark20.getBytes();
        java.lang.String str24 = byteOrderMark20.toString();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str26 = byteOrderMark0.toString();
        int int27 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 4 + "'", int1 == 4);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str26, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 4 + "'", int27 == 4);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int35 = byteOrderMark33.get(0);
        boolean boolean37 = byteOrderMark33.equals((java.lang.Object) (short) 0);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        boolean boolean48 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark0.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray50 = byteOrderMark33.getBytes();
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark33.equals(obj51);
        int[] intArray59 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        java.lang.String str63 = byteOrderMark62.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = org.apache.commons.io.ByteOrderMark.UTF_8;
        byte[] byteArray65 = byteOrderMark64.getBytes();
        boolean boolean66 = byteOrderMark62.equals((java.lang.Object) byteArray65);
        boolean boolean67 = byteOrderMark33.equals((java.lang.Object) byteOrderMark62);
        java.lang.String str68 = byteOrderMark33.getCharsetName();
        int int69 = byteOrderMark33.length();
        // The following exception was thrown during execution in test generation
        try {
            int int71 = byteOrderMark33.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 255 + "'", int35 == 255);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str63, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "UTF-16LE" + "'", str68, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 2 + "'", int69 == 2);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        boolean boolean17 = byteOrderMark13.equals((java.lang.Object) (short) 100);
        java.lang.String str18 = byteOrderMark13.toString();
        java.lang.String str19 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        boolean boolean64 = byteOrderMark47.equals((java.lang.Object) byteOrderMark61);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        java.lang.Object obj72 = null;
        boolean boolean73 = byteOrderMark70.equals(obj72);
        int int74 = byteOrderMark70.length();
        byte[] byteArray75 = byteOrderMark70.getBytes();
        java.lang.Class<?> wildcardClass76 = byteOrderMark70.getClass();
        boolean boolean77 = byteOrderMark61.equals((java.lang.Object) wildcardClass76);
        boolean boolean78 = byteOrderMark11.equals((java.lang.Object) byteOrderMark61);
        java.lang.String str79 = byteOrderMark61.toString();
        int int80 = byteOrderMark61.length();
        java.lang.String str81 = byteOrderMark61.getCharsetName();
        java.lang.String str82 = byteOrderMark61.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str79, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 3 + "'", int80 == 3);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "UTF-32BE" + "'", str81, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "UTF-32BE" + "'", str82, "UTF-32BE");
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass8 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.String str19 = byteOrderMark17.getCharsetName();
        java.lang.String str20 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int9 = byteOrderMark8.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark8.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) wildcardClass10);
        int int12 = byteOrderMark0.length();
        java.lang.String str13 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int16 = byteOrderMark14.get(0);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int int19 = byteOrderMark14.length();
        int int21 = byteOrderMark14.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 255 + "'", int16 == 255);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 254 + "'", int21 == 254);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass6 = byteArray5.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        int[] intArray3 = new int[] { (byte) -1 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray3);
        java.lang.String str6 = byteOrderMark5.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark5.get(1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]" + "'", str6, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]");
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        int int22 = byteOrderMark21.length();
        int int23 = byteOrderMark21.length();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray6);
        java.lang.Class<?> wildcardClass10 = intArray6.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean20 = byteOrderMark18.equals((java.lang.Object) 1L);
        java.lang.String str21 = byteOrderMark18.getCharsetName();
        int int22 = byteOrderMark18.length();
        boolean boolean24 = byteOrderMark18.equals((java.lang.Object) (byte) -1);
        byte[] byteArray25 = byteOrderMark18.getBytes();
        java.lang.String str26 = byteOrderMark18.getCharsetName();
        byte[] byteArray27 = byteOrderMark18.getBytes();
        java.lang.String str28 = byteOrderMark18.getCharsetName();
        byte[] byteArray29 = byteOrderMark18.getBytes();
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) byteArray29);
        java.lang.String str31 = byteOrderMark12.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-16LE" + "'", str28, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str31, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = org.apache.commons.io.ByteOrderMark.UTF_8;
        byte[] byteArray12 = byteOrderMark11.getBytes();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) byteArray12);
        java.lang.Class<?> wildcardClass14 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        int[] intArray15 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray15);
        boolean boolean17 = byteOrderMark5.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str41 = byteOrderMark40.toString();
        java.lang.String str42 = byteOrderMark40.toString();
        int int44 = byteOrderMark40.get(2);
        boolean boolean46 = byteOrderMark40.equals((java.lang.Object) (byte) 10);
        byte[] byteArray47 = byteOrderMark40.getBytes();
        boolean boolean48 = byteOrderMark39.equals((java.lang.Object) byteOrderMark40);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean51 = byteOrderMark49.equals((java.lang.Object) (-1L));
        java.lang.String str52 = byteOrderMark49.getCharsetName();
        java.lang.String str53 = byteOrderMark49.getCharsetName();
        java.lang.String str54 = byteOrderMark49.getCharsetName();
        java.lang.String str55 = byteOrderMark49.toString();
        int[] intArray62 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray62);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray62);
        int int66 = byteOrderMark65.length();
        int[] intArray71 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("hi!", intArray71);
        java.lang.String str73 = byteOrderMark72.getCharsetName();
        java.lang.Object obj74 = null;
        boolean boolean75 = byteOrderMark72.equals(obj74);
        boolean boolean76 = byteOrderMark65.equals(obj74);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean79 = byteOrderMark77.equals((java.lang.Object) (-1L));
        java.lang.String str80 = byteOrderMark77.getCharsetName();
        java.lang.String str81 = byteOrderMark77.getCharsetName();
        java.lang.String str82 = byteOrderMark77.getCharsetName();
        boolean boolean83 = byteOrderMark65.equals((java.lang.Object) byteOrderMark77);
        boolean boolean84 = byteOrderMark49.equals((java.lang.Object) byteOrderMark77);
        boolean boolean85 = byteOrderMark40.equals((java.lang.Object) byteOrderMark49);
        boolean boolean86 = byteOrderMark5.equals((java.lang.Object) boolean85);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str41, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str42, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 254 + "'", int44 == 254);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteOrderMark49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "UTF-16LE" + "'", str52, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-16LE" + "'", str53, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str55, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(byteOrderMark77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "UTF-16LE" + "'", str80, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "UTF-16LE" + "'", str81, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "UTF-16LE" + "'", str82, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int int10 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = byteOrderMark0.get(2);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray13);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]" + "'", str24, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]");
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark23.equals(obj25);
        byte[] byteArray27 = byteOrderMark23.getBytes();
        byte[] byteArray28 = byteOrderMark23.getBytes();
        boolean boolean29 = byteOrderMark17.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str30 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        java.lang.Class<?> wildcardClass18 = intArray10.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.get(1);
        byte[] byteArray8 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass9 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        int int11 = byteOrderMark9.length();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        int int28 = byteOrderMark27.length();
        boolean boolean29 = byteOrderMark9.equals((java.lang.Object) int28);
        int int30 = byteOrderMark9.length();
        java.lang.String str31 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 3 + "'", int30 == 3);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark30.length();
        java.lang.String str48 = byteOrderMark30.toString();
        byte[] byteArray49 = byteOrderMark30.getBytes();
        int int50 = byteOrderMark30.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean53 = byteOrderMark51.equals((java.lang.Object) 1L);
        java.lang.String str54 = byteOrderMark51.getCharsetName();
        int int55 = byteOrderMark51.length();
        boolean boolean57 = byteOrderMark51.equals((java.lang.Object) (byte) -1);
        byte[] byteArray58 = byteOrderMark51.getBytes();
        java.lang.String str59 = byteOrderMark51.getCharsetName();
        java.lang.String str60 = byteOrderMark51.getCharsetName();
        java.lang.String str61 = byteOrderMark51.toString();
        int int62 = byteOrderMark51.length();
        int int64 = byteOrderMark51.get((int) (byte) 1);
        int[] intArray70 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = new org.apache.commons.io.ByteOrderMark("hi!", intArray70);
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray70);
        boolean boolean73 = byteOrderMark51.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        java.lang.String str74 = byteOrderMark51.toString();
        boolean boolean75 = byteOrderMark30.equals((java.lang.Object) str74);
        java.lang.String str76 = byteOrderMark30.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 3 + "'", int50 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-16LE" + "'", str59, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-16LE" + "'", str60, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str61, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 2 + "'", int62 == 2);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 254 + "'", int64 == 254);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str74, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str76, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        java.lang.String str17 = byteOrderMark12.getCharsetName();
        byte[] byteArray18 = byteOrderMark12.getBytes();
        boolean boolean19 = byteOrderMark9.equals((java.lang.Object) byteArray18);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int35 = byteOrderMark33.get(0);
        boolean boolean37 = byteOrderMark33.equals((java.lang.Object) (short) 0);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        boolean boolean48 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark0.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray50 = byteOrderMark33.getBytes();
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark33.equals(obj51);
        int[] intArray59 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        java.lang.String str63 = byteOrderMark62.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = org.apache.commons.io.ByteOrderMark.UTF_8;
        byte[] byteArray65 = byteOrderMark64.getBytes();
        boolean boolean66 = byteOrderMark62.equals((java.lang.Object) byteArray65);
        boolean boolean67 = byteOrderMark33.equals((java.lang.Object) byteOrderMark62);
        java.lang.String str68 = byteOrderMark33.getCharsetName();
        java.lang.Class<?> wildcardClass69 = byteOrderMark33.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 255 + "'", int35 == 255);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str63, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark64);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "UTF-16LE" + "'", str68, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        byte[] byteArray26 = byteOrderMark0.getBytes();
        int int28 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) 1L);
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        int int33 = byteOrderMark29.length();
        boolean boolean35 = byteOrderMark29.equals((java.lang.Object) (byte) -1);
        byte[] byteArray36 = byteOrderMark29.getBytes();
        java.lang.String str37 = byteOrderMark29.getCharsetName();
        java.lang.String str38 = byteOrderMark29.getCharsetName();
        int[] intArray46 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray46);
        boolean boolean51 = byteOrderMark29.equals((java.lang.Object) byteOrderMark50);
        int int52 = byteOrderMark50.length();
        boolean boolean53 = byteOrderMark0.equals((java.lang.Object) int52);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16LE" + "'", str38, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3 + "'", int52 == 3);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        int int4 = byteOrderMark0.length();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray7 = byteOrderMark6.getBytes();
        java.lang.String str8 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int11 = byteOrderMark9.get((int) (byte) 0);
        byte[] byteArray12 = byteOrderMark9.getBytes();
        byte[] byteArray13 = byteOrderMark9.getBytes();
        boolean boolean14 = byteOrderMark6.equals((java.lang.Object) byteOrderMark9);
        java.lang.String str15 = byteOrderMark9.toString();
        boolean boolean16 = byteOrderMark0.equals((java.lang.Object) str15);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = byteOrderMark0.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 239 + "'", int11 == 239);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str15, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        int[] intArray3 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray3);
        byte[] byteArray6 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean9 = byteOrderMark7.equals((java.lang.Object) (-1L));
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int13 = byteOrderMark11.get(0);
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        boolean boolean16 = byteOrderMark7.equals((java.lang.Object) byteOrderMark11);
        int int17 = byteOrderMark11.length();
        java.lang.String str18 = byteOrderMark11.toString();
        boolean boolean19 = byteOrderMark5.equals((java.lang.Object) byteOrderMark11);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[255]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1]");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 255 + "'", int13 == 255);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        int[] intArray4 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray4);
        java.lang.Class<?> wildcardClass8 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[255]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str25 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean28 = byteOrderMark26.equals((java.lang.Object) (-1L));
        java.lang.String str29 = byteOrderMark26.toString();
        byte[] byteArray30 = byteOrderMark26.getBytes();
        byte[] byteArray31 = byteOrderMark26.getBytes();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark26);
        java.lang.Class<?> wildcardClass33 = byteOrderMark26.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-32BE" + "'", str25, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str29, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str6 = byteOrderMark4.getCharsetName();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        int[] intArray28 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray28);
        boolean boolean33 = byteOrderMark20.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str34 = byteOrderMark20.toString();
        java.lang.String str35 = byteOrderMark20.getCharsetName();
        boolean boolean36 = byteOrderMark4.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str37 = byteOrderMark20.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-32BE" + "'", str35, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-32BE" + "'", str37, "UTF-32BE");
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32LE;
        boolean boolean3 = byteOrderMark1.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        java.lang.Class<?> wildcardClass4 = byteOrderMark1.getClass();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark1);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str7 = byteOrderMark6.toString();
        java.lang.String str8 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.get(2);
        java.lang.String str11 = byteOrderMark6.toString();
        int int13 = byteOrderMark6.get(1);
        byte[] byteArray14 = byteOrderMark6.getBytes();
        java.lang.String str15 = byteOrderMark6.toString();
        java.lang.String str16 = byteOrderMark6.toString();
        java.lang.String str17 = byteOrderMark6.toString();
        java.lang.String str18 = byteOrderMark6.getCharsetName();
        boolean boolean19 = byteOrderMark1.equals((java.lang.Object) byteOrderMark6);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 254 + "'", int10 == 254);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        int int8 = byteOrderMark4.length();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        boolean boolean29 = byteOrderMark4.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        byte[] byteArray30 = byteOrderMark4.getBytes();
        java.lang.String str31 = byteOrderMark4.toString();
        java.lang.Class<?> wildcardClass32 = byteOrderMark4.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        int int12 = byteOrderMark11.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int18 = byteOrderMark16.get((int) (byte) 0);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        byte[] byteArray20 = byteOrderMark16.getBytes();
        boolean boolean21 = byteOrderMark13.equals((java.lang.Object) byteOrderMark16);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        boolean boolean38 = byteOrderMark13.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        java.lang.Class<?> wildcardClass41 = byteOrderMark39.getClass();
        boolean boolean42 = byteOrderMark13.equals((java.lang.Object) wildcardClass41);
        int int43 = byteOrderMark13.length();
        int int44 = byteOrderMark13.length();
        boolean boolean45 = byteOrderMark11.equals((java.lang.Object) byteOrderMark13);
        int int46 = byteOrderMark11.length();
        java.lang.String str47 = byteOrderMark11.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int49 = byteOrderMark11.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-32BE" + "'", str15, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 239 + "'", int18 == 239);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16LE" + "'", str40, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str47, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) intArray30);
        int int38 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int40 = byteOrderMark0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass3 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-32BE" + "'", str1, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str6 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int9 = byteOrderMark7.get(0);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        int int16 = byteOrderMark15.length();
        java.lang.Class<?> wildcardClass17 = byteOrderMark15.getClass();
        boolean boolean18 = byteOrderMark7.equals((java.lang.Object) wildcardClass17);
        int int19 = byteOrderMark7.length();
        java.lang.String str20 = byteOrderMark7.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int23 = byteOrderMark21.get(0);
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        boolean boolean25 = byteOrderMark7.equals((java.lang.Object) byteOrderMark21);
        int int26 = byteOrderMark21.length();
        boolean boolean27 = byteOrderMark0.equals((java.lang.Object) int26);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 255 + "'", int9 == 255);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 255 + "'", int23 == 255);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark0.equals(obj7);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        int int16 = byteOrderMark13.length();
        java.lang.Class<?> wildcardClass17 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        int int16 = byteOrderMark15.length();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = byteOrderMark15.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        int int7 = byteOrderMark4.length();
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) 0L);
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) int10);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str27 = byteOrderMark26.toString();
        java.lang.String str28 = byteOrderMark26.toString();
        int int30 = byteOrderMark26.get(2);
        byte[] byteArray31 = byteOrderMark26.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int34 = byteOrderMark32.get(0);
        java.lang.String str35 = byteOrderMark32.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj37 = null;
        boolean boolean38 = byteOrderMark36.equals(obj37);
        int int39 = byteOrderMark36.length();
        boolean boolean41 = byteOrderMark36.equals((java.lang.Object) 0L);
        int int42 = byteOrderMark36.length();
        boolean boolean43 = byteOrderMark32.equals((java.lang.Object) int42);
        boolean boolean44 = byteOrderMark26.equals((java.lang.Object) byteOrderMark32);
        byte[] byteArray45 = byteOrderMark32.getBytes();
        java.lang.String str46 = byteOrderMark32.getCharsetName();
        boolean boolean47 = byteOrderMark25.equals((java.lang.Object) byteOrderMark32);
        boolean boolean48 = byteOrderMark0.equals((java.lang.Object) byteOrderMark25);
        java.lang.String str49 = byteOrderMark25.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str27, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 254 + "'", int30 == 254);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 255 + "'", int34 == 255);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-16LE" + "'", str35, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-16LE" + "'", str46, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str49, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.toString();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        int int8 = byteOrderMark0.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 255 + "'", int8 == 255);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str14 = byteOrderMark12.toString();
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.Class<?> wildcardClass16 = byteOrderMark12.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str14, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str15, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.getCharsetName();
        byte[] byteArray10 = byteOrderMark3.getBytes();
        int int12 = byteOrderMark3.get((int) (short) 1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-8" + "'", str9, "UTF-8");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 187 + "'", int12 == 187);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) 1L);
        java.lang.String str27 = byteOrderMark24.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) byteOrderMark28);
        boolean boolean30 = byteOrderMark22.equals((java.lang.Object) byteOrderMark24);
        java.lang.Class<?> wildcardClass31 = byteOrderMark24.getClass();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) wildcardClass31);
        int int33 = byteOrderMark0.length();
        java.lang.String str34 = byteOrderMark0.toString();
        int int36 = byteOrderMark0.get(0);
        java.lang.String str37 = byteOrderMark0.toString();
        int int38 = byteOrderMark0.length();
        int[] intArray51 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("hi!", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray51);
        boolean boolean61 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-8: 0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str34, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 254 + "'", int36 == 254);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str37, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean20 = byteOrderMark18.equals((java.lang.Object) 1L);
        java.lang.String str21 = byteOrderMark18.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean23 = byteOrderMark18.equals((java.lang.Object) byteOrderMark22);
        byte[] byteArray24 = byteOrderMark22.getBytes();
        boolean boolean25 = byteOrderMark15.equals((java.lang.Object) byteArray24);
        java.lang.String str26 = byteOrderMark15.toString();
        java.lang.String str27 = byteOrderMark15.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int29 = byteOrderMark15.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str27, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.Class<?> wildcardClass18 = intArray10.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        int int24 = byteOrderMark23.length();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        byte[] byteArray20 = byteOrderMark17.getBytes();
        java.lang.String str21 = byteOrderMark17.toString();
        byte[] byteArray22 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        int int9 = byteOrderMark4.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray11 = byteOrderMark10.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) byteOrderMark16);
        boolean boolean18 = byteOrderMark10.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str19 = byteOrderMark12.toString();
        boolean boolean20 = byteOrderMark4.equals((java.lang.Object) str19);
        byte[] byteArray21 = byteOrderMark4.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-2, -1]");
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        java.lang.String str9 = byteOrderMark5.toString();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = byteOrderMark5.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        int int21 = byteOrderMark15.length();
        java.lang.String str22 = byteOrderMark15.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) "hi!");
        int int34 = byteOrderMark15.length();
        int int35 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) 1L);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        int int18 = byteOrderMark14.length();
        boolean boolean19 = byteOrderMark9.equals((java.lang.Object) byteOrderMark14);
        int int20 = byteOrderMark14.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray33);
        boolean boolean38 = byteOrderMark0.equals((java.lang.Object) byteOrderMark37);
        java.lang.String str39 = byteOrderMark37.toString();
        java.lang.String str40 = byteOrderMark37.getCharsetName();
        java.lang.String str41 = byteOrderMark37.getCharsetName();
        java.lang.Class<?> wildcardClass42 = byteOrderMark37.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str39, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str41, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.toString();
        int int21 = byteOrderMark19.length();
        int int23 = byteOrderMark19.get(0);
        java.lang.String str24 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        int int57 = byteOrderMark47.get((int) (byte) 0);
        byte[] byteArray58 = byteOrderMark47.getBytes();
        byte[] byteArray59 = byteOrderMark47.getBytes();
        java.lang.String str60 = byteOrderMark47.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 255 + "'", int57 == 255);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str60, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int int9 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) 1L);
        java.lang.String str13 = byteOrderMark10.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark14.getBytes();
        int int17 = byteOrderMark14.length();
        java.lang.String str18 = byteOrderMark14.getCharsetName();
        java.lang.String str19 = byteOrderMark14.getCharsetName();
        byte[] byteArray20 = byteOrderMark14.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray22 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int29 = byteOrderMark27.get(0);
        java.lang.String str30 = byteOrderMark27.getCharsetName();
        byte[] byteArray31 = byteOrderMark27.getBytes();
        boolean boolean32 = byteOrderMark23.equals((java.lang.Object) byteOrderMark27);
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray42);
        int int49 = byteOrderMark48.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark50.equals(obj51);
        byte[] byteArray53 = byteOrderMark50.getBytes();
        java.lang.String str54 = byteOrderMark50.toString();
        int int56 = byteOrderMark50.get((int) (byte) 0);
        boolean boolean57 = byteOrderMark48.equals((java.lang.Object) byteOrderMark50);
        java.lang.String str58 = byteOrderMark48.toString();
        java.lang.String str59 = byteOrderMark48.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str61 = byteOrderMark60.toString();
        java.lang.String str62 = byteOrderMark60.toString();
        int int64 = byteOrderMark60.get(2);
        boolean boolean66 = byteOrderMark60.equals((java.lang.Object) (byte) 10);
        byte[] byteArray67 = byteOrderMark60.getBytes();
        boolean boolean68 = byteOrderMark48.equals((java.lang.Object) byteArray67);
        boolean boolean69 = byteOrderMark27.equals((java.lang.Object) byteOrderMark48);
        boolean boolean70 = byteOrderMark0.equals((java.lang.Object) byteOrderMark48);
        int[] intArray82 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark83 = new org.apache.commons.io.ByteOrderMark("hi!", intArray82);
        org.apache.commons.io.ByteOrderMark byteOrderMark84 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray82);
        org.apache.commons.io.ByteOrderMark byteOrderMark85 = new org.apache.commons.io.ByteOrderMark("hi!", intArray82);
        org.apache.commons.io.ByteOrderMark byteOrderMark86 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray82);
        org.apache.commons.io.ByteOrderMark byteOrderMark87 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray82);
        org.apache.commons.io.ByteOrderMark byteOrderMark88 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray82);
        org.apache.commons.io.ByteOrderMark byteOrderMark89 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray82);
        org.apache.commons.io.ByteOrderMark byteOrderMark90 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray82);
        boolean boolean91 = byteOrderMark0.equals((java.lang.Object) byteOrderMark90);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16BE" + "'", str18, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 255 + "'", int29 == 255);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 3 + "'", int49 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str54, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 254 + "'", int56 == 254);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str58, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str59, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str61, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str62, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 254 + "'", int64 == 254);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str23 = byteOrderMark22.toString();
        java.lang.String str24 = byteOrderMark22.toString();
        int int26 = byteOrderMark22.get(2);
        boolean boolean28 = byteOrderMark22.equals((java.lang.Object) (byte) 10);
        byte[] byteArray29 = byteOrderMark22.getBytes();
        boolean boolean30 = byteOrderMark21.equals((java.lang.Object) byteOrderMark22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean33 = byteOrderMark31.equals((java.lang.Object) (-1L));
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        java.lang.String str35 = byteOrderMark31.getCharsetName();
        java.lang.String str36 = byteOrderMark31.getCharsetName();
        java.lang.String str37 = byteOrderMark31.toString();
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        int int48 = byteOrderMark47.length();
        int[] intArray53 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        java.lang.String str55 = byteOrderMark54.getCharsetName();
        java.lang.Object obj56 = null;
        boolean boolean57 = byteOrderMark54.equals(obj56);
        boolean boolean58 = byteOrderMark47.equals(obj56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean61 = byteOrderMark59.equals((java.lang.Object) (-1L));
        java.lang.String str62 = byteOrderMark59.getCharsetName();
        java.lang.String str63 = byteOrderMark59.getCharsetName();
        java.lang.String str64 = byteOrderMark59.getCharsetName();
        boolean boolean65 = byteOrderMark47.equals((java.lang.Object) byteOrderMark59);
        boolean boolean66 = byteOrderMark31.equals((java.lang.Object) byteOrderMark59);
        boolean boolean67 = byteOrderMark22.equals((java.lang.Object) byteOrderMark31);
        byte[] byteArray68 = byteOrderMark31.getBytes();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 254 + "'", int26 == 254);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-16LE" + "'", str35, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str37, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(byteOrderMark59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UTF-16LE" + "'", str62, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-16LE" + "'", str63, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UTF-16LE" + "'", str64, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1, -2]");
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        int int15 = byteOrderMark0.get((int) (short) 1);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        byte[] byteArray24 = byteOrderMark23.getBytes();
        java.lang.String str25 = byteOrderMark23.toString();
        byte[] byteArray26 = byteOrderMark23.getBytes();
        int int27 = byteOrderMark23.length();
        java.lang.String str28 = byteOrderMark23.toString();
        java.lang.String str29 = byteOrderMark23.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj31 = null;
        boolean boolean32 = byteOrderMark30.equals(obj31);
        int int33 = byteOrderMark30.length();
        boolean boolean35 = byteOrderMark30.equals((java.lang.Object) 0L);
        int int36 = byteOrderMark30.length();
        boolean boolean38 = byteOrderMark30.equals((java.lang.Object) 3);
        java.lang.String str39 = byteOrderMark30.getCharsetName();
        java.lang.String str40 = byteOrderMark30.getCharsetName();
        java.lang.String str41 = byteOrderMark30.toString();
        byte[] byteArray42 = byteOrderMark30.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str44 = byteOrderMark43.getCharsetName();
        int int45 = byteOrderMark43.length();
        int int46 = byteOrderMark43.length();
        java.lang.String str47 = byteOrderMark43.getCharsetName();
        boolean boolean48 = byteOrderMark30.equals((java.lang.Object) str47);
        java.lang.String str49 = byteOrderMark30.toString();
        byte[] byteArray50 = byteOrderMark30.getBytes();
        boolean boolean51 = byteOrderMark23.equals((java.lang.Object) byteOrderMark30);
        boolean boolean52 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = byteOrderMark23.get(254);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 254 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 254 + "'", int15 == 254);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str29, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-16BE" + "'", str39, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16BE" + "'", str40, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str41, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-16LE" + "'", str44, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-16LE" + "'", str47, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str49, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.getCharsetName();
        byte[] byteArray19 = byteOrderMark13.getBytes();
        java.lang.String str20 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-32BE" + "'", str20, "UTF-32BE");
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        int int20 = byteOrderMark19.length();
        java.lang.String str21 = byteOrderMark19.getCharsetName();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str21, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) 1L);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean11 = byteOrderMark6.equals((java.lang.Object) byteOrderMark10);
        byte[] byteArray12 = byteOrderMark10.getBytes();
        int int13 = byteOrderMark10.length();
        java.lang.String str14 = byteOrderMark10.getCharsetName();
        java.lang.String str15 = byteOrderMark10.getCharsetName();
        byte[] byteArray16 = byteOrderMark10.getBytes();
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) byteArray16);
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray27);
        int int34 = byteOrderMark33.length();
        java.lang.String str35 = byteOrderMark33.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean38 = byteOrderMark36.equals((java.lang.Object) 1L);
        java.lang.String str39 = byteOrderMark36.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean41 = byteOrderMark36.equals((java.lang.Object) byteOrderMark40);
        byte[] byteArray42 = byteOrderMark40.getBytes();
        boolean boolean43 = byteOrderMark33.equals((java.lang.Object) byteArray42);
        java.lang.String str44 = byteOrderMark33.toString();
        byte[] byteArray45 = byteOrderMark33.getBytes();
        int int47 = byteOrderMark33.get((int) (byte) 1);
        java.lang.String str48 = byteOrderMark33.getCharsetName();
        boolean boolean49 = byteOrderMark0.equals((java.lang.Object) str48);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16BE" + "'", str15, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str35, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-16LE" + "'", str39, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str44, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 97 + "'", int47 == 97);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str48, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        int int9 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) "hi!");
        byte[] byteArray21 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, -2, -1]");
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        java.lang.String str7 = byteOrderMark4.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark0.getBytes();
        byte[] byteArray17 = byteOrderMark0.getBytes();
        java.lang.String str18 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        java.lang.String str27 = byteOrderMark23.getCharsetName();
        int int28 = byteOrderMark23.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray30 = byteOrderMark29.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean33 = byteOrderMark31.equals((java.lang.Object) 1L);
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean36 = byteOrderMark31.equals((java.lang.Object) byteOrderMark35);
        boolean boolean37 = byteOrderMark29.equals((java.lang.Object) byteOrderMark31);
        java.lang.String str38 = byteOrderMark31.toString();
        boolean boolean39 = byteOrderMark23.equals((java.lang.Object) str38);
        boolean boolean40 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int[] intArray46 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray46);
        java.lang.String str49 = byteOrderMark48.getCharsetName();
        java.lang.String str50 = byteOrderMark48.getCharsetName();
        java.lang.String str51 = byteOrderMark48.getCharsetName();
        int int52 = byteOrderMark48.length();
        byte[] byteArray53 = byteOrderMark48.getBytes();
        boolean boolean54 = byteOrderMark0.equals((java.lang.Object) byteOrderMark48);
        java.lang.String str55 = byteOrderMark48.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16BE" + "'", str27, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str38, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-16LE" + "'", str49, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16LE" + "'", str50, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "UTF-16LE" + "'", str51, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 3 + "'", int52 == 3);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "UTF-16LE" + "'", str55, "UTF-16LE");
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        java.lang.Class<?> wildcardClass16 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        int int13 = byteOrderMark11.length();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = byteOrderMark11.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int9 = byteOrderMark8.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark8.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) wildcardClass10);
        int int12 = byteOrderMark0.length();
        byte[] byteArray13 = byteOrderMark0.getBytes();
        int int15 = byteOrderMark0.get(0);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark0.get(2);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 2 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 255 + "'", int15 == 255);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) 1L);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        int int18 = byteOrderMark14.length();
        boolean boolean20 = byteOrderMark14.equals((java.lang.Object) (byte) -1);
        byte[] byteArray21 = byteOrderMark14.getBytes();
        java.lang.String str22 = byteOrderMark14.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray24 = byteOrderMark23.getBytes();
        boolean boolean25 = byteOrderMark14.equals((java.lang.Object) byteOrderMark23);
        java.lang.Object obj26 = null;
        boolean boolean27 = byteOrderMark23.equals(obj26);
        int int28 = byteOrderMark23.length();
        boolean boolean29 = byteOrderMark13.equals((java.lang.Object) int28);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = byteOrderMark13.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        java.lang.String str19 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.toString();
        java.lang.Class<?> wildcardClass15 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        int int19 = byteOrderMark17.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.String str19 = byteOrderMark17.getCharsetName();
        java.lang.String str20 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray10 = byteOrderMark8.getBytes();
        int int11 = byteOrderMark8.length();
        int int12 = byteOrderMark8.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        boolean boolean29 = byteOrderMark8.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        java.lang.Class<?> wildcardClass34 = intArray22.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) 1L);
        java.lang.String str27 = byteOrderMark24.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) byteOrderMark28);
        boolean boolean30 = byteOrderMark22.equals((java.lang.Object) byteOrderMark24);
        java.lang.Class<?> wildcardClass31 = byteOrderMark24.getClass();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) wildcardClass31);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        java.lang.String str45 = byteOrderMark44.getCharsetName();
        java.lang.String str46 = byteOrderMark44.getCharsetName();
        int int47 = byteOrderMark44.length();
        boolean boolean48 = byteOrderMark0.equals((java.lang.Object) int47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int51 = byteOrderMark49.get((int) (byte) 0);
        int[] intArray61 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray61);
        int int68 = byteOrderMark67.length();
        boolean boolean69 = byteOrderMark49.equals((java.lang.Object) byteOrderMark67);
        int[] intArray79 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("hi!", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark81 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark82 = new org.apache.commons.io.ByteOrderMark("hi!", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark83 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark84 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark85 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray79);
        int int86 = byteOrderMark85.length();
        boolean boolean87 = byteOrderMark67.equals((java.lang.Object) int86);
        byte[] byteArray88 = byteOrderMark67.getBytes();
        int int89 = byteOrderMark67.length();
        boolean boolean90 = byteOrderMark0.equals((java.lang.Object) byteOrderMark67);
        // The following exception was thrown during execution in test generation
        try {
            int int92 = byteOrderMark67.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-32BE" + "'", str45, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-32BE" + "'", str46, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteOrderMark49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 239 + "'", int51 == 239);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 3 + "'", int86 == 3);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 3 + "'", int89 == 3);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        int int9 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark0.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        java.lang.Class<?> wildcardClass10 = byteArray9.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) 0L);
        int int18 = byteOrderMark12.length();
        int int19 = byteOrderMark12.length();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) intArray26);
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray38);
        int int43 = byteOrderMark42.length();
        boolean boolean44 = byteOrderMark12.equals((java.lang.Object) byteOrderMark42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean47 = byteOrderMark45.equals((java.lang.Object) 1L);
        java.lang.String str48 = byteOrderMark45.getCharsetName();
        int int49 = byteOrderMark45.length();
        boolean boolean51 = byteOrderMark45.equals((java.lang.Object) (byte) -1);
        byte[] byteArray52 = byteOrderMark45.getBytes();
        java.lang.String str53 = byteOrderMark45.getCharsetName();
        java.lang.String str54 = byteOrderMark45.getCharsetName();
        java.lang.String str55 = byteOrderMark45.toString();
        int int56 = byteOrderMark45.length();
        int int57 = byteOrderMark45.length();
        boolean boolean58 = byteOrderMark42.equals((java.lang.Object) byteOrderMark45);
        int int59 = byteOrderMark42.length();
        java.lang.String str60 = byteOrderMark42.getCharsetName();
        boolean boolean61 = byteOrderMark0.equals((java.lang.Object) byteOrderMark42);
        byte[] byteArray62 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-16LE" + "'", str48, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-16LE" + "'", str53, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str55, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str60, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, -2]");
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        int int25 = byteOrderMark23.length();
        java.lang.String str26 = byteOrderMark23.getCharsetName();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        boolean boolean40 = byteOrderMark19.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray31);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        boolean boolean38 = byteOrderMark18.equals((java.lang.Object) int37);
        byte[] byteArray39 = byteOrderMark18.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj41 = null;
        boolean boolean42 = byteOrderMark40.equals(obj41);
        byte[] byteArray43 = byteOrderMark40.getBytes();
        java.lang.String str44 = byteOrderMark40.toString();
        byte[] byteArray45 = byteOrderMark40.getBytes();
        boolean boolean46 = byteOrderMark18.equals((java.lang.Object) byteOrderMark40);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = byteOrderMark18.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str44, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        int int6 = byteOrderMark0.get((int) (byte) 0);
        int int7 = byteOrderMark0.length();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 254 + "'", int6 == 254);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-2, -1]");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int int9 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) 1L);
        java.lang.String str13 = byteOrderMark10.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark14.getBytes();
        int int17 = byteOrderMark14.length();
        java.lang.String str18 = byteOrderMark14.getCharsetName();
        java.lang.String str19 = byteOrderMark14.getCharsetName();
        byte[] byteArray20 = byteOrderMark14.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray22 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj24 = null;
        boolean boolean25 = byteOrderMark23.equals(obj24);
        int int26 = byteOrderMark23.length();
        byte[] byteArray27 = byteOrderMark23.getBytes();
        int int29 = byteOrderMark23.get(1);
        int int31 = byteOrderMark23.get((int) (byte) 0);
        java.lang.String str32 = byteOrderMark23.toString();
        java.lang.Class<?> wildcardClass33 = byteOrderMark23.getClass();
        boolean boolean34 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16BE" + "'", str18, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 255 + "'", int29 == 255);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 254 + "'", int31 == 254);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str32, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        int int28 = byteOrderMark9.length();
        java.lang.String str29 = byteOrderMark9.getCharsetName();
        java.lang.String str30 = byteOrderMark9.toString();
        int int32 = byteOrderMark9.get(0);
        int int33 = byteOrderMark9.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int8 = byteOrderMark7.length();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark17.getClass();
        boolean boolean20 = byteOrderMark7.equals((java.lang.Object) byteOrderMark17);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray33);
        int int44 = byteOrderMark42.get((int) (short) 1);
        boolean boolean45 = byteOrderMark7.equals((java.lang.Object) (short) 1);
        byte[] byteArray46 = byteOrderMark7.getBytes();
        java.lang.String str47 = byteOrderMark7.toString();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 97 + "'", int44 == 97);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str47, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str10 = byteOrderMark0.toString();
        byte[] byteArray11 = byteOrderMark0.getBytes();
        java.lang.String str12 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int11 = byteOrderMark9.get(0);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj14 = null;
        boolean boolean15 = byteOrderMark13.equals(obj14);
        int int16 = byteOrderMark13.length();
        boolean boolean18 = byteOrderMark13.equals((java.lang.Object) 0L);
        int int19 = byteOrderMark13.length();
        boolean boolean20 = byteOrderMark9.equals((java.lang.Object) int19);
        int int22 = byteOrderMark9.get(0);
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) (-1L));
        java.lang.String str27 = byteOrderMark24.toString();
        byte[] byteArray28 = byteOrderMark24.getBytes();
        java.lang.Class<?> wildcardClass29 = byteArray28.getClass();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) wildcardClass29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj32 = null;
        boolean boolean33 = byteOrderMark31.equals(obj32);
        int int34 = byteOrderMark31.length();
        boolean boolean36 = byteOrderMark31.equals((java.lang.Object) 0L);
        int int37 = byteOrderMark31.length();
        boolean boolean39 = byteOrderMark31.equals((java.lang.Object) 3);
        java.lang.String str40 = byteOrderMark31.getCharsetName();
        java.lang.String str41 = byteOrderMark31.getCharsetName();
        boolean boolean42 = byteOrderMark0.equals((java.lang.Object) byteOrderMark31);
        // The following exception was thrown during execution in test generation
        try {
            int int44 = byteOrderMark0.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 255 + "'", int22 == 255);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str27, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16BE" + "'", str40, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16BE" + "'", str41, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray12);
        java.lang.Class<?> wildcardClass22 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        java.lang.String str18 = byteOrderMark15.toString();
        int int19 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark17.equals(obj19);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean4 = byteOrderMark2.equals((java.lang.Object) 1L);
        java.lang.String str5 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean7 = byteOrderMark2.equals((java.lang.Object) byteOrderMark6);
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark2);
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        int int26 = byteOrderMark25.length();
        java.lang.String str27 = byteOrderMark25.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean30 = byteOrderMark28.equals((java.lang.Object) 1L);
        java.lang.String str31 = byteOrderMark28.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean33 = byteOrderMark28.equals((java.lang.Object) byteOrderMark32);
        byte[] byteArray34 = byteOrderMark32.getBytes();
        boolean boolean35 = byteOrderMark25.equals((java.lang.Object) byteArray34);
        boolean boolean36 = byteOrderMark0.equals((java.lang.Object) byteArray34);
        java.lang.Class<?> wildcardClass37 = byteArray34.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str27, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str13 = byteOrderMark12.toString();
        java.lang.String str14 = byteOrderMark12.toString();
        int int16 = byteOrderMark12.get(2);
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) 10);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        boolean boolean36 = byteOrderMark12.equals((java.lang.Object) byteOrderMark35);
        int int37 = byteOrderMark12.length();
        byte[] byteArray38 = byteOrderMark12.getBytes();
        int int40 = byteOrderMark12.get(0);
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str42 = byteOrderMark12.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 254 + "'", int16 == 254);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 4 + "'", int37 == 4);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str42, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("", intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        byte[] byteArray20 = byteOrderMark17.getBytes();
        java.lang.String str21 = byteOrderMark17.toString();
        int int23 = byteOrderMark17.get((int) (byte) 0);
        boolean boolean24 = byteOrderMark15.equals((java.lang.Object) byteOrderMark17);
        java.lang.String str25 = byteOrderMark15.toString();
        java.lang.String str26 = byteOrderMark15.toString();
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        java.lang.Class<?> wildcardClass43 = byteOrderMark42.getClass();
        boolean boolean44 = byteOrderMark15.equals((java.lang.Object) byteOrderMark42);
        byte[] byteArray45 = byteOrderMark15.getBytes();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 97, 35]");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int int22 = byteOrderMark18.get((int) (short) 1);
        java.lang.String str23 = byteOrderMark18.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int6 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass7 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray33);
        java.lang.String str42 = byteOrderMark41.getCharsetName();
        boolean boolean43 = byteOrderMark21.equals((java.lang.Object) byteOrderMark41);
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray49);
        boolean boolean52 = byteOrderMark41.equals((java.lang.Object) byteOrderMark51);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str54 = byteOrderMark53.toString();
        java.lang.String str55 = byteOrderMark53.toString();
        int int57 = byteOrderMark53.get(2);
        boolean boolean59 = byteOrderMark53.equals((java.lang.Object) (byte) 10);
        byte[] byteArray60 = byteOrderMark53.getBytes();
        byte[] byteArray61 = byteOrderMark53.getBytes();
        int int62 = byteOrderMark53.length();
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray69);
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        boolean boolean73 = byteOrderMark53.equals((java.lang.Object) "hi!");
        int int75 = byteOrderMark53.get((int) (short) 0);
        boolean boolean76 = byteOrderMark51.equals((java.lang.Object) byteOrderMark53);
        java.lang.String str77 = byteOrderMark53.getCharsetName();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str42, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteOrderMark53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str54, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str55, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 254 + "'", int57 == 254);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UTF-32BE" + "'", str77, "UTF-32BE");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int int12 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int14 = byteOrderMark0.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int9 = byteOrderMark7.get(0);
        boolean boolean11 = byteOrderMark7.equals((java.lang.Object) (short) 0);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        boolean boolean22 = byteOrderMark7.equals((java.lang.Object) byteOrderMark21);
        int[] intArray28 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray28);
        boolean boolean31 = byteOrderMark21.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        byte[] byteArray32 = byteOrderMark21.getBytes();
        int int33 = byteOrderMark21.length();
        boolean boolean34 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 255 + "'", int9 == 255);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.String str9 = byteOrderMark7.toString();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        int int11 = byteOrderMark7.length();
        int int12 = byteOrderMark7.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean15 = byteOrderMark13.equals((java.lang.Object) 1L);
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        int int17 = byteOrderMark13.length();
        java.lang.String str18 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) 1L);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) byteOrderMark24);
        byte[] byteArray26 = byteOrderMark24.getBytes();
        int int27 = byteOrderMark24.length();
        int int28 = byteOrderMark24.length();
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        boolean boolean45 = byteOrderMark24.equals((java.lang.Object) intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        boolean boolean47 = byteOrderMark13.equals((java.lang.Object) intArray38);
        boolean boolean48 = byteOrderMark7.equals((java.lang.Object) boolean47);
        java.lang.String str49 = byteOrderMark7.getCharsetName();
        java.lang.String str50 = byteOrderMark7.getCharsetName();
        int int51 = byteOrderMark7.length();
        java.lang.String str52 = byteOrderMark7.toString();
        byte[] byteArray53 = byteOrderMark7.getBytes();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-16LE" + "'", str49, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16LE" + "'", str50, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str52, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 97, 35]");
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        int int19 = byteOrderMark17.get(0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.Class<?> wildcardClass9 = byteOrderMark7.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        java.lang.String str16 = byteOrderMark11.toString();
        java.lang.String str17 = byteOrderMark11.toString();
        java.lang.Class<?> wildcardClass18 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray29);
        int int37 = byteOrderMark35.get((int) (byte) 0);
        int[] intArray46 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray46);
        byte[] byteArray52 = byteOrderMark51.getBytes();
        int int53 = byteOrderMark51.length();
        java.lang.String str54 = byteOrderMark51.toString();
        int[] intArray60 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray60);
        byte[] byteArray63 = byteOrderMark62.getBytes();
        boolean boolean64 = byteOrderMark51.equals((java.lang.Object) byteOrderMark62);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str66 = byteOrderMark65.toString();
        java.lang.String str67 = byteOrderMark65.toString();
        int int69 = byteOrderMark65.get(2);
        boolean boolean71 = byteOrderMark65.equals((java.lang.Object) (byte) 10);
        boolean boolean72 = byteOrderMark51.equals((java.lang.Object) boolean71);
        byte[] byteArray73 = byteOrderMark51.getBytes();
        boolean boolean74 = byteOrderMark35.equals((java.lang.Object) byteOrderMark51);
        java.lang.String str75 = byteOrderMark51.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str54, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteOrderMark65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str66, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str67, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 254 + "'", int69 == 254);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "UTF-32BE" + "'", str75, "UTF-32BE");
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int8 = byteOrderMark7.length();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        java.lang.String str11 = byteOrderMark7.toString();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        int int18 = byteOrderMark17.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        java.lang.String str25 = byteOrderMark24.getCharsetName();
        java.lang.Object obj26 = null;
        boolean boolean27 = byteOrderMark24.equals(obj26);
        boolean boolean28 = byteOrderMark17.equals(obj26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) (-1L));
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        java.lang.String str33 = byteOrderMark29.getCharsetName();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) byteOrderMark29);
        byte[] byteArray36 = byteOrderMark29.getBytes();
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) byteOrderMark29);
        int int38 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 4 + "'", int38 == 4);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean10 = byteOrderMark5.equals((java.lang.Object) byteOrderMark9);
        byte[] byteArray11 = byteOrderMark9.getBytes();
        int int12 = byteOrderMark9.length();
        int int13 = byteOrderMark9.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        boolean boolean30 = byteOrderMark9.equals((java.lang.Object) intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray23);
        java.lang.String str36 = byteOrderMark35.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]" + "'", str36, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]");
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        java.lang.String str13 = byteOrderMark11.getCharsetName();
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        java.lang.String str15 = byteOrderMark11.getCharsetName();
        java.lang.String str16 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.toString();
        java.lang.Class<?> wildcardClass21 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        int int15 = byteOrderMark0.get((int) (short) 1);
        java.lang.String str16 = byteOrderMark0.getCharsetName();
        int int18 = byteOrderMark0.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 254 + "'", int15 == 254);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 254 + "'", int18 == 254);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int10 = byteOrderMark0.length();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray37);
        byte[] byteArray43 = byteOrderMark42.getBytes();
        java.lang.String str44 = byteOrderMark42.getCharsetName();
        boolean boolean45 = byteOrderMark28.equals((java.lang.Object) byteOrderMark42);
        int[] intArray50 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        java.lang.String str52 = byteOrderMark51.getCharsetName();
        java.lang.Object obj53 = null;
        boolean boolean54 = byteOrderMark51.equals(obj53);
        int int55 = byteOrderMark51.length();
        byte[] byteArray56 = byteOrderMark51.getBytes();
        java.lang.Class<?> wildcardClass57 = byteOrderMark51.getClass();
        boolean boolean58 = byteOrderMark42.equals((java.lang.Object) wildcardClass57);
        java.lang.String str59 = byteOrderMark42.getCharsetName();
        boolean boolean60 = byteOrderMark0.equals((java.lang.Object) byteOrderMark42);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-32BE" + "'", str44, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-32BE" + "'", str59, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str14 = byteOrderMark12.toString();
        java.lang.String str15 = byteOrderMark12.toString();
        int int17 = byteOrderMark12.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str14, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str15, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 239 + "'", int17 == 239);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        java.lang.String str11 = byteOrderMark7.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray13 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) (-1L));
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        java.lang.String str18 = byteOrderMark14.getCharsetName();
        boolean boolean19 = byteOrderMark12.equals((java.lang.Object) str18);
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray32);
        boolean boolean42 = byteOrderMark12.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        boolean boolean43 = byteOrderMark7.equals((java.lang.Object) boolean42);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int6 = byteOrderMark0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        int int28 = byteOrderMark9.length();
        java.lang.String str29 = byteOrderMark9.getCharsetName();
        java.lang.String str30 = byteOrderMark9.toString();
        java.lang.String str31 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        byte[] byteArray20 = byteOrderMark17.getBytes();
        java.lang.String str21 = byteOrderMark17.getCharsetName();
        int int22 = byteOrderMark17.length();
        java.lang.String str23 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str21, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        int int29 = byteOrderMark27.length();
        // The following exception was thrown during execution in test generation
        try {
            int int31 = byteOrderMark27.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        java.lang.String str9 = byteOrderMark0.toString();
        java.lang.String str10 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str10, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        int int21 = byteOrderMark9.length();
        java.lang.String str22 = byteOrderMark9.toString();
        java.lang.String str23 = byteOrderMark9.getCharsetName();
        byte[] byteArray24 = byteOrderMark9.getBytes();
        byte[] byteArray25 = byteOrderMark9.getBytes();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int11 = byteOrderMark9.get(0);
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) (short) 0);
        byte[] byteArray14 = byteOrderMark9.getBytes();
        int int16 = byteOrderMark9.get(1);
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        java.lang.String str18 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark0.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 254 + "'", int16 == 254);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16BE" + "'", str18, "UTF-16BE");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        java.lang.Class<?> wildcardClass16 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        boolean boolean31 = byteOrderMark18.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str32 = byteOrderMark18.toString();
        java.lang.String str33 = byteOrderMark18.getCharsetName();
        java.lang.String str34 = byteOrderMark18.getCharsetName();
        java.lang.String str35 = byteOrderMark18.toString();
        boolean boolean36 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        byte[] byteArray37 = byteOrderMark18.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 4 + "'", int4 == 4);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-32BE" + "'", str34, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str35, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 97, 35]");
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) 1L);
        java.lang.String str27 = byteOrderMark24.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) byteOrderMark28);
        boolean boolean30 = byteOrderMark22.equals((java.lang.Object) byteOrderMark24);
        java.lang.Class<?> wildcardClass31 = byteOrderMark24.getClass();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) wildcardClass31);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        java.lang.String str45 = byteOrderMark44.getCharsetName();
        java.lang.String str46 = byteOrderMark44.getCharsetName();
        int int47 = byteOrderMark44.length();
        boolean boolean48 = byteOrderMark0.equals((java.lang.Object) int47);
        byte[] byteArray49 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-32BE" + "'", str45, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-32BE" + "'", str46, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[-2, -1]");
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int11 = byteOrderMark9.get(0);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj14 = null;
        boolean boolean15 = byteOrderMark13.equals(obj14);
        int int16 = byteOrderMark13.length();
        boolean boolean18 = byteOrderMark13.equals((java.lang.Object) 0L);
        int int19 = byteOrderMark13.length();
        boolean boolean20 = byteOrderMark9.equals((java.lang.Object) int19);
        int int22 = byteOrderMark9.get(0);
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) (-1L));
        java.lang.String str27 = byteOrderMark24.toString();
        byte[] byteArray28 = byteOrderMark24.getBytes();
        java.lang.Class<?> wildcardClass29 = byteArray28.getClass();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) wildcardClass29);
        int int31 = byteOrderMark0.length();
        java.lang.String str32 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int34 = byteOrderMark0.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 255 + "'", int22 == 255);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str27, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-32BE" + "'", str32, "UTF-32BE");
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        int int9 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int4 = byteOrderMark0.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str2, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray16);
        java.lang.Class<?> wildcardClass27 = intArray16.getClass();
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) intArray16);
        int int29 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 4 + "'", int29 == 4);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray5);
        java.lang.Class<?> wildcardClass8 = intArray5.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray10 = byteOrderMark8.getBytes();
        int int11 = byteOrderMark8.length();
        int int12 = byteOrderMark8.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        boolean boolean29 = byteOrderMark8.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        java.lang.String str34 = byteOrderMark33.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        java.lang.Class<?> wildcardClass27 = byteOrderMark23.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark23.equals(obj25);
        java.lang.Object obj27 = null;
        boolean boolean28 = byteOrderMark23.equals(obj27);
        java.lang.String str29 = byteOrderMark23.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-8" + "'", str29, "UTF-8");
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int10 = byteOrderMark0.length();
        int int11 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        int int23 = byteOrderMark21.get((int) (short) 0);
        java.lang.Class<?> wildcardClass24 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        byte[] byteArray19 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray10 = byteOrderMark8.getBytes();
        int int11 = byteOrderMark8.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        java.lang.String str21 = byteOrderMark12.getCharsetName();
        java.lang.String str22 = byteOrderMark12.getCharsetName();
        boolean boolean23 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) boolean23);
        int int25 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass26 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        int int4 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray6 = byteOrderMark5.getBytes();
        int int7 = byteOrderMark5.length();
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        java.lang.String str9 = byteOrderMark5.getCharsetName();
        java.lang.String str10 = byteOrderMark5.getCharsetName();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        boolean boolean12 = byteOrderMark0.equals((java.lang.Object) byteOrderMark5);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str14 = byteOrderMark13.toString();
        boolean boolean16 = byteOrderMark13.equals((java.lang.Object) ' ');
        java.lang.String str17 = byteOrderMark13.toString();
        java.lang.String str18 = byteOrderMark13.getCharsetName();
        byte[] byteArray19 = byteOrderMark13.getBytes();
        int int20 = byteOrderMark13.length();
        boolean boolean21 = byteOrderMark5.equals((java.lang.Object) int20);
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray32);
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        int int41 = byteOrderMark39.length();
        byte[] byteArray42 = byteOrderMark39.getBytes();
        int int44 = byteOrderMark39.get((int) (byte) 1);
        byte[] byteArray45 = byteOrderMark39.getBytes();
        int int46 = byteOrderMark39.length();
        boolean boolean47 = byteOrderMark5.equals((java.lang.Object) int46);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str40, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 97 + "'", int44 == 97);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj41 = null;
        boolean boolean42 = byteOrderMark40.equals(obj41);
        byte[] byteArray43 = byteOrderMark40.getBytes();
        boolean boolean44 = byteOrderMark39.equals((java.lang.Object) byteOrderMark40);
        boolean boolean45 = byteOrderMark23.equals((java.lang.Object) boolean44);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.String str7 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass8 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        boolean boolean20 = byteOrderMark2.equals((java.lang.Object) intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.Object obj30 = null;
        boolean boolean31 = byteOrderMark28.equals(obj30);
        byte[] byteArray32 = byteOrderMark28.getBytes();
        byte[] byteArray33 = byteOrderMark28.getBytes();
        int[] intArray38 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        boolean boolean40 = byteOrderMark28.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        boolean boolean41 = byteOrderMark22.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str42 = byteOrderMark22.toString();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str42, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        java.lang.String str56 = byteOrderMark33.getCharsetName();
        int int57 = byteOrderMark33.length();
        int[] intArray64 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        int int68 = byteOrderMark67.length();
        int[] intArray73 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("hi!", intArray73);
        java.lang.String str75 = byteOrderMark74.getCharsetName();
        java.lang.Object obj76 = null;
        boolean boolean77 = byteOrderMark74.equals(obj76);
        boolean boolean78 = byteOrderMark67.equals(obj76);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean81 = byteOrderMark79.equals((java.lang.Object) (-1L));
        java.lang.String str82 = byteOrderMark79.getCharsetName();
        java.lang.String str83 = byteOrderMark79.getCharsetName();
        java.lang.String str84 = byteOrderMark79.getCharsetName();
        boolean boolean85 = byteOrderMark67.equals((java.lang.Object) byteOrderMark79);
        org.apache.commons.io.ByteOrderMark byteOrderMark86 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean88 = byteOrderMark86.equals((java.lang.Object) 1L);
        java.lang.String str89 = byteOrderMark86.getCharsetName();
        int int90 = byteOrderMark86.length();
        boolean boolean92 = byteOrderMark86.equals((java.lang.Object) (-1.0f));
        java.lang.String str93 = byteOrderMark86.toString();
        boolean boolean94 = byteOrderMark79.equals((java.lang.Object) str93);
        java.lang.String str95 = byteOrderMark79.getCharsetName();
        boolean boolean96 = byteOrderMark33.equals((java.lang.Object) str95);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "UTF-16LE" + "'", str56, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(byteOrderMark79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "UTF-16LE" + "'", str82, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "UTF-16LE" + "'", str83, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UTF-16LE" + "'", str84, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(byteOrderMark86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "UTF-16LE" + "'", str89, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2 + "'", int90 == 2);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str93, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "UTF-16LE" + "'", str95, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray10 = byteOrderMark9.getBytes();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        java.lang.Object obj12 = null;
        boolean boolean13 = byteOrderMark9.equals(obj12);
        java.lang.String str14 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        int int19 = byteOrderMark16.length();
        boolean boolean21 = byteOrderMark16.equals((java.lang.Object) 0L);
        int int22 = byteOrderMark16.length();
        int int23 = byteOrderMark16.length();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean34 = byteOrderMark16.equals((java.lang.Object) intArray30);
        boolean boolean35 = byteOrderMark13.equals((java.lang.Object) intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        java.lang.String str38 = byteOrderMark37.getCharsetName();
        java.lang.String str39 = byteOrderMark37.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str38, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str39, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.toString();
        java.lang.String str13 = byteOrderMark4.toString();
        java.lang.Class<?> wildcardClass14 = byteOrderMark4.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str12, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) 1.0d);
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int6 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-2, -1]");
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        java.lang.String str9 = byteOrderMark8.getCharsetName();
        java.lang.Object obj10 = null;
        boolean boolean11 = byteOrderMark8.equals(obj10);
        byte[] byteArray12 = byteOrderMark8.getBytes();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) (-1L));
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        java.lang.String str18 = byteOrderMark14.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark14.getClass();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark0.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int8 = byteOrderMark7.length();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark17.getClass();
        boolean boolean20 = byteOrderMark7.equals((java.lang.Object) byteOrderMark17);
        int int21 = byteOrderMark7.length();
        java.lang.String str22 = byteOrderMark7.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) 1L);
        java.lang.String str27 = byteOrderMark24.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) byteOrderMark28);
        boolean boolean30 = byteOrderMark22.equals((java.lang.Object) byteOrderMark24);
        java.lang.Class<?> wildcardClass31 = byteOrderMark24.getClass();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) wildcardClass31);
        int int33 = byteOrderMark0.length();
        java.lang.String str34 = byteOrderMark0.getCharsetName();
        int[] intArray41 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray41);
        boolean boolean45 = byteOrderMark0.equals((java.lang.Object) "UTF-8");
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16BE" + "'", str34, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = byteOrderMark0.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        java.lang.String str2 = byteOrderMark0.toString();
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass5 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-32BE" + "'", str1, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str3, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray29);
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray49);
        boolean boolean58 = byteOrderMark37.equals((java.lang.Object) intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray49);
        boolean boolean61 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) (-1L));
        java.lang.String str22 = byteOrderMark19.toString();
        byte[] byteArray23 = byteOrderMark19.getBytes();
        byte[] byteArray24 = byteOrderMark19.getBytes();
        java.lang.String str25 = byteOrderMark19.getCharsetName();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean32 = byteOrderMark19.equals((java.lang.Object) "hi!");
        boolean boolean33 = byteOrderMark13.equals((java.lang.Object) byteOrderMark19);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj35 = null;
        boolean boolean36 = byteOrderMark34.equals(obj35);
        int int37 = byteOrderMark34.length();
        boolean boolean39 = byteOrderMark34.equals((java.lang.Object) 0L);
        int int40 = byteOrderMark34.length();
        int int41 = byteOrderMark34.length();
        int[] intArray48 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray48);
        boolean boolean52 = byteOrderMark34.equals((java.lang.Object) intArray48);
        int[] intArray60 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray60);
        int int65 = byteOrderMark64.length();
        boolean boolean66 = byteOrderMark34.equals((java.lang.Object) byteOrderMark64);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean69 = byteOrderMark67.equals((java.lang.Object) 1L);
        java.lang.String str70 = byteOrderMark67.getCharsetName();
        int int71 = byteOrderMark67.length();
        boolean boolean73 = byteOrderMark67.equals((java.lang.Object) (byte) -1);
        byte[] byteArray74 = byteOrderMark67.getBytes();
        java.lang.String str75 = byteOrderMark67.getCharsetName();
        java.lang.String str76 = byteOrderMark67.getCharsetName();
        java.lang.String str77 = byteOrderMark67.toString();
        int int78 = byteOrderMark67.length();
        int int79 = byteOrderMark67.length();
        boolean boolean80 = byteOrderMark64.equals((java.lang.Object) byteOrderMark67);
        org.apache.commons.io.ByteOrderMark byteOrderMark81 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean83 = byteOrderMark81.equals((java.lang.Object) (-1L));
        java.lang.String str84 = byteOrderMark81.toString();
        byte[] byteArray85 = byteOrderMark81.getBytes();
        byte[] byteArray86 = byteOrderMark81.getBytes();
        byte[] byteArray87 = byteOrderMark81.getBytes();
        java.lang.String str88 = byteOrderMark81.getCharsetName();
        boolean boolean89 = byteOrderMark67.equals((java.lang.Object) byteOrderMark81);
        boolean boolean90 = byteOrderMark13.equals((java.lang.Object) byteOrderMark67);
        java.lang.Class<?> wildcardClass91 = byteOrderMark67.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteOrderMark67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "UTF-16LE" + "'", str70, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "UTF-16LE" + "'", str75, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "UTF-16LE" + "'", str76, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str77, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(byteOrderMark81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str84, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "UTF-16LE" + "'", str88, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int6 = byteOrderMark0.length();
        int int8 = byteOrderMark0.get((int) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int10 = byteOrderMark0.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 254 + "'", int8 == 254);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        byte[] byteArray9 = byteOrderMark7.getBytes();
        java.lang.Class<?> wildcardClass10 = byteArray9.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        int[] intArray6 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[255]");
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        java.lang.String str21 = byteOrderMark19.getCharsetName();
        java.lang.String str22 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        int int14 = byteOrderMark13.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray16 = byteOrderMark15.getBytes();
        int int17 = byteOrderMark15.length();
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark15.getClass();
        boolean boolean20 = byteOrderMark13.equals((java.lang.Object) byteOrderMark15);
        java.lang.String str21 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str18 = byteOrderMark11.getCharsetName();
        int int19 = byteOrderMark11.length();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        java.lang.String str41 = byteOrderMark39.toString();
        java.lang.String str42 = byteOrderMark39.getCharsetName();
        boolean boolean43 = byteOrderMark11.equals((java.lang.Object) byteOrderMark39);
        java.lang.Class<?> wildcardClass44 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str41, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray14);
        java.lang.Class<?> wildcardClass26 = intArray14.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str30 = byteOrderMark29.toString();
        boolean boolean32 = byteOrderMark29.equals((java.lang.Object) ' ');
        java.lang.String str33 = byteOrderMark29.toString();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        byte[] byteArray35 = byteOrderMark29.getBytes();
        boolean boolean36 = byteOrderMark27.equals((java.lang.Object) byteArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean39 = byteOrderMark37.equals((java.lang.Object) 1L);
        java.lang.String str40 = byteOrderMark37.getCharsetName();
        int int41 = byteOrderMark37.length();
        boolean boolean43 = byteOrderMark37.equals((java.lang.Object) (byte) -1);
        byte[] byteArray44 = byteOrderMark37.getBytes();
        java.lang.String str45 = byteOrderMark37.getCharsetName();
        java.lang.String str46 = byteOrderMark37.getCharsetName();
        java.lang.String str47 = byteOrderMark37.toString();
        int[] intArray58 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray58);
        boolean boolean66 = byteOrderMark37.equals((java.lang.Object) byteOrderMark65);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean69 = byteOrderMark67.equals((java.lang.Object) 1L);
        java.lang.String str70 = byteOrderMark67.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean72 = byteOrderMark67.equals((java.lang.Object) byteOrderMark71);
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean75 = byteOrderMark73.equals((java.lang.Object) (-1L));
        java.lang.String str76 = byteOrderMark73.toString();
        int int77 = byteOrderMark73.length();
        boolean boolean78 = byteOrderMark71.equals((java.lang.Object) int77);
        int int79 = byteOrderMark71.length();
        byte[] byteArray80 = byteOrderMark71.getBytes();
        boolean boolean81 = byteOrderMark37.equals((java.lang.Object) byteArray80);
        boolean boolean82 = byteOrderMark27.equals((java.lang.Object) boolean81);
        byte[] byteArray83 = byteOrderMark27.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str33, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-32BE" + "'", str34, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrderMark37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16LE" + "'", str40, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-16LE" + "'", str45, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-16LE" + "'", str46, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str47, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteOrderMark67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "UTF-16LE" + "'", str70, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteOrderMark73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str76, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[10, 97, 35]");
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.String str9 = byteOrderMark7.toString();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        int int11 = byteOrderMark7.length();
        java.lang.String str12 = byteOrderMark7.toString();
        java.lang.String str13 = byteOrderMark7.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj15 = null;
        boolean boolean16 = byteOrderMark14.equals(obj15);
        int int17 = byteOrderMark14.length();
        boolean boolean19 = byteOrderMark14.equals((java.lang.Object) 0L);
        int int20 = byteOrderMark14.length();
        boolean boolean22 = byteOrderMark14.equals((java.lang.Object) 3);
        java.lang.String str23 = byteOrderMark14.getCharsetName();
        java.lang.String str24 = byteOrderMark14.getCharsetName();
        java.lang.String str25 = byteOrderMark14.toString();
        byte[] byteArray26 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str28 = byteOrderMark27.getCharsetName();
        int int29 = byteOrderMark27.length();
        int int30 = byteOrderMark27.length();
        java.lang.String str31 = byteOrderMark27.getCharsetName();
        boolean boolean32 = byteOrderMark14.equals((java.lang.Object) str31);
        java.lang.String str33 = byteOrderMark14.toString();
        byte[] byteArray34 = byteOrderMark14.getBytes();
        boolean boolean35 = byteOrderMark7.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str36 = byteOrderMark14.toString();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16BE" + "'", str23, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16BE" + "'", str24, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-16LE" + "'", str28, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str33, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str36, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        int int15 = byteOrderMark9.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 97 + "'", int15 == 97);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        java.lang.String str21 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray14);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = byteOrderMark25.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        int int18 = byteOrderMark17.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str20 = byteOrderMark19.toString();
        java.lang.String str21 = byteOrderMark19.toString();
        int int23 = byteOrderMark19.get(2);
        java.lang.String str24 = byteOrderMark19.toString();
        int int26 = byteOrderMark19.get(1);
        byte[] byteArray27 = byteOrderMark19.getBytes();
        java.lang.String str28 = byteOrderMark19.toString();
        java.lang.String str29 = byteOrderMark19.toString();
        int[] intArray43 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray43);
        boolean boolean54 = byteOrderMark19.equals((java.lang.Object) intArray43);
        boolean boolean55 = byteOrderMark17.equals((java.lang.Object) intArray43);
        int[] intArray59 = new int[] { (byte) -1 };
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray59);
        boolean boolean62 = byteOrderMark17.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) wildcardClass40);
        java.lang.String str42 = byteOrderMark0.getCharsetName();
        int int43 = byteOrderMark0.length();
        java.lang.String str44 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-32BE" + "'", str42, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str44, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        java.lang.String str30 = byteOrderMark29.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int33 = byteOrderMark31.get((int) (byte) 0);
        byte[] byteArray34 = byteOrderMark31.getBytes();
        boolean boolean35 = byteOrderMark29.equals((java.lang.Object) byteArray34);
        boolean boolean36 = byteOrderMark19.equals((java.lang.Object) boolean35);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 239 + "'", int33 == 239);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        boolean boolean64 = byteOrderMark47.equals((java.lang.Object) byteOrderMark61);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        java.lang.Object obj72 = null;
        boolean boolean73 = byteOrderMark70.equals(obj72);
        int int74 = byteOrderMark70.length();
        byte[] byteArray75 = byteOrderMark70.getBytes();
        java.lang.Class<?> wildcardClass76 = byteOrderMark70.getClass();
        boolean boolean77 = byteOrderMark61.equals((java.lang.Object) wildcardClass76);
        boolean boolean78 = byteOrderMark11.equals((java.lang.Object) byteOrderMark61);
        java.lang.String str79 = byteOrderMark61.toString();
        java.lang.String str80 = byteOrderMark61.toString();
        int int82 = byteOrderMark61.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str79, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str80, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.length();
        int int5 = byteOrderMark0.length();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        int int17 = byteOrderMark15.get(2);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str18, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int48 = byteOrderMark30.get(2);
        java.lang.String str49 = byteOrderMark30.getCharsetName();
        java.lang.String str50 = byteOrderMark30.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 35 + "'", int48 == 35);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str49, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str50, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        java.lang.Class<?> wildcardClass11 = byteArray10.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        int int9 = byteOrderMark7.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark7.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.getCharsetName();
        byte[] byteArray19 = byteOrderMark13.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) 1L);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        int int24 = byteOrderMark20.length();
        java.lang.String str25 = byteOrderMark20.getCharsetName();
        byte[] byteArray26 = byteOrderMark20.getBytes();
        boolean boolean27 = byteOrderMark13.equals((java.lang.Object) byteOrderMark20);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = byteOrderMark20.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int int18 = byteOrderMark17.length();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray30);
        boolean boolean39 = byteOrderMark17.equals((java.lang.Object) byteOrderMark38);
        java.lang.String str40 = byteOrderMark38.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        byte[] byteArray11 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass12 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        java.lang.String str16 = byteOrderMark11.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = byteOrderMark11.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray10);
        int int19 = byteOrderMark17.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        int int15 = byteOrderMark13.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str17 = byteOrderMark16.toString();
        java.lang.String str18 = byteOrderMark16.toString();
        int int20 = byteOrderMark16.get(2);
        java.lang.String str21 = byteOrderMark16.toString();
        int int23 = byteOrderMark16.get(1);
        java.lang.String str24 = byteOrderMark16.toString();
        java.lang.String str25 = byteOrderMark16.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str27 = byteOrderMark26.toString();
        java.lang.String str28 = byteOrderMark26.toString();
        int int30 = byteOrderMark26.get(2);
        java.lang.String str31 = byteOrderMark26.toString();
        int int33 = byteOrderMark26.get(1);
        java.lang.Class<?> wildcardClass34 = byteOrderMark26.getClass();
        boolean boolean35 = byteOrderMark16.equals((java.lang.Object) wildcardClass34);
        boolean boolean36 = byteOrderMark13.equals((java.lang.Object) wildcardClass34);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 254 + "'", int20 == 254);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str27, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 254 + "'", int30 == 254);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.toString();
        boolean boolean27 = byteOrderMark21.equals((java.lang.Object) byteOrderMark23);
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        byte[] byteArray42 = byteOrderMark41.getBytes();
        byte[] byteArray43 = byteOrderMark41.getBytes();
        boolean boolean44 = byteOrderMark23.equals((java.lang.Object) byteOrderMark41);
        java.lang.String str45 = byteOrderMark41.toString();
        java.lang.Class<?> wildcardClass46 = byteOrderMark41.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str45, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        java.lang.String str8 = byteOrderMark0.toString();
        int int9 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) (-1L));
        java.lang.String str13 = byteOrderMark10.toString();
        byte[] byteArray14 = byteOrderMark10.getBytes();
        byte[] byteArray15 = byteOrderMark10.getBytes();
        int int16 = byteOrderMark10.length();
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) int16);
        java.lang.String str18 = byteOrderMark0.getCharsetName();
        java.lang.String str19 = byteOrderMark0.toString();
        java.lang.Class<?> wildcardClass20 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16BE" + "'", str18, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        boolean boolean16 = byteOrderMark12.equals((java.lang.Object) (short) 0);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int33 = byteOrderMark32.length();
        java.lang.String str34 = byteOrderMark32.toString();
        boolean boolean35 = byteOrderMark12.equals((java.lang.Object) str34);
        int int36 = byteOrderMark12.length();
        boolean boolean37 = byteOrderMark5.equals((java.lang.Object) int36);
        java.lang.String str38 = byteOrderMark5.toString();
        int int39 = byteOrderMark5.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean42 = byteOrderMark40.equals((java.lang.Object) 1L);
        java.lang.String str43 = byteOrderMark40.getCharsetName();
        int int44 = byteOrderMark40.length();
        boolean boolean46 = byteOrderMark40.equals((java.lang.Object) (byte) -1);
        byte[] byteArray47 = byteOrderMark40.getBytes();
        java.lang.String str48 = byteOrderMark40.getCharsetName();
        java.lang.String str49 = byteOrderMark40.getCharsetName();
        int[] intArray57 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("hi!", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray57);
        boolean boolean62 = byteOrderMark40.equals((java.lang.Object) byteOrderMark61);
        boolean boolean63 = byteOrderMark5.equals((java.lang.Object) byteOrderMark61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = byteOrderMark61.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str38, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16LE" + "'", str43, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-16LE" + "'", str48, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-16LE" + "'", str49, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        java.lang.String str8 = byteOrderMark0.toString();
        int int9 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) (-1L));
        java.lang.String str13 = byteOrderMark10.toString();
        byte[] byteArray14 = byteOrderMark10.getBytes();
        byte[] byteArray15 = byteOrderMark10.getBytes();
        int int16 = byteOrderMark10.length();
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) int16);
        java.lang.String str18 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16BE" + "'", str18, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray13);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = byteOrderMark23.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[hi!: 0xFF,0x0,0xFE]" + "'", str24, "ByteOrderMark[hi!: 0xFF,0x0,0xFE]");
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        int int13 = byteOrderMark11.get((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = byteOrderMark11.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray29);
        byte[] byteArray36 = byteOrderMark35.getBytes();
        java.lang.Class<?> wildcardClass37 = byteOrderMark35.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        int[] intArray15 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray15);
        boolean boolean17 = byteOrderMark5.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        java.lang.String str18 = byteOrderMark5.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark5.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) "");
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        int int13 = byteOrderMark11.length();
        java.lang.Class<?> wildcardClass14 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        int int21 = byteOrderMark9.length();
        java.lang.String str22 = byteOrderMark9.getCharsetName();
        int int23 = byteOrderMark9.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        byte[] byteArray25 = byteOrderMark24.getBytes();
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) byteOrderMark24);
        int[] intArray35 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray35);
        boolean boolean41 = byteOrderMark24.equals((java.lang.Object) intArray35);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass4 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int11 = byteOrderMark9.get(0);
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) (short) 0);
        byte[] byteArray14 = byteOrderMark9.getBytes();
        int int16 = byteOrderMark9.get(1);
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        java.lang.String str18 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 254 + "'", int16 == 254);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16BE" + "'", str18, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str27 = byteOrderMark13.getCharsetName();
        int int29 = byteOrderMark13.get((int) (byte) 1);
        int int31 = byteOrderMark13.get((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = byteOrderMark13.get(254);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 254 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-32BE" + "'", str27, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 97 + "'", int31 == 97);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        int[] intArray5 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj9 = null;
        boolean boolean10 = byteOrderMark8.equals(obj9);
        int int11 = byteOrderMark8.length();
        boolean boolean13 = byteOrderMark8.equals((java.lang.Object) 0L);
        int int14 = byteOrderMark8.length();
        int int15 = byteOrderMark8.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        boolean boolean26 = byteOrderMark8.equals((java.lang.Object) intArray22);
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray34);
        int int39 = byteOrderMark38.length();
        boolean boolean40 = byteOrderMark8.equals((java.lang.Object) byteOrderMark38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int43 = byteOrderMark41.get(0);
        boolean boolean45 = byteOrderMark41.equals((java.lang.Object) (short) 0);
        int[] intArray52 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray52);
        boolean boolean56 = byteOrderMark41.equals((java.lang.Object) byteOrderMark55);
        boolean boolean57 = byteOrderMark8.equals((java.lang.Object) byteOrderMark41);
        byte[] byteArray58 = byteOrderMark41.getBytes();
        java.lang.Object obj59 = null;
        boolean boolean60 = byteOrderMark41.equals(obj59);
        int[] intArray67 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("hi!", intArray67);
        org.apache.commons.io.ByteOrderMark byteOrderMark69 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray67);
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray67);
        java.lang.String str71 = byteOrderMark70.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = org.apache.commons.io.ByteOrderMark.UTF_8;
        byte[] byteArray73 = byteOrderMark72.getBytes();
        boolean boolean74 = byteOrderMark70.equals((java.lang.Object) byteArray73);
        boolean boolean75 = byteOrderMark41.equals((java.lang.Object) byteOrderMark70);
        boolean boolean76 = byteOrderMark7.equals((java.lang.Object) byteOrderMark41);
        java.lang.String str77 = byteOrderMark41.toString();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteOrderMark41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 255 + "'", int43 == 255);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str71, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark72);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str77, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        boolean boolean64 = byteOrderMark47.equals((java.lang.Object) byteOrderMark61);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        java.lang.Object obj72 = null;
        boolean boolean73 = byteOrderMark70.equals(obj72);
        int int74 = byteOrderMark70.length();
        byte[] byteArray75 = byteOrderMark70.getBytes();
        java.lang.Class<?> wildcardClass76 = byteOrderMark70.getClass();
        boolean boolean77 = byteOrderMark61.equals((java.lang.Object) wildcardClass76);
        boolean boolean78 = byteOrderMark11.equals((java.lang.Object) byteOrderMark61);
        int int80 = byteOrderMark11.get(1);
        int[] intArray90 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark91 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark92 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark93 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark94 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark95 = new org.apache.commons.io.ByteOrderMark("hi!", intArray90);
        org.apache.commons.io.ByteOrderMark byteOrderMark96 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray90);
        boolean boolean97 = byteOrderMark11.equals((java.lang.Object) byteOrderMark96);
        java.lang.String str98 = byteOrderMark96.getCharsetName();
        byte[] byteArray99 = byteOrderMark96.getBytes();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 97 + "'", int80 == 97);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str98, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray99);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray99), "[10, 97, 35]");
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) 1L);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        int int10 = byteOrderMark6.length();
        boolean boolean12 = byteOrderMark6.equals((java.lang.Object) (byte) -1);
        byte[] byteArray13 = byteOrderMark6.getBytes();
        java.lang.String str14 = byteOrderMark6.getCharsetName();
        java.lang.String str15 = byteOrderMark6.getCharsetName();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray23);
        boolean boolean28 = byteOrderMark6.equals((java.lang.Object) byteOrderMark27);
        java.lang.String str29 = byteOrderMark27.getCharsetName();
        int int31 = byteOrderMark27.get((int) (short) 0);
        java.lang.String str32 = byteOrderMark27.toString();
        byte[] byteArray33 = byteOrderMark27.getBytes();
        boolean boolean34 = byteOrderMark5.equals((java.lang.Object) byteArray33);
        java.lang.String str35 = byteOrderMark5.getCharsetName();
        byte[] byteArray36 = byteOrderMark5.getBytes();
        java.lang.String str37 = byteOrderMark5.getCharsetName();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str35, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[10, -2, 100]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str37, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark0.get(254);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 254 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        java.lang.Class<?> wildcardClass47 = byteOrderMark33.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        int int21 = byteOrderMark19.length();
        int int22 = byteOrderMark19.length();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        boolean boolean34 = byteOrderMark17.equals((java.lang.Object) byteOrderMark31);
        java.lang.String str35 = byteOrderMark17.getCharsetName();
        java.lang.String str36 = byteOrderMark17.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str35, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str36, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int13 = byteOrderMark11.get((int) (short) 1);
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        boolean boolean32 = byteOrderMark11.equals((java.lang.Object) intArray24);
        int int34 = byteOrderMark11.get((int) (short) 1);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 97 + "'", int34 == 97);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray8);
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray22);
        int[] intArray35 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean42 = byteOrderMark40.equals((java.lang.Object) (-1L));
        java.lang.String str43 = byteOrderMark40.toString();
        java.lang.String str44 = byteOrderMark40.getCharsetName();
        boolean boolean45 = byteOrderMark39.equals((java.lang.Object) byteOrderMark40);
        boolean boolean46 = byteOrderMark27.equals((java.lang.Object) byteOrderMark39);
        boolean boolean47 = byteOrderMark13.equals((java.lang.Object) byteOrderMark27);
        java.lang.Class<?> wildcardClass48 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-16LE" + "'", str44, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        int int56 = byteOrderMark47.length();
        int int57 = byteOrderMark47.length();
        int int59 = byteOrderMark47.get(0);
        java.lang.String str60 = byteOrderMark47.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 255 + "'", int59 == 255);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-16LE" + "'", str60, "UTF-16LE");
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray20);
        byte[] byteArray30 = byteOrderMark29.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 97, 35]");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        byte[] byteArray25 = byteOrderMark24.getBytes();
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) byteOrderMark24);
        java.lang.String str27 = byteOrderMark24.getCharsetName();
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        byte[] byteArray42 = byteOrderMark41.getBytes();
        int int43 = byteOrderMark41.length();
        byte[] byteArray44 = byteOrderMark41.getBytes();
        boolean boolean45 = byteOrderMark24.equals((java.lang.Object) byteArray44);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("", intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.toString();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) (-1L));
        java.lang.String str23 = byteOrderMark20.toString();
        java.lang.String str24 = byteOrderMark20.getCharsetName();
        boolean boolean25 = byteOrderMark19.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str26 = byteOrderMark19.getCharsetName();
        int int27 = byteOrderMark19.length();
        byte[] byteArray28 = byteOrderMark19.getBytes();
        java.lang.String str29 = byteOrderMark19.getCharsetName();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        java.lang.String str31 = byteOrderMark19.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str26, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray10 = byteOrderMark8.getBytes();
        int int11 = byteOrderMark8.length();
        int int12 = byteOrderMark8.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        boolean boolean29 = byteOrderMark8.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray22);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int5 = byteOrderMark3.get(0);
        java.lang.String str6 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj8 = null;
        boolean boolean9 = byteOrderMark7.equals(obj8);
        int int10 = byteOrderMark7.length();
        boolean boolean12 = byteOrderMark7.equals((java.lang.Object) 0L);
        int int13 = byteOrderMark7.length();
        boolean boolean14 = byteOrderMark3.equals((java.lang.Object) int13);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) boolean14);
        java.lang.String str16 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = byteOrderMark0.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 255 + "'", int5 == 255);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj37 = null;
        boolean boolean38 = byteOrderMark36.equals(obj37);
        byte[] byteArray39 = byteOrderMark36.getBytes();
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) byteOrderMark36);
        int int41 = byteOrderMark35.length();
        java.lang.String str42 = byteOrderMark35.getCharsetName();
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        boolean boolean53 = byteOrderMark35.equals((java.lang.Object) "hi!");
        int int54 = byteOrderMark35.length();
        boolean boolean55 = byteOrderMark19.equals((java.lang.Object) byteOrderMark35);
        byte[] byteArray56 = byteOrderMark19.getBytes();
        int int57 = byteOrderMark19.length();
        int int58 = byteOrderMark19.length();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 3 + "'", int57 == 3);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 3 + "'", int58 == 3);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        boolean boolean38 = byteOrderMark18.equals((java.lang.Object) int37);
        byte[] byteArray39 = byteOrderMark18.getBytes();
        byte[] byteArray40 = byteOrderMark18.getBytes();
        java.lang.Class<?> wildcardClass41 = byteArray40.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str7 = byteOrderMark6.toString();
        java.lang.String str8 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.get(2);
        java.lang.String str11 = byteOrderMark6.toString();
        java.lang.String str12 = byteOrderMark6.getCharsetName();
        int int13 = byteOrderMark6.length();
        java.lang.String str14 = byteOrderMark6.getCharsetName();
        byte[] byteArray15 = byteOrderMark6.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray17 = byteOrderMark16.getBytes();
        java.lang.String str18 = byteOrderMark16.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int21 = byteOrderMark19.get((int) (byte) 0);
        byte[] byteArray22 = byteOrderMark19.getBytes();
        byte[] byteArray23 = byteOrderMark19.getBytes();
        boolean boolean24 = byteOrderMark16.equals((java.lang.Object) byteOrderMark19);
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray34);
        boolean boolean41 = byteOrderMark16.equals((java.lang.Object) intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str43 = byteOrderMark42.getCharsetName();
        java.lang.Class<?> wildcardClass44 = byteOrderMark42.getClass();
        boolean boolean45 = byteOrderMark16.equals((java.lang.Object) wildcardClass44);
        int int46 = byteOrderMark16.length();
        int int47 = byteOrderMark16.length();
        boolean boolean48 = byteOrderMark6.equals((java.lang.Object) int47);
        boolean boolean49 = byteOrderMark0.equals((java.lang.Object) byteOrderMark6);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 254 + "'", int10 == 254);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-32BE" + "'", str12, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 4 + "'", int13 == 4);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-32BE" + "'", str14, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 239 + "'", int21 == 239);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteOrderMark42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16LE" + "'", str43, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 4 + "'", int46 == 4);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 4 + "'", int47 == 4);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        boolean boolean38 = byteOrderMark18.equals((java.lang.Object) int37);
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        byte[] byteArray53 = byteOrderMark52.getBytes();
        boolean boolean54 = byteOrderMark18.equals((java.lang.Object) byteOrderMark52);
        int int55 = byteOrderMark52.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean58 = byteOrderMark56.equals((java.lang.Object) 1L);
        java.lang.String str59 = byteOrderMark56.getCharsetName();
        int int60 = byteOrderMark56.length();
        java.lang.String str61 = byteOrderMark56.toString();
        java.lang.String str62 = byteOrderMark56.toString();
        int int63 = byteOrderMark56.length();
        boolean boolean64 = byteOrderMark52.equals((java.lang.Object) byteOrderMark56);
        java.lang.String str65 = byteOrderMark56.toString();
        java.lang.String str66 = byteOrderMark56.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-16LE" + "'", str59, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str61, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str62, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str65, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "UTF-16LE" + "'", str66, "UTF-16LE");
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass7 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) 1L);
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean34 = byteOrderMark29.equals((java.lang.Object) byteOrderMark33);
        byte[] byteArray35 = byteOrderMark33.getBytes();
        int int36 = byteOrderMark33.length();
        int int37 = byteOrderMark33.length();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        boolean boolean54 = byteOrderMark33.equals((java.lang.Object) intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        boolean boolean56 = byteOrderMark9.equals((java.lang.Object) byteOrderMark55);
        byte[] byteArray57 = byteOrderMark9.getBytes();
        int int59 = byteOrderMark9.get(0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        java.lang.String str22 = byteOrderMark21.getCharsetName();
        java.lang.Class<?> wildcardClass23 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int13 = byteOrderMark11.get(0);
        int int14 = byteOrderMark11.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        java.lang.Class<?> wildcardClass14 = intArray8.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean21 = byteOrderMark3.equals((java.lang.Object) intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray14);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("", intArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean11 = byteOrderMark9.equals((java.lang.Object) 1L);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        int int13 = byteOrderMark9.length();
        java.lang.String str14 = byteOrderMark9.toString();
        java.lang.String str15 = byteOrderMark9.getCharsetName();
        int int16 = byteOrderMark9.length();
        java.lang.String str17 = byteOrderMark9.toString();
        java.lang.String str18 = byteOrderMark9.getCharsetName();
        java.lang.String str19 = byteOrderMark9.toString();
        int int20 = byteOrderMark9.length();
        boolean boolean21 = byteOrderMark7.equals((java.lang.Object) byteOrderMark9);
        java.lang.String str22 = byteOrderMark7.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str17, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray29);
        int int37 = byteOrderMark35.get((int) (byte) 0);
        int[] intArray46 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray46);
        byte[] byteArray52 = byteOrderMark51.getBytes();
        int int53 = byteOrderMark51.length();
        java.lang.String str54 = byteOrderMark51.toString();
        int[] intArray60 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray60);
        byte[] byteArray63 = byteOrderMark62.getBytes();
        boolean boolean64 = byteOrderMark51.equals((java.lang.Object) byteOrderMark62);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str66 = byteOrderMark65.toString();
        java.lang.String str67 = byteOrderMark65.toString();
        int int69 = byteOrderMark65.get(2);
        boolean boolean71 = byteOrderMark65.equals((java.lang.Object) (byte) 10);
        boolean boolean72 = byteOrderMark51.equals((java.lang.Object) boolean71);
        byte[] byteArray73 = byteOrderMark51.getBytes();
        boolean boolean74 = byteOrderMark35.equals((java.lang.Object) byteOrderMark51);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = byteOrderMark35.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str54, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteOrderMark65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str66, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str67, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 254 + "'", int69 == 254);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray10 = byteOrderMark4.getBytes();
        int int11 = byteOrderMark4.length();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        boolean boolean24 = byteOrderMark4.equals((java.lang.Object) byteOrderMark23);
        int[] intArray31 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray31);
        boolean boolean35 = byteOrderMark4.equals((java.lang.Object) byteOrderMark34);
        java.lang.String str36 = byteOrderMark34.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str36, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.toString();
        boolean boolean27 = byteOrderMark21.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray28 = byteOrderMark23.getBytes();
        byte[] byteArray29 = byteOrderMark23.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int31 = byteOrderMark23.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -2]");
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark0.getBytes();
        byte[] byteArray17 = byteOrderMark0.getBytes();
        java.lang.String str18 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        java.lang.String str27 = byteOrderMark23.getCharsetName();
        int int28 = byteOrderMark23.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray30 = byteOrderMark29.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean33 = byteOrderMark31.equals((java.lang.Object) 1L);
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean36 = byteOrderMark31.equals((java.lang.Object) byteOrderMark35);
        boolean boolean37 = byteOrderMark29.equals((java.lang.Object) byteOrderMark31);
        java.lang.String str38 = byteOrderMark31.toString();
        boolean boolean39 = byteOrderMark23.equals((java.lang.Object) str38);
        boolean boolean40 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str41 = byteOrderMark23.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16BE" + "'", str27, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str38, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str41, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        byte[] byteArray20 = byteOrderMark17.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.toString();
        byte[] byteArray25 = byteOrderMark21.getBytes();
        boolean boolean26 = byteOrderMark17.equals((java.lang.Object) byteOrderMark21);
        java.lang.Class<?> wildcardClass27 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark5.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.toString();
        int int21 = byteOrderMark19.length();
        byte[] byteArray22 = byteOrderMark19.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray25 = byteOrderMark24.getBytes();
        java.lang.String str26 = byteOrderMark24.toString();
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        boolean boolean43 = byteOrderMark24.equals((java.lang.Object) intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray36);
        boolean boolean45 = byteOrderMark19.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.toString();
        java.lang.String str8 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int10 = byteOrderMark0.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark0.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-2, -1]");
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int11 = byteOrderMark9.get(0);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj14 = null;
        boolean boolean15 = byteOrderMark13.equals(obj14);
        int int16 = byteOrderMark13.length();
        boolean boolean18 = byteOrderMark13.equals((java.lang.Object) 0L);
        int int19 = byteOrderMark13.length();
        boolean boolean20 = byteOrderMark9.equals((java.lang.Object) int19);
        int int22 = byteOrderMark9.get(0);
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) (-1L));
        java.lang.String str27 = byteOrderMark24.toString();
        byte[] byteArray28 = byteOrderMark24.getBytes();
        java.lang.Class<?> wildcardClass29 = byteArray28.getClass();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) wildcardClass29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj32 = null;
        boolean boolean33 = byteOrderMark31.equals(obj32);
        int int34 = byteOrderMark31.length();
        boolean boolean36 = byteOrderMark31.equals((java.lang.Object) 0L);
        int int37 = byteOrderMark31.length();
        boolean boolean39 = byteOrderMark31.equals((java.lang.Object) 3);
        java.lang.String str40 = byteOrderMark31.getCharsetName();
        java.lang.String str41 = byteOrderMark31.getCharsetName();
        boolean boolean42 = byteOrderMark0.equals((java.lang.Object) byteOrderMark31);
        byte[] byteArray43 = byteOrderMark31.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 255 + "'", int22 == 255);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str27, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16BE" + "'", str40, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16BE" + "'", str41, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-2, -1]");
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) 0L);
        int int18 = byteOrderMark12.length();
        int int19 = byteOrderMark12.length();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) intArray26);
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray38);
        int int43 = byteOrderMark42.length();
        boolean boolean44 = byteOrderMark12.equals((java.lang.Object) byteOrderMark42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int47 = byteOrderMark45.get(0);
        boolean boolean49 = byteOrderMark45.equals((java.lang.Object) (short) 0);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        boolean boolean60 = byteOrderMark45.equals((java.lang.Object) byteOrderMark59);
        boolean boolean61 = byteOrderMark12.equals((java.lang.Object) byteOrderMark45);
        byte[] byteArray62 = byteOrderMark45.getBytes();
        boolean boolean63 = byteOrderMark5.equals((java.lang.Object) byteArray62);
        int[] intArray73 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("hi!", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("hi!", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray73);
        boolean boolean80 = byteOrderMark5.equals((java.lang.Object) intArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int82 = byteOrderMark5.get(254);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 254 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 255 + "'", int47 == 255);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = byteOrderMark17.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int10 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-32BE" + "'", str6, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray19 = byteOrderMark18.getBytes();
        java.lang.String str20 = byteOrderMark18.toString();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean37 = byteOrderMark18.equals((java.lang.Object) intArray30);
        boolean boolean38 = byteOrderMark17.equals((java.lang.Object) byteOrderMark18);
        byte[] byteArray39 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        java.lang.String str17 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-32BE" + "'", str16, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        java.lang.String str14 = byteOrderMark0.toString();
        int int15 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark0.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        int int28 = byteOrderMark9.length();
        int int29 = byteOrderMark9.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray12);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = byteOrderMark21.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj37 = null;
        boolean boolean38 = byteOrderMark36.equals(obj37);
        byte[] byteArray39 = byteOrderMark36.getBytes();
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) byteOrderMark36);
        int int41 = byteOrderMark35.length();
        java.lang.String str42 = byteOrderMark35.getCharsetName();
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        boolean boolean53 = byteOrderMark35.equals((java.lang.Object) "hi!");
        int int54 = byteOrderMark35.length();
        boolean boolean55 = byteOrderMark19.equals((java.lang.Object) byteOrderMark35);
        byte[] byteArray56 = byteOrderMark19.getBytes();
        int int58 = byteOrderMark19.get(0);
        int int59 = byteOrderMark19.length();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        byte[] byteArray14 = byteOrderMark11.getBytes();
        java.lang.String str15 = byteOrderMark11.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark11.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean21 = byteOrderMark3.equals((java.lang.Object) intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        int int25 = byteOrderMark24.length();
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int1 = byteOrderMark0.length();
        int int3 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        int int6 = byteOrderMark0.length();
        byte[] byteArray7 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 254 + "'", int3 == 254);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        int int21 = byteOrderMark20.length();
        boolean boolean22 = byteOrderMark5.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        byte[] byteArray24 = byteOrderMark20.getBytes();
        java.lang.Class<?> wildcardClass25 = byteArray24.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        int int8 = byteOrderMark4.length();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        boolean boolean29 = byteOrderMark4.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        byte[] byteArray30 = byteOrderMark4.getBytes();
        java.lang.String str31 = byteOrderMark4.toString();
        java.lang.String str32 = byteOrderMark4.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16BE" + "'", str32, "UTF-16BE");
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = byteOrderMark13.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray6);
        int int11 = byteOrderMark9.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 97 + "'", int11 == 97);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        java.lang.Class<?> wildcardClass17 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-32BE" + "'", str16, "UTF-32BE");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        java.lang.String str63 = byteOrderMark61.getCharsetName();
        boolean boolean64 = byteOrderMark47.equals((java.lang.Object) byteOrderMark61);
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        java.lang.String str71 = byteOrderMark70.getCharsetName();
        java.lang.Object obj72 = null;
        boolean boolean73 = byteOrderMark70.equals(obj72);
        int int74 = byteOrderMark70.length();
        byte[] byteArray75 = byteOrderMark70.getBytes();
        java.lang.Class<?> wildcardClass76 = byteOrderMark70.getClass();
        boolean boolean77 = byteOrderMark61.equals((java.lang.Object) wildcardClass76);
        boolean boolean78 = byteOrderMark11.equals((java.lang.Object) byteOrderMark61);
        int int80 = byteOrderMark11.get(1);
        java.lang.String str81 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "UTF-32BE" + "'", str63, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 3 + "'", int74 == 3);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 97 + "'", int80 == 97);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str81, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        int int20 = byteOrderMark17.length();
        java.lang.Object obj21 = null;
        boolean boolean22 = byteOrderMark17.equals(obj21);
        java.lang.String str23 = byteOrderMark17.toString();
        java.lang.String str24 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        byte[] byteArray24 = byteOrderMark23.getBytes();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        java.lang.Class<?> wildcardClass24 = byteOrderMark23.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark13.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.toString();
        java.lang.Class<?> wildcardClass15 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int5 = byteOrderMark0.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        int int7 = byteOrderMark4.length();
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) 0L);
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) int10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) 1L);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        int int16 = byteOrderMark12.length();
        boolean boolean18 = byteOrderMark12.equals((java.lang.Object) (byte) -1);
        byte[] byteArray19 = byteOrderMark12.getBytes();
        java.lang.String str20 = byteOrderMark12.getCharsetName();
        byte[] byteArray21 = byteOrderMark12.getBytes();
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = byteOrderMark0.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray6);
        java.lang.Class<?> wildcardClass10 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.toString();
        boolean boolean27 = byteOrderMark21.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray28 = byteOrderMark23.getBytes();
        java.lang.Class<?> wildcardClass29 = byteArray28.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int5 = byteOrderMark0.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        int int17 = byteOrderMark15.get(2);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark15.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str18, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        int int16 = byteOrderMark13.length();
        int int18 = byteOrderMark13.get((int) (short) 0);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str15, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = byteOrderMark13.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray27 = byteOrderMark26.getBytes();
        int int28 = byteOrderMark26.length();
        java.lang.String str29 = byteOrderMark26.getCharsetName();
        java.lang.String str30 = byteOrderMark26.getCharsetName();
        java.lang.String str31 = byteOrderMark26.getCharsetName();
        byte[] byteArray32 = byteOrderMark26.getBytes();
        boolean boolean33 = byteOrderMark25.equals((java.lang.Object) byteArray32);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16LE" + "'", str29, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str5 = byteOrderMark4.toString();
        java.lang.String str6 = byteOrderMark4.toString();
        int int8 = byteOrderMark4.get(2);
        boolean boolean10 = byteOrderMark4.equals((java.lang.Object) (byte) 10);
        byte[] byteArray11 = byteOrderMark4.getBytes();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        boolean boolean28 = byteOrderMark4.equals((java.lang.Object) byteOrderMark27);
        byte[] byteArray29 = byteOrderMark27.getBytes();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteArray29);
        int int31 = byteOrderMark0.length();
        int int32 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean38 = byteOrderMark33.equals((java.lang.Object) byteOrderMark37);
        byte[] byteArray39 = byteOrderMark37.getBytes();
        boolean boolean40 = byteOrderMark0.equals((java.lang.Object) byteOrderMark37);
        java.lang.String str41 = byteOrderMark37.toString();
        int int43 = byteOrderMark37.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 254 + "'", int8 == 254);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str41, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 254 + "'", int43 == 254);
    }
}


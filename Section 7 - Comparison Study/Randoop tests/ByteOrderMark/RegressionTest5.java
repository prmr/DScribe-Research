import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray14 = byteOrderMark12.getBytes();
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        int int17 = byteOrderMark12.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str19 = byteOrderMark18.getCharsetName();
        boolean boolean21 = byteOrderMark18.equals((java.lang.Object) 1.0d);
        byte[] byteArray22 = byteOrderMark18.getBytes();
        boolean boolean23 = byteOrderMark12.equals((java.lang.Object) byteOrderMark18);
        byte[] byteArray24 = byteOrderMark12.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-8" + "'", str16, "UTF-8");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-17, -69, -65]");
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray15);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) (-1L));
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        boolean boolean16 = byteOrderMark12.equals((java.lang.Object) (short) 0);
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        boolean boolean27 = byteOrderMark12.equals((java.lang.Object) byteOrderMark26);
        boolean boolean28 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        int int29 = byteOrderMark12.length();
        java.lang.String str30 = byteOrderMark12.getCharsetName();
        byte[] byteArray31 = byteOrderMark12.getBytes();
        java.lang.String str32 = byteOrderMark12.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str32, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        boolean boolean38 = byteOrderMark17.equals((java.lang.Object) intArray29);
        java.lang.String str39 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str39, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        byte[] byteArray20 = byteOrderMark17.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.toString();
        byte[] byteArray25 = byteOrderMark21.getBytes();
        boolean boolean26 = byteOrderMark17.equals((java.lang.Object) byteOrderMark21);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean53 = byteOrderMark51.equals((java.lang.Object) (-1L));
        java.lang.String str54 = byteOrderMark51.toString();
        java.lang.String str55 = byteOrderMark51.toString();
        java.lang.String str56 = byteOrderMark51.toString();
        boolean boolean57 = byteOrderMark50.equals((java.lang.Object) byteOrderMark51);
        boolean boolean58 = byteOrderMark21.equals((java.lang.Object) byteOrderMark50);
        java.lang.String str59 = byteOrderMark21.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str54, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str55, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str56, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-16LE" + "'", str59, "UTF-16LE");
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        java.lang.String str22 = byteOrderMark20.toString();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        int[] intArray29 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray29);
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        java.lang.String str33 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass34 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark28.getCharsetName();
        byte[] byteArray31 = byteOrderMark28.getBytes();
        int int32 = byteOrderMark28.length();
        java.lang.String str33 = byteOrderMark28.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-32BE" + "'", str30, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str33, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        java.lang.String str12 = byteOrderMark9.toString();
        java.lang.String str13 = byteOrderMark9.toString();
        java.lang.String str14 = byteOrderMark9.toString();
        byte[] byteArray15 = byteOrderMark9.getBytes();
        java.lang.Class<?> wildcardClass16 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.getCharsetName();
        byte[] byteArray19 = byteOrderMark13.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) 1L);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        int int24 = byteOrderMark20.length();
        java.lang.String str25 = byteOrderMark20.getCharsetName();
        byte[] byteArray26 = byteOrderMark20.getBytes();
        boolean boolean27 = byteOrderMark13.equals((java.lang.Object) byteOrderMark20);
        int int29 = byteOrderMark13.get(1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        java.lang.String str16 = byteOrderMark15.toString();
        int int17 = byteOrderMark15.length();
        int int19 = byteOrderMark15.get(0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean20 = byteOrderMark18.equals((java.lang.Object) (-1L));
        java.lang.String str21 = byteOrderMark18.toString();
        java.lang.String str22 = byteOrderMark18.getCharsetName();
        boolean boolean23 = byteOrderMark17.equals((java.lang.Object) byteOrderMark18);
        java.lang.String str24 = byteOrderMark18.toString();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        java.lang.Class<?> wildcardClass26 = byteOrderMark18.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str21, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.toString();
        boolean boolean27 = byteOrderMark21.equals((java.lang.Object) byteOrderMark23);
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        byte[] byteArray42 = byteOrderMark41.getBytes();
        byte[] byteArray43 = byteOrderMark41.getBytes();
        boolean boolean44 = byteOrderMark23.equals((java.lang.Object) byteOrderMark41);
        int[] intArray54 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray54);
        byte[] byteArray61 = byteOrderMark60.getBytes();
        java.lang.String str62 = byteOrderMark60.toString();
        boolean boolean63 = byteOrderMark41.equals((java.lang.Object) byteOrderMark60);
        byte[] byteArray64 = byteOrderMark41.getBytes();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str26, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str62, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[10, 97, 35]");
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray5 = byteOrderMark4.getBytes();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        boolean boolean22 = byteOrderMark4.equals((java.lang.Object) intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray15);
        java.lang.String str27 = byteOrderMark26.toString();
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str27, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark11.getCharsetName();
        int int31 = byteOrderMark11.length();
        byte[] byteArray32 = byteOrderMark11.getBytes();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray14);
        int[] intArray32 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int38 = byteOrderMark36.get(0);
        byte[] byteArray39 = byteOrderMark36.getBytes();
        byte[] byteArray40 = byteOrderMark36.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean43 = byteOrderMark41.equals((java.lang.Object) 1L);
        java.lang.String str44 = byteOrderMark41.getCharsetName();
        boolean boolean45 = byteOrderMark36.equals((java.lang.Object) byteOrderMark41);
        byte[] byteArray46 = byteOrderMark36.getBytes();
        boolean boolean47 = byteOrderMark35.equals((java.lang.Object) byteOrderMark36);
        byte[] byteArray48 = byteOrderMark36.getBytes();
        boolean boolean49 = byteOrderMark25.equals((java.lang.Object) byteOrderMark36);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 255 + "'", int38 == 255);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-16LE" + "'", str44, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int8 = byteOrderMark7.length();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark17.getClass();
        boolean boolean20 = byteOrderMark7.equals((java.lang.Object) byteOrderMark17);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray33);
        int int44 = byteOrderMark42.get((int) (short) 1);
        boolean boolean45 = byteOrderMark7.equals((java.lang.Object) (short) 1);
        java.lang.String str46 = byteOrderMark7.toString();
        java.lang.String str47 = byteOrderMark7.getCharsetName();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 97 + "'", int44 == 97);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str46, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-16LE" + "'", str47, "UTF-16LE");
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        int int11 = byteOrderMark9.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj2 = null;
        boolean boolean3 = byteOrderMark1.equals(obj2);
        int int4 = byteOrderMark1.length();
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) 0L);
        int int7 = byteOrderMark1.length();
        int int8 = byteOrderMark1.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        boolean boolean19 = byteOrderMark1.equals((java.lang.Object) intArray15);
        byte[] byteArray20 = byteOrderMark1.getBytes();
        int int21 = byteOrderMark1.length();
        java.lang.String str22 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray24 = byteOrderMark23.getBytes();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        boolean boolean41 = byteOrderMark23.equals((java.lang.Object) intArray34);
        boolean boolean42 = byteOrderMark1.equals((java.lang.Object) intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray34);
        java.lang.String str44 = byteOrderMark43.toString();
        java.lang.String str45 = byteOrderMark43.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_32LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        java.lang.Class<?> wildcardClass50 = byteOrderMark47.getClass();
        boolean boolean51 = byteOrderMark46.equals((java.lang.Object) byteOrderMark47);
        byte[] byteArray52 = byteOrderMark46.getBytes();
        java.lang.String str53 = byteOrderMark46.toString();
        java.lang.String str54 = byteOrderMark46.getCharsetName();
        boolean boolean55 = byteOrderMark43.equals((java.lang.Object) byteOrderMark46);
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16BE" + "'", str22, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str44, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str45, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark46);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str53, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-32BE" + "'", str54, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        java.lang.String str22 = byteOrderMark20.toString();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        int[] intArray29 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray29);
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        java.lang.String str33 = byteOrderMark0.getCharsetName();
        int int34 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj2 = null;
        boolean boolean3 = byteOrderMark1.equals(obj2);
        byte[] byteArray4 = byteOrderMark1.getBytes();
        java.lang.String str5 = byteOrderMark1.toString();
        java.lang.String str6 = byteOrderMark1.getCharsetName();
        java.lang.String str7 = byteOrderMark1.toString();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        boolean boolean24 = byteOrderMark1.equals((java.lang.Object) intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = byteOrderMark25.get((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        int int14 = byteOrderMark0.length();
        int int15 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) (-1L));
        java.lang.String str22 = byteOrderMark19.toString();
        byte[] byteArray23 = byteOrderMark19.getBytes();
        byte[] byteArray24 = byteOrderMark19.getBytes();
        java.lang.String str25 = byteOrderMark19.getCharsetName();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean32 = byteOrderMark19.equals((java.lang.Object) "hi!");
        boolean boolean33 = byteOrderMark13.equals((java.lang.Object) byteOrderMark19);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj35 = null;
        boolean boolean36 = byteOrderMark34.equals(obj35);
        int int37 = byteOrderMark34.length();
        boolean boolean39 = byteOrderMark34.equals((java.lang.Object) 0L);
        int int40 = byteOrderMark34.length();
        int int41 = byteOrderMark34.length();
        int[] intArray48 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray48);
        boolean boolean52 = byteOrderMark34.equals((java.lang.Object) intArray48);
        int[] intArray60 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray60);
        int int65 = byteOrderMark64.length();
        boolean boolean66 = byteOrderMark34.equals((java.lang.Object) byteOrderMark64);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean69 = byteOrderMark67.equals((java.lang.Object) 1L);
        java.lang.String str70 = byteOrderMark67.getCharsetName();
        int int71 = byteOrderMark67.length();
        boolean boolean73 = byteOrderMark67.equals((java.lang.Object) (byte) -1);
        byte[] byteArray74 = byteOrderMark67.getBytes();
        java.lang.String str75 = byteOrderMark67.getCharsetName();
        java.lang.String str76 = byteOrderMark67.getCharsetName();
        java.lang.String str77 = byteOrderMark67.toString();
        int int78 = byteOrderMark67.length();
        int int79 = byteOrderMark67.length();
        boolean boolean80 = byteOrderMark64.equals((java.lang.Object) byteOrderMark67);
        org.apache.commons.io.ByteOrderMark byteOrderMark81 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean83 = byteOrderMark81.equals((java.lang.Object) (-1L));
        java.lang.String str84 = byteOrderMark81.toString();
        byte[] byteArray85 = byteOrderMark81.getBytes();
        byte[] byteArray86 = byteOrderMark81.getBytes();
        byte[] byteArray87 = byteOrderMark81.getBytes();
        java.lang.String str88 = byteOrderMark81.getCharsetName();
        boolean boolean89 = byteOrderMark67.equals((java.lang.Object) byteOrderMark81);
        boolean boolean90 = byteOrderMark13.equals((java.lang.Object) byteOrderMark67);
        java.lang.String str91 = byteOrderMark67.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 3 + "'", int65 == 3);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteOrderMark67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "UTF-16LE" + "'", str70, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "UTF-16LE" + "'", str75, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "UTF-16LE" + "'", str76, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str77, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2 + "'", int78 == 2);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(byteOrderMark81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str84, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "UTF-16LE" + "'", str88, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str91, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        byte[] byteArray18 = byteOrderMark15.getBytes();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        java.lang.String str20 = byteOrderMark15.getCharsetName();
        java.lang.String str21 = byteOrderMark15.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int23 = byteOrderMark15.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        boolean boolean34 = byteOrderMark17.equals((java.lang.Object) byteOrderMark31);
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        java.lang.String str41 = byteOrderMark40.getCharsetName();
        java.lang.Object obj42 = null;
        boolean boolean43 = byteOrderMark40.equals(obj42);
        int int44 = byteOrderMark40.length();
        byte[] byteArray45 = byteOrderMark40.getBytes();
        java.lang.Class<?> wildcardClass46 = byteOrderMark40.getClass();
        boolean boolean47 = byteOrderMark31.equals((java.lang.Object) wildcardClass46);
        int int49 = byteOrderMark31.get((int) (byte) 0);
        byte[] byteArray50 = byteOrderMark31.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int52 = byteOrderMark31.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[10, 97, 35]");
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        byte[] byteArray5 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int8 = byteOrderMark6.get(0);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) 0L);
        int int16 = byteOrderMark10.length();
        boolean boolean17 = byteOrderMark6.equals((java.lang.Object) int16);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark6);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str20 = byteOrderMark19.toString();
        java.lang.String str21 = byteOrderMark19.toString();
        int int23 = byteOrderMark19.get(2);
        java.lang.String str24 = byteOrderMark19.toString();
        int int26 = byteOrderMark19.get(1);
        byte[] byteArray27 = byteOrderMark19.getBytes();
        java.lang.String str28 = byteOrderMark19.toString();
        java.lang.String str29 = byteOrderMark19.toString();
        java.lang.Class<?> wildcardClass30 = byteOrderMark19.getClass();
        boolean boolean31 = byteOrderMark0.equals((java.lang.Object) wildcardClass30);
        byte[] byteArray32 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 255 + "'", int8 == 255);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[0, 0, -2, -1]");
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        byte[] byteArray17 = byteOrderMark15.getBytes();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int10 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int12 = byteOrderMark0.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        boolean boolean12 = byteOrderMark5.equals((java.lang.Object) '\ufeff');
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray24);
        boolean boolean33 = byteOrderMark5.equals((java.lang.Object) intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray24);
        java.lang.String str36 = byteOrderMark35.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str36, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xFF]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        byte[] byteArray40 = byteOrderMark39.getBytes();
        java.lang.String str41 = byteOrderMark39.toString();
        byte[] byteArray42 = byteOrderMark39.getBytes();
        java.lang.String str43 = byteOrderMark39.getCharsetName();
        boolean boolean44 = byteOrderMark31.equals((java.lang.Object) byteOrderMark39);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str46 = byteOrderMark45.toString();
        boolean boolean48 = byteOrderMark45.equals((java.lang.Object) ' ');
        boolean boolean50 = byteOrderMark45.equals((java.lang.Object) 3);
        java.lang.String str51 = byteOrderMark45.toString();
        int int52 = byteOrderMark45.length();
        int int53 = byteOrderMark45.length();
        boolean boolean54 = byteOrderMark39.equals((java.lang.Object) int53);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str41, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16LE" + "'", str43, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str46, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str51, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 4 + "'", int52 == 4);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 4 + "'", int53 == 4);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        byte[] byteArray20 = byteOrderMark17.getBytes();
        java.lang.String str21 = byteOrderMark17.toString();
        int int23 = byteOrderMark17.get((int) (byte) 0);
        boolean boolean24 = byteOrderMark15.equals((java.lang.Object) byteOrderMark17);
        byte[] byteArray25 = byteOrderMark17.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray30 = byteOrderMark29.getBytes();
        java.lang.String str31 = byteOrderMark29.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int34 = byteOrderMark32.get((int) (byte) 0);
        byte[] byteArray35 = byteOrderMark32.getBytes();
        byte[] byteArray36 = byteOrderMark32.getBytes();
        boolean boolean37 = byteOrderMark29.equals((java.lang.Object) byteOrderMark32);
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray47);
        boolean boolean54 = byteOrderMark29.equals((java.lang.Object) intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray47);
        boolean boolean58 = byteOrderMark17.equals((java.lang.Object) byteOrderMark57);
        java.lang.String str59 = byteOrderMark57.getCharsetName();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-32BE" + "'", str31, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 239 + "'", int34 == 239);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "ByteOrderMark[hi!: 0xFF,0x0,0xFE]" + "'", str59, "ByteOrderMark[hi!: 0xFF,0x0,0xFE]");
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int int14 = byteOrderMark11.get((int) (byte) 1);
        java.lang.String str15 = byteOrderMark11.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark11.get(100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 97 + "'", int14 == 97);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray10 = byteOrderMark9.getBytes();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        int int12 = byteOrderMark0.length();
        java.lang.String str13 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-32BE" + "'", str15, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-32BE" + "'", str16, "UTF-32BE");
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean32 = byteOrderMark30.equals((java.lang.Object) (-1L));
        java.lang.String str33 = byteOrderMark30.toString();
        java.lang.String str34 = byteOrderMark30.getCharsetName();
        boolean boolean35 = byteOrderMark29.equals((java.lang.Object) byteOrderMark30);
        byte[] byteArray36 = byteOrderMark29.getBytes();
        java.lang.String str37 = byteOrderMark29.getCharsetName();
        java.lang.String str38 = byteOrderMark29.toString();
        java.lang.String str39 = byteOrderMark29.getCharsetName();
        boolean boolean40 = byteOrderMark15.equals((java.lang.Object) str39);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str33, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str37, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str38, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str39, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj2 = null;
        boolean boolean3 = byteOrderMark1.equals(obj2);
        int int4 = byteOrderMark1.length();
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) 0L);
        int int7 = byteOrderMark1.length();
        int int8 = byteOrderMark1.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        boolean boolean19 = byteOrderMark1.equals((java.lang.Object) intArray15);
        byte[] byteArray20 = byteOrderMark1.getBytes();
        int int21 = byteOrderMark1.length();
        java.lang.String str22 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray24 = byteOrderMark23.getBytes();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        boolean boolean41 = byteOrderMark23.equals((java.lang.Object) intArray34);
        boolean boolean42 = byteOrderMark1.equals((java.lang.Object) intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray34);
        byte[] byteArray44 = byteOrderMark43.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16BE" + "'", str22, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 97, 35]");
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        java.lang.String str3 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj6 = null;
        boolean boolean7 = byteOrderMark5.equals(obj6);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        java.lang.String str9 = byteOrderMark5.toString();
        int int10 = byteOrderMark5.length();
        int int11 = byteOrderMark5.length();
        boolean boolean12 = byteOrderMark0.equals((java.lang.Object) byteOrderMark5);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str3, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        int[] intArray7 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 254]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xFF,0x0,0xFE]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xFF,0x0,0xFE]");
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj22 = null;
        boolean boolean23 = byteOrderMark21.equals(obj22);
        int int24 = byteOrderMark21.length();
        boolean boolean26 = byteOrderMark21.equals((java.lang.Object) 0L);
        int int27 = byteOrderMark21.length();
        boolean boolean29 = byteOrderMark21.equals((java.lang.Object) 3);
        java.lang.String str30 = byteOrderMark21.getCharsetName();
        boolean boolean32 = byteOrderMark21.equals((java.lang.Object) (-1L));
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int35 = byteOrderMark33.get(0);
        boolean boolean37 = byteOrderMark33.equals((java.lang.Object) (short) 0);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        boolean boolean48 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        boolean boolean49 = byteOrderMark21.equals((java.lang.Object) byteOrderMark33);
        boolean boolean50 = byteOrderMark19.equals((java.lang.Object) byteOrderMark21);
        int int52 = byteOrderMark21.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16BE" + "'", str30, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 255 + "'", int35 == 255);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 254 + "'", int52 == 254);
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str30 = byteOrderMark29.toString();
        boolean boolean32 = byteOrderMark29.equals((java.lang.Object) ' ');
        java.lang.String str33 = byteOrderMark29.toString();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        byte[] byteArray35 = byteOrderMark29.getBytes();
        boolean boolean36 = byteOrderMark27.equals((java.lang.Object) byteArray35);
        int[] intArray43 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        java.lang.String str47 = byteOrderMark46.toString();
        java.lang.String str48 = byteOrderMark46.getCharsetName();
        byte[] byteArray49 = byteOrderMark46.getBytes();
        boolean boolean50 = byteOrderMark27.equals((java.lang.Object) byteArray49);
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str33, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-32BE" + "'", str34, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str47, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        java.lang.String str9 = byteOrderMark3.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) 1L);
        java.lang.String str13 = byteOrderMark10.getCharsetName();
        int int14 = byteOrderMark10.length();
        java.lang.String str15 = byteOrderMark10.toString();
        java.lang.String str16 = byteOrderMark10.getCharsetName();
        int int17 = byteOrderMark10.length();
        java.lang.String str18 = byteOrderMark10.toString();
        java.lang.String str19 = byteOrderMark10.getCharsetName();
        boolean boolean20 = byteOrderMark3.equals((java.lang.Object) str19);
        java.lang.String str21 = byteOrderMark3.toString();
        java.lang.String str22 = byteOrderMark3.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str21, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray15);
        byte[] byteArray28 = byteOrderMark27.getBytes();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        int[] intArray3 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        int int9 = byteOrderMark5.length();
        boolean boolean11 = byteOrderMark5.equals((java.lang.Object) (byte) -1);
        byte[] byteArray12 = byteOrderMark5.getBytes();
        java.lang.String str13 = byteOrderMark5.getCharsetName();
        java.lang.String str14 = byteOrderMark5.getCharsetName();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray22);
        boolean boolean27 = byteOrderMark5.equals((java.lang.Object) byteOrderMark26);
        java.lang.String str28 = byteOrderMark26.getCharsetName();
        int int30 = byteOrderMark26.get((int) (short) 0);
        boolean boolean31 = byteOrderMark4.equals((java.lang.Object) byteOrderMark26);
        java.lang.String str32 = byteOrderMark4.toString();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[239, 10]");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xEF,0xA]" + "'", str32, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xEF,0xA]");
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray17);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        java.lang.String str13 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int16 = byteOrderMark14.get((int) (byte) 0);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int33 = byteOrderMark32.length();
        boolean boolean34 = byteOrderMark14.equals((java.lang.Object) byteOrderMark32);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray44);
        boolean boolean51 = byteOrderMark14.equals((java.lang.Object) intArray44);
        boolean boolean52 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str53 = byteOrderMark14.getCharsetName();
        byte[] byteArray54 = byteOrderMark14.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 239 + "'", int16 == 239);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[-17, -69, -65]");
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get(3);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 255 + "'", int8 == 255);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        int[] intArray3 = new int[] { (byte) -1 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray3);
        java.lang.String str6 = byteOrderMark5.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean9 = byteOrderMark7.equals((java.lang.Object) 1L);
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        int int11 = byteOrderMark7.length();
        boolean boolean13 = byteOrderMark7.equals((java.lang.Object) (-1.0f));
        boolean boolean14 = byteOrderMark5.equals((java.lang.Object) boolean13);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]" + "'", str6, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        int[] intArray6 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray6);
        byte[] byteArray10 = byteOrderMark9.getBytes();
        java.lang.String str11 = byteOrderMark9.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = byteOrderMark9.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0, 254]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, 0, -2]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]" + "'", str11, "ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]");
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.Class<?> wildcardClass15 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        byte[] byteArray20 = byteOrderMark17.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.toString();
        byte[] byteArray25 = byteOrderMark21.getBytes();
        boolean boolean26 = byteOrderMark17.equals((java.lang.Object) byteOrderMark21);
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray36);
        boolean boolean43 = byteOrderMark17.equals((java.lang.Object) intArray36);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) (-1L));
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        byte[] byteArray16 = byteOrderMark12.getBytes();
        boolean boolean17 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) boolean17);
        java.lang.String str19 = byteOrderMark0.getCharsetName();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.String str22 = byteOrderMark0.toString();
        java.lang.String str23 = byteOrderMark0.toString();
        byte[] byteArray24 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-2, -1]");
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark9.equals(obj13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray16 = byteOrderMark15.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean19 = byteOrderMark17.equals((java.lang.Object) (-1L));
        java.lang.String str20 = byteOrderMark17.getCharsetName();
        java.lang.String str21 = byteOrderMark17.getCharsetName();
        boolean boolean22 = byteOrderMark15.equals((java.lang.Object) str21);
        int[] intArray35 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray35);
        boolean boolean45 = byteOrderMark15.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str46 = byteOrderMark15.toString();
        java.lang.String str47 = byteOrderMark15.getCharsetName();
        int int48 = byteOrderMark15.length();
        int int49 = byteOrderMark15.length();
        byte[] byteArray50 = byteOrderMark15.getBytes();
        boolean boolean51 = byteOrderMark9.equals((java.lang.Object) byteOrderMark15);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str46, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UTF-32BE" + "'", str47, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 4 + "'", int48 == 4);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 4 + "'", int49 == 4);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        java.lang.Class<?> wildcardClass26 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray21 = byteOrderMark20.getBytes();
        java.lang.String str22 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int25 = byteOrderMark23.get((int) (byte) 0);
        byte[] byteArray26 = byteOrderMark23.getBytes();
        byte[] byteArray27 = byteOrderMark23.getBytes();
        boolean boolean28 = byteOrderMark20.equals((java.lang.Object) byteOrderMark23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int31 = byteOrderMark29.get(0);
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj34 = null;
        boolean boolean35 = byteOrderMark33.equals(obj34);
        int int36 = byteOrderMark33.length();
        boolean boolean38 = byteOrderMark33.equals((java.lang.Object) 0L);
        int int39 = byteOrderMark33.length();
        boolean boolean40 = byteOrderMark29.equals((java.lang.Object) int39);
        int int42 = byteOrderMark29.get(0);
        boolean boolean43 = byteOrderMark20.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean46 = byteOrderMark44.equals((java.lang.Object) (-1L));
        java.lang.String str47 = byteOrderMark44.toString();
        byte[] byteArray48 = byteOrderMark44.getBytes();
        java.lang.Class<?> wildcardClass49 = byteArray48.getClass();
        boolean boolean50 = byteOrderMark20.equals((java.lang.Object) wildcardClass49);
        boolean boolean51 = byteOrderMark19.equals((java.lang.Object) byteOrderMark20);
        byte[] byteArray52 = byteOrderMark19.getBytes();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-32BE" + "'", str22, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 239 + "'", int25 == 239);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 255 + "'", int31 == 255);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 255 + "'", int42 == 255);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteOrderMark44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str47, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[10, 97, 35]");
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        java.lang.String str13 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int16 = byteOrderMark14.get((int) (byte) 0);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int33 = byteOrderMark32.length();
        boolean boolean34 = byteOrderMark14.equals((java.lang.Object) byteOrderMark32);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray44);
        boolean boolean51 = byteOrderMark14.equals((java.lang.Object) intArray44);
        boolean boolean52 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.Class<?> wildcardClass53 = byteOrderMark14.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 239 + "'", int16 == 239);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        java.lang.String str12 = byteOrderMark11.getCharsetName();
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark11.equals(obj13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean17 = byteOrderMark15.equals((java.lang.Object) 1L);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        int int19 = byteOrderMark15.length();
        java.lang.String str20 = byteOrderMark15.getCharsetName();
        java.lang.String str21 = byteOrderMark15.toString();
        java.lang.Class<?> wildcardClass22 = byteOrderMark15.getClass();
        boolean boolean23 = byteOrderMark11.equals((java.lang.Object) byteOrderMark15);
        int int24 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-32BE" + "'", str12, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16LE" + "'", str20, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str21, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        java.lang.String str5 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int8 = byteOrderMark6.get((int) (byte) 0);
        byte[] byteArray9 = byteOrderMark6.getBytes();
        byte[] byteArray10 = byteOrderMark6.getBytes();
        boolean boolean11 = byteOrderMark3.equals((java.lang.Object) byteOrderMark6);
        boolean boolean13 = byteOrderMark6.equals((java.lang.Object) '\ufeff');
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray25);
        boolean boolean34 = byteOrderMark6.equals((java.lang.Object) intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xA,0x61,0x23]", intArray25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("", intArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 239 + "'", int8 == 239);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int1 = byteOrderMark0.length();
        int int3 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) 1L);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        int int10 = byteOrderMark6.length();
        java.lang.String str11 = byteOrderMark6.toString();
        byte[] byteArray12 = byteOrderMark6.getBytes();
        byte[] byteArray13 = byteOrderMark6.getBytes();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) byteArray13);
        java.lang.String str15 = byteOrderMark0.getCharsetName();
        int int16 = byteOrderMark0.length();
        byte[] byteArray17 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 2 + "'", int1 == 2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 254 + "'", int3 == 254);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16BE" + "'", str15, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-2, -1]");
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        int int8 = byteOrderMark0.length();
        int int10 = byteOrderMark0.get((int) (short) 1);
        java.lang.Class<?> wildcardClass11 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 255 + "'", int10 == 255);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int18 = byteOrderMark16.get(0);
        boolean boolean20 = byteOrderMark16.equals((java.lang.Object) (short) 0);
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        boolean boolean31 = byteOrderMark16.equals((java.lang.Object) byteOrderMark30);
        java.lang.String str32 = byteOrderMark30.toString();
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) byteOrderMark30);
        byte[] byteArray34 = byteOrderMark30.getBytes();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 255 + "'", int18 == 255);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[10, 97, 35]");
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xFF]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        int int12 = byteOrderMark11.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int18 = byteOrderMark16.get((int) (byte) 0);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        byte[] byteArray20 = byteOrderMark16.getBytes();
        boolean boolean21 = byteOrderMark13.equals((java.lang.Object) byteOrderMark16);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        boolean boolean38 = byteOrderMark13.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        java.lang.Class<?> wildcardClass41 = byteOrderMark39.getClass();
        boolean boolean42 = byteOrderMark13.equals((java.lang.Object) wildcardClass41);
        int int43 = byteOrderMark13.length();
        int int44 = byteOrderMark13.length();
        boolean boolean45 = byteOrderMark11.equals((java.lang.Object) byteOrderMark13);
        java.lang.String str46 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-32BE" + "'", str15, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 239 + "'", int18 == 239);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16LE" + "'", str40, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str46, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        byte[] byteArray16 = byteOrderMark13.getBytes();
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str15, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str17, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.String str7 = byteOrderMark0.toString();
        java.lang.String str8 = byteOrderMark0.toString();
        java.lang.String str9 = byteOrderMark0.toString();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str7, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        java.lang.String str12 = byteOrderMark9.toString();
        java.lang.String str13 = byteOrderMark9.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = byteOrderMark9.get(254);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 254 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.toString();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        byte[] byteArray26 = byteOrderMark25.getBytes();
        int int27 = byteOrderMark25.length();
        java.lang.String str28 = byteOrderMark25.toString();
        byte[] byteArray29 = byteOrderMark25.getBytes();
        boolean boolean30 = byteOrderMark5.equals((java.lang.Object) byteArray29);
        int[] intArray43 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray43);
        boolean boolean53 = byteOrderMark5.equals((java.lang.Object) intArray43);
        int int54 = byteOrderMark5.length();
        java.lang.String str55 = byteOrderMark5.toString();
        java.lang.String str56 = byteOrderMark5.toString();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str55, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str56, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str27 = byteOrderMark13.getCharsetName();
        int int29 = byteOrderMark13.get((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int31 = byteOrderMark13.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-32BE" + "'", str27, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 97 + "'", int29 == 97);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) wildcardClass40);
        java.lang.String str42 = byteOrderMark0.getCharsetName();
        int int43 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int45 = byteOrderMark0.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-32BE" + "'", str42, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        int int17 = byteOrderMark15.get(2);
        byte[] byteArray18 = byteOrderMark15.getBytes();
        int int19 = byteOrderMark15.length();
        java.lang.Class<?> wildcardClass20 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray10);
        java.lang.Class<?> wildcardClass18 = intArray10.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        int int17 = byteOrderMark16.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        java.lang.Object obj25 = null;
        boolean boolean26 = byteOrderMark23.equals(obj25);
        boolean boolean27 = byteOrderMark16.equals(obj25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean30 = byteOrderMark28.equals((java.lang.Object) (-1L));
        java.lang.String str31 = byteOrderMark28.getCharsetName();
        java.lang.String str32 = byteOrderMark28.getCharsetName();
        java.lang.String str33 = byteOrderMark28.getCharsetName();
        boolean boolean34 = byteOrderMark16.equals((java.lang.Object) byteOrderMark28);
        boolean boolean35 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str36 = byteOrderMark28.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray16);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int10 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean13 = byteOrderMark11.equals((java.lang.Object) 1L);
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        int int15 = byteOrderMark11.length();
        java.lang.String str16 = byteOrderMark11.toString();
        java.lang.String str17 = byteOrderMark11.getCharsetName();
        java.lang.String str18 = byteOrderMark11.getCharsetName();
        boolean boolean19 = byteOrderMark0.equals((java.lang.Object) byteOrderMark11);
        int int20 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 4 + "'", int10 == 4);
        org.junit.Assert.assertNotNull(byteOrderMark11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str16, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        java.lang.String str22 = byteOrderMark20.toString();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        java.lang.Class<?> wildcardClass24 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) 1L);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        int int18 = byteOrderMark14.length();
        boolean boolean19 = byteOrderMark9.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray20 = byteOrderMark14.getBytes();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray31);
        java.lang.String str39 = byteOrderMark38.toString();
        java.lang.String str40 = byteOrderMark38.toString();
        boolean boolean41 = byteOrderMark14.equals((java.lang.Object) byteOrderMark38);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]" + "'", str39, "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int int15 = byteOrderMark13.get(0);
        int int16 = byteOrderMark13.length();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean3 = byteOrderMark1.equals((java.lang.Object) 1L);
        java.lang.String str4 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean6 = byteOrderMark1.equals((java.lang.Object) byteOrderMark5);
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        int int9 = byteOrderMark5.length();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        boolean boolean26 = byteOrderMark5.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray19);
        byte[] byteArray28 = byteOrderMark27.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int48 = byteOrderMark30.get(2);
        java.lang.String str49 = byteOrderMark30.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark50.equals(obj51);
        int int53 = byteOrderMark50.length();
        boolean boolean55 = byteOrderMark50.equals((java.lang.Object) 0L);
        int int56 = byteOrderMark50.length();
        int int57 = byteOrderMark50.length();
        int[] intArray64 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        boolean boolean68 = byteOrderMark50.equals((java.lang.Object) intArray64);
        byte[] byteArray69 = byteOrderMark50.getBytes();
        int int70 = byteOrderMark50.length();
        java.lang.String str71 = byteOrderMark50.getCharsetName();
        int int72 = byteOrderMark50.length();
        java.lang.String str73 = byteOrderMark50.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj75 = null;
        boolean boolean76 = byteOrderMark74.equals(obj75);
        int int77 = byteOrderMark74.length();
        boolean boolean79 = byteOrderMark74.equals((java.lang.Object) 0L);
        int int80 = byteOrderMark74.length();
        boolean boolean82 = byteOrderMark74.equals((java.lang.Object) 3);
        java.lang.String str83 = byteOrderMark74.getCharsetName();
        java.lang.String str84 = byteOrderMark74.getCharsetName();
        java.lang.String str85 = byteOrderMark74.toString();
        byte[] byteArray86 = byteOrderMark74.getBytes();
        java.lang.Class<?> wildcardClass87 = byteOrderMark74.getClass();
        boolean boolean88 = byteOrderMark50.equals((java.lang.Object) byteOrderMark74);
        byte[] byteArray89 = byteOrderMark74.getBytes();
        boolean boolean90 = byteOrderMark30.equals((java.lang.Object) byteOrderMark74);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 35 + "'", int48 == 35);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str49, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-16BE" + "'", str71, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str73, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "UTF-16BE" + "'", str83, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UTF-16BE" + "'", str84, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str85, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[-2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(byteArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray89), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str16 = byteOrderMark14.toString();
        java.lang.String str17 = byteOrderMark14.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) 0L);
        int int18 = byteOrderMark12.length();
        int int19 = byteOrderMark12.length();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) intArray26);
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray38);
        int int43 = byteOrderMark42.length();
        boolean boolean44 = byteOrderMark12.equals((java.lang.Object) byteOrderMark42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int47 = byteOrderMark45.get(0);
        boolean boolean49 = byteOrderMark45.equals((java.lang.Object) (short) 0);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        boolean boolean60 = byteOrderMark45.equals((java.lang.Object) byteOrderMark59);
        boolean boolean61 = byteOrderMark12.equals((java.lang.Object) byteOrderMark45);
        byte[] byteArray62 = byteOrderMark45.getBytes();
        boolean boolean63 = byteOrderMark5.equals((java.lang.Object) byteArray62);
        int[] intArray71 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("hi!", intArray71);
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray71);
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray71);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray71);
        int int76 = byteOrderMark75.length();
        boolean boolean77 = byteOrderMark5.equals((java.lang.Object) byteOrderMark75);
        java.lang.String str78 = byteOrderMark5.getCharsetName();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 255 + "'", int47 == 255);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 3 + "'", int76 == 3);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray21);
        boolean boolean24 = byteOrderMark14.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        java.lang.String str25 = byteOrderMark14.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean11 = byteOrderMark9.equals((java.lang.Object) 1L);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        int int13 = byteOrderMark9.length();
        boolean boolean15 = byteOrderMark9.equals((java.lang.Object) (byte) -1);
        byte[] byteArray16 = byteOrderMark9.getBytes();
        java.lang.String str17 = byteOrderMark9.getCharsetName();
        byte[] byteArray18 = byteOrderMark9.getBytes();
        boolean boolean19 = byteOrderMark0.equals((java.lang.Object) byteArray18);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark0.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        byte[] byteArray24 = byteOrderMark23.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = byteOrderMark23.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        int[] intArray8 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray8);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 254]");
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray5);
        java.lang.Class<?> wildcardClass8 = byteOrderMark7.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray13);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        java.lang.String str25 = byteOrderMark23.getCharsetName();
        java.lang.Class<?> wildcardClass26 = byteOrderMark23.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[hi!: 0xFF,0x0,0xFE]" + "'", str24, "ByteOrderMark[hi!: 0xFF,0x0,0xFE]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[hi!: 0xFF,0x0,0xFE]" + "'", str25, "ByteOrderMark[hi!: 0xFF,0x0,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int9 = byteOrderMark7.get((int) (byte) 1);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 97 + "'", int9 == 97);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int13 = byteOrderMark11.get((int) (short) 1);
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        java.lang.String str15 = byteOrderMark11.toString();
        byte[] byteArray16 = byteOrderMark11.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = byteOrderMark11.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray32);
        byte[] byteArray42 = byteOrderMark41.getBytes();
        boolean boolean43 = byteOrderMark19.equals((java.lang.Object) byteArray42);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int6 = byteOrderMark0.length();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray18);
        boolean boolean27 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray5);
        // The following exception was thrown during execution in test generation
        try {
            int int9 = byteOrderMark7.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        byte[] byteArray19 = byteOrderMark17.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj21 = null;
        boolean boolean22 = byteOrderMark20.equals(obj21);
        int int23 = byteOrderMark20.length();
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) 0L);
        int int26 = byteOrderMark20.length();
        int int27 = byteOrderMark20.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        boolean boolean38 = byteOrderMark20.equals((java.lang.Object) intArray34);
        boolean boolean39 = byteOrderMark17.equals((java.lang.Object) intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray34);
        int int47 = byteOrderMark45.get(1);
        byte[] byteArray48 = byteOrderMark45.getBytes();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 97 + "'", int47 == 97);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[10, 97, 35]");
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        java.lang.String str13 = byteOrderMark11.getCharsetName();
        java.lang.String str14 = byteOrderMark11.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark11.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark23.length();
        int int27 = byteOrderMark23.get((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = byteOrderMark23.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        int int9 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj11 = null;
        boolean boolean12 = byteOrderMark10.equals(obj11);
        int int13 = byteOrderMark10.length();
        java.lang.String str14 = byteOrderMark10.getCharsetName();
        byte[] byteArray15 = byteOrderMark10.getBytes();
        boolean boolean16 = byteOrderMark4.equals((java.lang.Object) byteArray15);
        java.lang.String str17 = byteOrderMark4.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str17, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        java.lang.String str30 = byteOrderMark29.toString();
        java.lang.String str31 = byteOrderMark29.getCharsetName();
        int int32 = byteOrderMark29.length();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str31, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark0.getBytes();
        byte[] byteArray17 = byteOrderMark0.getBytes();
        java.lang.String str18 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        java.lang.String str27 = byteOrderMark23.getCharsetName();
        int int28 = byteOrderMark23.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray30 = byteOrderMark29.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean33 = byteOrderMark31.equals((java.lang.Object) 1L);
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean36 = byteOrderMark31.equals((java.lang.Object) byteOrderMark35);
        boolean boolean37 = byteOrderMark29.equals((java.lang.Object) byteOrderMark31);
        java.lang.String str38 = byteOrderMark31.toString();
        boolean boolean39 = byteOrderMark23.equals((java.lang.Object) str38);
        boolean boolean40 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int42 = byteOrderMark23.get(0);
        java.lang.String str43 = byteOrderMark23.toString();
        java.lang.Class<?> wildcardClass44 = byteOrderMark23.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16BE" + "'", str27, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str38, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 254 + "'", int42 == 254);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str43, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean4 = byteOrderMark2.equals((java.lang.Object) 1L);
        java.lang.String str5 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean7 = byteOrderMark2.equals((java.lang.Object) byteOrderMark6);
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark2);
        java.lang.String str9 = byteOrderMark2.getCharsetName();
        int int11 = byteOrderMark2.get(0);
        java.lang.String str12 = byteOrderMark2.toString();
        byte[] byteArray13 = byteOrderMark2.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str12, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        java.lang.String str17 = byteOrderMark13.toString();
        byte[] byteArray18 = byteOrderMark13.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark13.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 100 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("", intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        java.lang.Class<?> wildcardClass10 = byteArray9.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) 0L);
        int int18 = byteOrderMark12.length();
        int int19 = byteOrderMark12.length();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) intArray26);
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray38);
        int int43 = byteOrderMark42.length();
        boolean boolean44 = byteOrderMark12.equals((java.lang.Object) byteOrderMark42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean47 = byteOrderMark45.equals((java.lang.Object) 1L);
        java.lang.String str48 = byteOrderMark45.getCharsetName();
        int int49 = byteOrderMark45.length();
        boolean boolean51 = byteOrderMark45.equals((java.lang.Object) (byte) -1);
        byte[] byteArray52 = byteOrderMark45.getBytes();
        java.lang.String str53 = byteOrderMark45.getCharsetName();
        java.lang.String str54 = byteOrderMark45.getCharsetName();
        java.lang.String str55 = byteOrderMark45.toString();
        int int56 = byteOrderMark45.length();
        int int57 = byteOrderMark45.length();
        boolean boolean58 = byteOrderMark42.equals((java.lang.Object) byteOrderMark45);
        int int59 = byteOrderMark42.length();
        java.lang.String str60 = byteOrderMark42.getCharsetName();
        boolean boolean61 = byteOrderMark0.equals((java.lang.Object) byteOrderMark42);
        java.lang.String str62 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-16LE" + "'", str48, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-16LE" + "'", str53, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str55, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str60, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UTF-16LE" + "'", str62, "UTF-16LE");
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xFF]", intArray13);
        int int24 = byteOrderMark23.length();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        int[] intArray28 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray28);
        boolean boolean40 = byteOrderMark13.equals((java.lang.Object) intArray28);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) 1L);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        int int10 = byteOrderMark6.length();
        boolean boolean12 = byteOrderMark6.equals((java.lang.Object) (byte) -1);
        byte[] byteArray13 = byteOrderMark6.getBytes();
        java.lang.String str14 = byteOrderMark6.getCharsetName();
        java.lang.String str15 = byteOrderMark6.getCharsetName();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray23);
        boolean boolean28 = byteOrderMark6.equals((java.lang.Object) byteOrderMark27);
        java.lang.String str29 = byteOrderMark27.getCharsetName();
        int int31 = byteOrderMark27.get((int) (short) 0);
        java.lang.String str32 = byteOrderMark27.toString();
        byte[] byteArray33 = byteOrderMark27.getBytes();
        boolean boolean34 = byteOrderMark5.equals((java.lang.Object) byteArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = byteOrderMark5.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.toString();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xFF]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray26);
        boolean boolean38 = byteOrderMark11.equals((java.lang.Object) intArray26);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray6);
        int int10 = byteOrderMark9.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        int int16 = byteOrderMark13.length();
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        byte[] byteArray18 = byteOrderMark13.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16BE" + "'", str17, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        boolean boolean16 = byteOrderMark12.equals((java.lang.Object) (short) 0);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int33 = byteOrderMark32.length();
        java.lang.String str34 = byteOrderMark32.toString();
        boolean boolean35 = byteOrderMark12.equals((java.lang.Object) str34);
        int int36 = byteOrderMark12.length();
        boolean boolean37 = byteOrderMark5.equals((java.lang.Object) int36);
        int int38 = byteOrderMark5.length();
        java.lang.Class<?> wildcardClass39 = byteOrderMark5.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass5 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        byte[] byteArray4 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) (-1L));
        java.lang.String str8 = byteOrderMark5.toString();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.getCharsetName();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        boolean boolean18 = byteOrderMark5.equals((java.lang.Object) "hi!");
        java.lang.String str19 = byteOrderMark5.toString();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark5);
        java.lang.Class<?> wildcardClass21 = byteOrderMark5.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str8, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.String str9 = byteOrderMark7.toString();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        int int11 = byteOrderMark7.length();
        int int12 = byteOrderMark7.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean15 = byteOrderMark13.equals((java.lang.Object) 1L);
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        int int17 = byteOrderMark13.length();
        java.lang.String str18 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) 1L);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) byteOrderMark24);
        byte[] byteArray26 = byteOrderMark24.getBytes();
        int int27 = byteOrderMark24.length();
        int int28 = byteOrderMark24.length();
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        boolean boolean45 = byteOrderMark24.equals((java.lang.Object) intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        boolean boolean47 = byteOrderMark13.equals((java.lang.Object) intArray38);
        boolean boolean48 = byteOrderMark7.equals((java.lang.Object) boolean47);
        java.lang.String str49 = byteOrderMark7.getCharsetName();
        java.lang.String str50 = byteOrderMark7.getCharsetName();
        int int51 = byteOrderMark7.length();
        java.lang.String str52 = byteOrderMark7.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int55 = byteOrderMark53.get(0);
        int[] intArray60 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        int int62 = byteOrderMark61.length();
        java.lang.Class<?> wildcardClass63 = byteOrderMark61.getClass();
        boolean boolean64 = byteOrderMark53.equals((java.lang.Object) wildcardClass63);
        int int65 = byteOrderMark53.length();
        byte[] byteArray66 = byteOrderMark53.getBytes();
        byte[] byteArray67 = byteOrderMark53.getBytes();
        boolean boolean68 = byteOrderMark7.equals((java.lang.Object) byteOrderMark53);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-16LE" + "'", str49, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16LE" + "'", str50, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str52, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 255 + "'", int55 == 255);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 3 + "'", int62 == 3);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        byte[] byteArray23 = byteOrderMark21.getBytes();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        int int13 = byteOrderMark12.length();
        java.lang.String str14 = byteOrderMark12.getCharsetName();
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.toString();
        java.lang.String str17 = byteOrderMark12.toString();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        boolean boolean32 = byteOrderMark12.equals((java.lang.Object) intArray26);
        boolean boolean33 = byteOrderMark0.equals((java.lang.Object) boolean32);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xFF]", intArray13);
        byte[] byteArray24 = byteOrderMark23.getBytes();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        int[] intArray4 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[239, 10]");
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        int[] intArray7 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        java.lang.Class<?> wildcardClass12 = intArray7.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str14 = byteOrderMark0.toString();
        java.lang.String str15 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        int int4 = byteOrderMark0.length();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark0.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray29);
        java.lang.String str36 = byteOrderMark35.toString();
        byte[] byteArray37 = byteOrderMark35.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str36, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 97, 35]");
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str43 = byteOrderMark42.toString();
        java.lang.String str44 = byteOrderMark42.toString();
        int int46 = byteOrderMark42.get(2);
        boolean boolean48 = byteOrderMark42.equals((java.lang.Object) (byte) 10);
        byte[] byteArray49 = byteOrderMark42.getBytes();
        boolean boolean50 = byteOrderMark41.equals((java.lang.Object) byteOrderMark42);
        java.lang.String str51 = byteOrderMark41.toString();
        boolean boolean52 = byteOrderMark19.equals((java.lang.Object) str51);
        int int53 = byteOrderMark19.length();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str43, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str44, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 254 + "'", int46 == 254);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str51, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray7);
        java.lang.Class<?> wildcardClass12 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        java.lang.String str24 = byteOrderMark23.toString();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) (-1L));
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        byte[] byteArray16 = byteOrderMark12.getBytes();
        boolean boolean17 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) boolean17);
        java.lang.String str19 = byteOrderMark0.getCharsetName();
        java.lang.String str20 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        byte[] byteArray19 = byteOrderMark0.getBytes();
        java.lang.String str20 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "UTF-16BE" + "'", str20, "UTF-16BE");
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        int[] intArray5 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]", intArray5);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0, 254]");
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        int int6 = byteOrderMark0.get((int) (short) 0);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.toString();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray16);
        byte[] byteArray24 = byteOrderMark23.getBytes();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str26 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str26, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark30.length();
        int int48 = byteOrderMark30.length();
        java.lang.String str49 = byteOrderMark30.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str49, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int10 = byteOrderMark0.length();
        java.lang.String str11 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        boolean boolean15 = byteOrderMark9.equals((java.lang.Object) "UTF-32BE");
        java.lang.String str16 = byteOrderMark9.getCharsetName();
        java.lang.String str17 = byteOrderMark9.getCharsetName();
        java.lang.String str18 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        int int15 = byteOrderMark13.length();
        int int16 = byteOrderMark13.length();
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) str17);
        java.lang.String str19 = byteOrderMark0.toString();
        byte[] byteArray20 = byteOrderMark0.getBytes();
        java.lang.String str21 = byteOrderMark0.toString();
        byte[] byteArray22 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-2, -1]");
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj17 = null;
        boolean boolean18 = byteOrderMark16.equals(obj17);
        byte[] byteArray19 = byteOrderMark16.getBytes();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        java.lang.String str23 = byteOrderMark15.getCharsetName();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        byte[] byteArray22 = byteOrderMark21.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = byteOrderMark21.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        java.lang.String str17 = byteOrderMark13.toString();
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray25);
        java.lang.String str30 = byteOrderMark29.getCharsetName();
        java.lang.Object obj31 = null;
        boolean boolean32 = byteOrderMark29.equals(obj31);
        byte[] byteArray33 = byteOrderMark29.getBytes();
        boolean boolean34 = byteOrderMark13.equals((java.lang.Object) byteOrderMark29);
        java.lang.Class<?> wildcardClass35 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-32BE" + "'", str30, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass7 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int9 = byteOrderMark8.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark8.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) wildcardClass10);
        int int12 = byteOrderMark0.length();
        java.lang.String str13 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int16 = byteOrderMark14.get(0);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray19 = byteOrderMark14.getBytes();
        java.lang.String str20 = byteOrderMark14.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str13, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 255 + "'", int16 == 255);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str20, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray19);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) (-1L));
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        byte[] byteArray16 = byteOrderMark12.getBytes();
        boolean boolean17 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) boolean17);
        java.lang.String str19 = byteOrderMark0.getCharsetName();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        java.lang.String str22 = byteOrderMark0.getCharsetName();
        byte[] byteArray23 = byteOrderMark0.getBytes();
        int int24 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16BE" + "'", str22, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int10 = byteOrderMark0.length();
        byte[] byteArray11 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int13 = byteOrderMark0.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -2]");
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray11);
        java.lang.Class<?> wildcardClass20 = intArray11.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str31 = byteOrderMark30.toString();
        java.lang.String str32 = byteOrderMark30.toString();
        int int34 = byteOrderMark30.get(2);
        java.lang.String str35 = byteOrderMark30.toString();
        int int37 = byteOrderMark30.get(1);
        byte[] byteArray38 = byteOrderMark30.getBytes();
        java.lang.String str39 = byteOrderMark30.toString();
        java.lang.String str40 = byteOrderMark30.toString();
        java.lang.String str41 = byteOrderMark30.toString();
        java.lang.String str42 = byteOrderMark30.getCharsetName();
        boolean boolean43 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteOrderMark30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str32, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 254 + "'", int34 == 254);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str35, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str39, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str40, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str41, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-32BE" + "'", str42, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) 1.0f);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str22 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.toString();
        int int9 = byteOrderMark0.get((int) (short) 0);
        int int10 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 255 + "'", int9 == 255);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray10 = byteOrderMark4.getBytes();
        byte[] byteArray11 = byteOrderMark4.getBytes();
        java.lang.Class<?> wildcardClass12 = byteArray11.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        int[] intArray3 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray3);
        byte[] byteArray6 = byteOrderMark5.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark5.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[255]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1]");
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        byte[] byteArray9 = byteOrderMark3.getBytes();
        java.lang.String str10 = byteOrderMark3.toString();
        java.lang.String str11 = byteOrderMark3.toString();
        java.lang.String str12 = byteOrderMark3.toString();
        int int13 = byteOrderMark3.length();
        int int14 = byteOrderMark3.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str10, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str11, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str12, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        java.lang.String str9 = byteOrderMark5.toString();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        int int28 = byteOrderMark13.get((int) (short) 0);
        java.lang.String str29 = byteOrderMark13.toString();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str29, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        java.lang.Class<?> wildcardClass22 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        int int21 = byteOrderMark19.get(2);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 35 + "'", int21 == 35);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.String str19 = byteOrderMark17.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean36 = byteOrderMark17.equals((java.lang.Object) "hi!");
        java.lang.Class<?> wildcardClass37 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean18 = byteOrderMark16.equals((java.lang.Object) 1L);
        java.lang.String str19 = byteOrderMark16.getCharsetName();
        int int20 = byteOrderMark16.length();
        java.lang.String str21 = byteOrderMark16.getCharsetName();
        byte[] byteArray22 = byteOrderMark16.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean25 = byteOrderMark23.equals((java.lang.Object) (-1L));
        java.lang.String str26 = byteOrderMark23.getCharsetName();
        java.lang.String str27 = byteOrderMark23.getCharsetName();
        java.lang.String str28 = byteOrderMark23.getCharsetName();
        java.lang.String str29 = byteOrderMark23.getCharsetName();
        boolean boolean30 = byteOrderMark16.equals((java.lang.Object) str29);
        boolean boolean31 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-16LE" + "'", str28, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16LE" + "'", str29, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str5 = byteOrderMark4.toString();
        java.lang.String str6 = byteOrderMark4.toString();
        int int8 = byteOrderMark4.get(2);
        boolean boolean10 = byteOrderMark4.equals((java.lang.Object) (byte) 10);
        byte[] byteArray11 = byteOrderMark4.getBytes();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        boolean boolean28 = byteOrderMark4.equals((java.lang.Object) byteOrderMark27);
        byte[] byteArray29 = byteOrderMark27.getBytes();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteArray29);
        int int31 = byteOrderMark0.length();
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray39);
        java.lang.String str44 = byteOrderMark43.getCharsetName();
        java.lang.String str45 = byteOrderMark43.getCharsetName();
        boolean boolean46 = byteOrderMark0.equals((java.lang.Object) byteOrderMark43);
        // The following exception was thrown during execution in test generation
        try {
            int int48 = byteOrderMark43.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 254 + "'", int8 == 254);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-32BE" + "'", str44, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-32BE" + "'", str45, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray5);
        int int9 = byteOrderMark7.get(0);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        java.lang.String str29 = byteOrderMark27.toString();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str29, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        java.lang.String str20 = byteOrderMark19.toString();
        int int21 = byteOrderMark19.length();
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        int[] intArray26 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray26);
        java.lang.Class<?> wildcardClass28 = byteOrderMark27.getClass();
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark27);
        java.lang.String str30 = byteOrderMark27.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[255]");
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean21 = byteOrderMark3.equals((java.lang.Object) intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        byte[] byteArray25 = byteOrderMark24.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        int int19 = byteOrderMark17.length();
        byte[] byteArray20 = byteOrderMark17.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        int int9 = byteOrderMark0.length();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        byte[] byteArray11 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass12 = byteArray11.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 4 + "'", int9 == 4);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-32BE" + "'", str10, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        int int20 = byteOrderMark19.length();
        byte[] byteArray21 = byteOrderMark19.getBytes();
        byte[] byteArray22 = byteOrderMark19.getBytes();
        java.lang.String str23 = byteOrderMark19.getCharsetName();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) 1L);
        java.lang.String str27 = byteOrderMark24.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) byteOrderMark28);
        boolean boolean30 = byteOrderMark22.equals((java.lang.Object) byteOrderMark24);
        java.lang.Class<?> wildcardClass31 = byteOrderMark24.getClass();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) wildcardClass31);
        int[] intArray41 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray41);
        java.lang.Class<?> wildcardClass47 = byteOrderMark46.getClass();
        boolean boolean48 = byteOrderMark0.equals((java.lang.Object) wildcardClass47);
        java.lang.String str49 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str49, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray40);
        boolean boolean48 = byteOrderMark29.equals((java.lang.Object) byteOrderMark47);
        byte[] byteArray49 = byteOrderMark29.getBytes();
        java.lang.String str50 = byteOrderMark29.toString();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str50, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        int int9 = byteOrderMark4.length();
        byte[] byteArray10 = byteOrderMark4.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean13 = byteOrderMark11.equals((java.lang.Object) (-1L));
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int17 = byteOrderMark15.get(0);
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        boolean boolean20 = byteOrderMark11.equals((java.lang.Object) byteOrderMark15);
        byte[] byteArray21 = byteOrderMark15.getBytes();
        int int22 = byteOrderMark15.length();
        boolean boolean23 = byteOrderMark4.equals((java.lang.Object) int22);
        byte[] byteArray24 = byteOrderMark4.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 255 + "'", int17 == 255);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-2, -1]");
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray23);
        java.lang.String str31 = byteOrderMark30.getCharsetName();
        boolean boolean32 = byteOrderMark4.equals((java.lang.Object) byteOrderMark30);
        java.lang.String str33 = byteOrderMark4.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str31, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16BE" + "'", str33, "UTF-16BE");
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        int int4 = byteOrderMark0.length();
        int int5 = byteOrderMark0.length();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.String str7 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 3 + "'", int4 == 3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 3 + "'", int5 == 3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-8" + "'", str6, "UTF-8");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str7, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray29);
        int int37 = byteOrderMark35.get((int) (byte) 0);
        int[] intArray46 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray46);
        byte[] byteArray52 = byteOrderMark51.getBytes();
        int int53 = byteOrderMark51.length();
        java.lang.String str54 = byteOrderMark51.toString();
        int[] intArray60 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray60);
        byte[] byteArray63 = byteOrderMark62.getBytes();
        boolean boolean64 = byteOrderMark51.equals((java.lang.Object) byteOrderMark62);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str66 = byteOrderMark65.toString();
        java.lang.String str67 = byteOrderMark65.toString();
        int int69 = byteOrderMark65.get(2);
        boolean boolean71 = byteOrderMark65.equals((java.lang.Object) (byte) 10);
        boolean boolean72 = byteOrderMark51.equals((java.lang.Object) boolean71);
        byte[] byteArray73 = byteOrderMark51.getBytes();
        boolean boolean74 = byteOrderMark35.equals((java.lang.Object) byteOrderMark51);
        int int75 = byteOrderMark51.length();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str54, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(byteOrderMark65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str66, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str67, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 254 + "'", int69 == 254);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 3 + "'", int75 == 3);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.toString();
        int int9 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str10 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 255 + "'", int9 == 255);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray15);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.String str19 = byteOrderMark17.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        java.lang.String str24 = byteOrderMark22.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int27 = byteOrderMark25.get((int) (byte) 0);
        byte[] byteArray28 = byteOrderMark25.getBytes();
        byte[] byteArray29 = byteOrderMark25.getBytes();
        boolean boolean30 = byteOrderMark22.equals((java.lang.Object) byteOrderMark25);
        boolean boolean32 = byteOrderMark25.equals((java.lang.Object) '\ufeff');
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray44);
        boolean boolean53 = byteOrderMark25.equals((java.lang.Object) intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xA,0x61,0x23]", intArray44);
        java.lang.Object obj56 = null;
        boolean boolean57 = byteOrderMark55.equals(obj56);
        boolean boolean58 = byteOrderMark17.equals((java.lang.Object) byteOrderMark55);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-32BE" + "'", str24, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 239 + "'", int27 == 239);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        int[] intArray6 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray6);
        int[] intArray15 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        int int19 = byteOrderMark17.get((int) (short) 0);
        boolean boolean20 = byteOrderMark9.equals((java.lang.Object) (short) 0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0, 254]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray9);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int11 = byteOrderMark9.get(0);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj14 = null;
        boolean boolean15 = byteOrderMark13.equals(obj14);
        int int16 = byteOrderMark13.length();
        boolean boolean18 = byteOrderMark13.equals((java.lang.Object) 0L);
        int int19 = byteOrderMark13.length();
        boolean boolean20 = byteOrderMark9.equals((java.lang.Object) int19);
        int int22 = byteOrderMark9.get(0);
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) (-1L));
        java.lang.String str27 = byteOrderMark24.toString();
        byte[] byteArray28 = byteOrderMark24.getBytes();
        java.lang.Class<?> wildcardClass29 = byteArray28.getClass();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) wildcardClass29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj32 = null;
        boolean boolean33 = byteOrderMark31.equals(obj32);
        int int34 = byteOrderMark31.length();
        boolean boolean36 = byteOrderMark31.equals((java.lang.Object) 0L);
        int int37 = byteOrderMark31.length();
        boolean boolean39 = byteOrderMark31.equals((java.lang.Object) 3);
        java.lang.String str40 = byteOrderMark31.getCharsetName();
        java.lang.String str41 = byteOrderMark31.getCharsetName();
        boolean boolean42 = byteOrderMark0.equals((java.lang.Object) byteOrderMark31);
        byte[] byteArray43 = byteOrderMark0.getBytes();
        byte[] byteArray44 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass45 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 255 + "'", int22 == 255);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str27, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16BE" + "'", str40, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16BE" + "'", str41, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        int int16 = byteOrderMark13.length();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray30);
        java.lang.String str41 = byteOrderMark40.getCharsetName();
        boolean boolean42 = byteOrderMark13.equals((java.lang.Object) byteOrderMark40);
        java.lang.String str43 = byteOrderMark40.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16BE" + "'", str14, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16BE" + "'", str15, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[hi!: 0xFF,0x0,0xFE]" + "'", str41, "ByteOrderMark[hi!: 0xFF,0x0,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[hi!: 0xFF,0x0,0xFE]" + "'", str43, "ByteOrderMark[hi!: 0xFF,0x0,0xFE]");
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        boolean boolean38 = byteOrderMark18.equals((java.lang.Object) int37);
        byte[] byteArray39 = byteOrderMark18.getBytes();
        int int40 = byteOrderMark18.length();
        byte[] byteArray41 = byteOrderMark18.getBytes();
        java.lang.String str42 = byteOrderMark18.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 3 + "'", int40 == 3);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str42, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        boolean boolean43 = byteOrderMark20.equals((java.lang.Object) intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray33);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        int[] intArray4 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[239, 10]");
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xEF,0xA]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) 1L);
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        int int12 = byteOrderMark8.length();
        boolean boolean14 = byteOrderMark8.equals((java.lang.Object) (byte) -1);
        byte[] byteArray15 = byteOrderMark8.getBytes();
        java.lang.String str16 = byteOrderMark8.getCharsetName();
        java.lang.String str17 = byteOrderMark8.getCharsetName();
        java.lang.String str18 = byteOrderMark8.getCharsetName();
        boolean boolean19 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray20 = byteOrderMark4.getBytes();
        java.lang.String str21 = byteOrderMark4.toString();
        boolean boolean23 = byteOrderMark4.equals((java.lang.Object) "UTF-32BE");
        java.lang.String str24 = byteOrderMark4.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        byte[] byteArray12 = byteOrderMark9.getBytes();
        byte[] byteArray13 = byteOrderMark9.getBytes();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        int int9 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16BE" + "'", str6, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        int int20 = byteOrderMark19.length();
        byte[] byteArray21 = byteOrderMark19.getBytes();
        byte[] byteArray22 = byteOrderMark19.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = byteOrderMark19.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) 1.0d);
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        byte[] byteArray15 = byteOrderMark14.getBytes();
        byte[] byteArray16 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        boolean boolean22 = byteOrderMark17.equals((java.lang.Object) 0L);
        int int23 = byteOrderMark17.length();
        int int24 = byteOrderMark17.length();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) intArray31);
        boolean boolean36 = byteOrderMark14.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray31);
        java.lang.String str40 = byteOrderMark39.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int42 = byteOrderMark39.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int11 = byteOrderMark0.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 32 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-32BE" + "'", str6, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-32BE" + "'", str7, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16BE" + "'", str17, "UTF-16BE");
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        java.lang.String str13 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int16 = byteOrderMark14.get((int) (byte) 0);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int33 = byteOrderMark32.length();
        boolean boolean34 = byteOrderMark14.equals((java.lang.Object) byteOrderMark32);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray44);
        boolean boolean51 = byteOrderMark14.equals((java.lang.Object) intArray44);
        boolean boolean52 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int[] intArray66 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("hi!", intArray66);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray66);
        org.apache.commons.io.ByteOrderMark byteOrderMark69 = new org.apache.commons.io.ByteOrderMark("hi!", intArray66);
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray66);
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = new org.apache.commons.io.ByteOrderMark("hi!", intArray66);
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray66);
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray66);
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray66);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray66);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray66);
        boolean boolean77 = byteOrderMark14.equals((java.lang.Object) "UTF-8");
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 239 + "'", int16 == 239);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        int[] intArray5 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj9 = null;
        boolean boolean10 = byteOrderMark8.equals(obj9);
        int int11 = byteOrderMark8.length();
        boolean boolean13 = byteOrderMark8.equals((java.lang.Object) 0L);
        int int14 = byteOrderMark8.length();
        int int15 = byteOrderMark8.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        boolean boolean26 = byteOrderMark8.equals((java.lang.Object) intArray22);
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray34);
        int int39 = byteOrderMark38.length();
        boolean boolean40 = byteOrderMark8.equals((java.lang.Object) byteOrderMark38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int43 = byteOrderMark41.get(0);
        boolean boolean45 = byteOrderMark41.equals((java.lang.Object) (short) 0);
        int[] intArray52 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray52);
        boolean boolean56 = byteOrderMark41.equals((java.lang.Object) byteOrderMark55);
        boolean boolean57 = byteOrderMark8.equals((java.lang.Object) byteOrderMark41);
        byte[] byteArray58 = byteOrderMark41.getBytes();
        java.lang.Object obj59 = null;
        boolean boolean60 = byteOrderMark41.equals(obj59);
        int[] intArray67 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("hi!", intArray67);
        org.apache.commons.io.ByteOrderMark byteOrderMark69 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray67);
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray67);
        java.lang.String str71 = byteOrderMark70.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = org.apache.commons.io.ByteOrderMark.UTF_8;
        byte[] byteArray73 = byteOrderMark72.getBytes();
        boolean boolean74 = byteOrderMark70.equals((java.lang.Object) byteArray73);
        boolean boolean75 = byteOrderMark41.equals((java.lang.Object) byteOrderMark70);
        boolean boolean76 = byteOrderMark7.equals((java.lang.Object) byteOrderMark41);
        java.lang.Class<?> wildcardClass77 = byteOrderMark7.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 3 + "'", int39 == 3);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteOrderMark41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 255 + "'", int43 == 255);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str71, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark72);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        int int8 = byteOrderMark4.length();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        boolean boolean29 = byteOrderMark4.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        byte[] byteArray30 = byteOrderMark4.getBytes();
        byte[] byteArray31 = byteOrderMark4.getBytes();
        int int32 = byteOrderMark4.length();
        // The following exception was thrown during execution in test generation
        try {
            int int34 = byteOrderMark4.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        java.lang.String str3 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-32LE: 0xFF,0xFE,0x0,0x0]" + "'", str3, "ByteOrderMark[UTF-32LE: 0xFF,0xFE,0x0,0x0]");
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray7);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray7);
        java.lang.String str12 = byteOrderMark11.toString();
        java.lang.String str13 = byteOrderMark11.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str15 = byteOrderMark14.getCharsetName();
        int int16 = byteOrderMark14.length();
        byte[] byteArray17 = byteOrderMark14.getBytes();
        java.lang.String str18 = byteOrderMark14.toString();
        boolean boolean19 = byteOrderMark11.equals((java.lang.Object) str18);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int int10 = byteOrderMark0.length();
        byte[] byteArray11 = byteOrderMark0.getBytes();
        int int12 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int3 = byteOrderMark1.get((int) (byte) 0);
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        int int20 = byteOrderMark19.length();
        boolean boolean21 = byteOrderMark1.equals((java.lang.Object) byteOrderMark19);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        boolean boolean38 = byteOrderMark1.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str41 = byteOrderMark40.toString();
        java.lang.String str42 = byteOrderMark40.toString();
        int int44 = byteOrderMark40.get(2);
        boolean boolean46 = byteOrderMark40.equals((java.lang.Object) (byte) 10);
        byte[] byteArray47 = byteOrderMark40.getBytes();
        int[] intArray57 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("hi!", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray57);
        boolean boolean64 = byteOrderMark40.equals((java.lang.Object) byteOrderMark63);
        int int65 = byteOrderMark40.length();
        java.lang.String str66 = byteOrderMark40.getCharsetName();
        java.lang.String str67 = byteOrderMark40.toString();
        boolean boolean68 = byteOrderMark39.equals((java.lang.Object) byteOrderMark40);
        // The following exception was thrown during execution in test generation
        try {
            int int70 = byteOrderMark40.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 239 + "'", int3 == 239);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrderMark40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str41, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str42, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 254 + "'", int44 == 254);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 4 + "'", int65 == 4);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "UTF-32BE" + "'", str66, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str67, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        byte[] byteArray26 = byteOrderMark25.getBytes();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        int[] intArray1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark2 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No bytes specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0x0,0xA,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32LE: 0xFF,0xFE,0x0,0x0]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        int[] intArray3 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray3);
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray13);
        boolean boolean19 = byteOrderMark4.equals((java.lang.Object) byteOrderMark18);
        java.lang.String str20 = byteOrderMark4.getCharsetName();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[239, 10]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        int[] intArray6 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray6);
        int int10 = byteOrderMark9.length();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        byte[] byteArray18 = byteOrderMark15.getBytes();
        int int19 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        int int9 = byteOrderMark5.length();
        boolean boolean11 = byteOrderMark5.equals((java.lang.Object) (byte) -1);
        byte[] byteArray12 = byteOrderMark5.getBytes();
        java.lang.String str13 = byteOrderMark5.getCharsetName();
        byte[] byteArray14 = byteOrderMark5.getBytes();
        int int16 = byteOrderMark5.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray18 = byteOrderMark17.getBytes();
        java.lang.String str19 = byteOrderMark17.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int22 = byteOrderMark20.get((int) (byte) 0);
        byte[] byteArray23 = byteOrderMark20.getBytes();
        byte[] byteArray24 = byteOrderMark20.getBytes();
        boolean boolean25 = byteOrderMark17.equals((java.lang.Object) byteOrderMark20);
        boolean boolean26 = byteOrderMark5.equals((java.lang.Object) byteOrderMark17);
        boolean boolean27 = byteOrderMark0.equals((java.lang.Object) boolean26);
        byte[] byteArray28 = byteOrderMark0.getBytes();
        int[] intArray36 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray36);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray36);
        int int42 = byteOrderMark40.get((int) (byte) 0);
        java.lang.String str43 = byteOrderMark40.toString();
        java.lang.String str44 = byteOrderMark40.toString();
        boolean boolean45 = byteOrderMark0.equals((java.lang.Object) str44);
        int[] intArray58 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray58);
        byte[] byteArray68 = byteOrderMark67.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark69 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean71 = byteOrderMark69.equals((java.lang.Object) (-1L));
        java.lang.String str72 = byteOrderMark69.toString();
        boolean boolean73 = byteOrderMark67.equals((java.lang.Object) byteOrderMark69);
        int[] intArray85 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark86 = new org.apache.commons.io.ByteOrderMark("hi!", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark87 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark88 = new org.apache.commons.io.ByteOrderMark("hi!", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark89 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark90 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark91 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark92 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray85);
        org.apache.commons.io.ByteOrderMark byteOrderMark93 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray85);
        boolean boolean94 = byteOrderMark69.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        int int95 = byteOrderMark69.length();
        java.lang.String str96 = byteOrderMark69.getCharsetName();
        boolean boolean97 = byteOrderMark0.equals((java.lang.Object) byteOrderMark69);
        java.lang.String str98 = byteOrderMark69.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 255 + "'", int16 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-32BE" + "'", str19, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 239 + "'", int22 == 239);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str43, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str44, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str72, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 2 + "'", int95 == 2);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "UTF-16LE" + "'", str96, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str98, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray12);
        int int15 = byteOrderMark14.length();
        boolean boolean16 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.Class<?> wildcardClass17 = byteOrderMark14.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        byte[] byteArray18 = byteOrderMark15.getBytes();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        java.lang.String str20 = byteOrderMark15.getCharsetName();
        java.lang.String str21 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray10);
        java.lang.Class<?> wildcardClass18 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        byte[] byteArray28 = byteOrderMark21.getBytes();
        java.lang.String str29 = byteOrderMark21.getCharsetName();
        java.lang.String str30 = byteOrderMark21.toString();
        java.lang.Class<?> wildcardClass31 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16LE" + "'", str29, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str30, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        java.lang.String str8 = byteOrderMark0.toString();
        int int9 = byteOrderMark0.length();
        byte[] byteArray10 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass11 = byteArray10.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        int int5 = byteOrderMark3.length();
        int int6 = byteOrderMark3.length();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray18);
        boolean boolean27 = byteOrderMark3.equals((java.lang.Object) byteOrderMark26);
        java.lang.String str28 = byteOrderMark3.getCharsetName();
        byte[] byteArray29 = byteOrderMark3.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray34 = byteOrderMark33.getBytes();
        java.lang.String str35 = byteOrderMark33.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int38 = byteOrderMark36.get((int) (byte) 0);
        byte[] byteArray39 = byteOrderMark36.getBytes();
        byte[] byteArray40 = byteOrderMark36.getBytes();
        boolean boolean41 = byteOrderMark33.equals((java.lang.Object) byteOrderMark36);
        int[] intArray51 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("hi!", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray51);
        boolean boolean58 = byteOrderMark33.equals((java.lang.Object) intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray51);
        boolean boolean62 = byteOrderMark3.equals((java.lang.Object) intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray51);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 4 + "'", int5 == 4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-32BE" + "'", str28, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-32BE" + "'", str35, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 239 + "'", int38 == 239);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) str16);
        byte[] byteArray18 = byteOrderMark0.getBytes();
        int int20 = byteOrderMark0.get((int) (short) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16BE" + "'", str16, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 255 + "'", int20 == 255);
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        java.lang.String str8 = byteOrderMark4.toString();
        int int9 = byteOrderMark4.length();
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int12 = byteOrderMark0.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray23);
        java.lang.String str31 = byteOrderMark30.toString();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) str31);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]" + "'", str31, "ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        java.lang.String str13 = byteOrderMark11.toString();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) str16);
        byte[] byteArray18 = byteOrderMark0.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int20 = byteOrderMark0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16BE" + "'", str16, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -2]");
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj21 = null;
        boolean boolean22 = byteOrderMark20.equals(obj21);
        int int23 = byteOrderMark20.length();
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) 0L);
        int int26 = byteOrderMark20.length();
        boolean boolean28 = byteOrderMark20.equals((java.lang.Object) 3);
        java.lang.String str29 = byteOrderMark20.getCharsetName();
        java.lang.String str30 = byteOrderMark20.getCharsetName();
        java.lang.String str31 = byteOrderMark20.toString();
        byte[] byteArray32 = byteOrderMark20.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str34 = byteOrderMark33.getCharsetName();
        int int35 = byteOrderMark33.length();
        int int36 = byteOrderMark33.length();
        java.lang.String str37 = byteOrderMark33.getCharsetName();
        boolean boolean38 = byteOrderMark20.equals((java.lang.Object) str37);
        java.lang.String str39 = byteOrderMark20.toString();
        java.lang.Object obj40 = null;
        boolean boolean41 = byteOrderMark20.equals(obj40);
        int[] intArray53 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray53);
        boolean boolean62 = byteOrderMark20.equals((java.lang.Object) intArray53);
        boolean boolean63 = byteOrderMark19.equals((java.lang.Object) boolean62);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-16BE" + "'", str29, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16BE" + "'", str30, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str39, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        int int5 = byteOrderMark0.length();
        java.lang.String str6 = byteOrderMark0.toString();
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        int int9 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int int10 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        int[] intArray26 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray26);
        boolean boolean29 = byteOrderMark19.equals((java.lang.Object) byteOrderMark28);
        byte[] byteArray30 = byteOrderMark28.getBytes();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[0, 10, -1]");
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.get(0);
        java.lang.String str8 = byteOrderMark0.toString();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        byte[] byteArray21 = byteOrderMark20.getBytes();
        byte[] byteArray22 = byteOrderMark20.getBytes();
        byte[] byteArray23 = byteOrderMark20.getBytes();
        java.lang.String str24 = byteOrderMark20.toString();
        byte[] byteArray25 = byteOrderMark20.getBytes();
        boolean boolean26 = byteOrderMark0.equals((java.lang.Object) byteArray25);
        int int27 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str4, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        int int25 = byteOrderMark23.get((int) (byte) 1);
        java.lang.Class<?> wildcardClass26 = byteOrderMark23.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 97 + "'", int25 == 97);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        java.lang.Class<?> wildcardClass20 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.toString();
        byte[] byteArray12 = byteOrderMark5.getBytes();
        java.lang.String str13 = byteOrderMark5.toString();
        java.lang.String str14 = byteOrderMark5.toString();
        java.lang.Class<?> wildcardClass15 = byteOrderMark5.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        int int20 = byteOrderMark19.length();
        int int21 = byteOrderMark19.length();
        int int22 = byteOrderMark19.length();
        java.lang.String str23 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        java.lang.String str13 = byteOrderMark11.toString();
        int[] intArray19 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray19);
        boolean boolean22 = byteOrderMark11.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj24 = null;
        boolean boolean25 = byteOrderMark23.equals(obj24);
        int int26 = byteOrderMark23.length();
        boolean boolean28 = byteOrderMark23.equals((java.lang.Object) 0L);
        int int29 = byteOrderMark23.length();
        int int30 = byteOrderMark23.length();
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        boolean boolean41 = byteOrderMark23.equals((java.lang.Object) intArray37);
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray49);
        int int54 = byteOrderMark53.length();
        boolean boolean55 = byteOrderMark23.equals((java.lang.Object) byteOrderMark53);
        byte[] byteArray56 = byteOrderMark53.getBytes();
        java.lang.Class<?> wildcardClass57 = byteArray56.getClass();
        boolean boolean58 = byteOrderMark11.equals((java.lang.Object) byteArray56);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray5);
        int int8 = byteOrderMark7.length();
        java.lang.Object obj9 = null;
        boolean boolean10 = byteOrderMark7.equals(obj9);
        int int11 = byteOrderMark7.length();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        int int15 = byteOrderMark13.length();
        int int16 = byteOrderMark13.length();
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) str17);
        java.lang.String str19 = byteOrderMark0.toString();
        byte[] byteArray20 = byteOrderMark0.getBytes();
        int int21 = byteOrderMark0.length();
        int int22 = byteOrderMark0.length();
        int int23 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) (-1L));
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.getCharsetName();
        boolean boolean27 = byteOrderMark9.equals((java.lang.Object) byteOrderMark21);
        byte[] byteArray28 = byteOrderMark9.getBytes();
        java.lang.String str29 = byteOrderMark9.toString();
        java.lang.String str30 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UTF-16LE" + "'", str26, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str29, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) (-1L));
        java.lang.String str22 = byteOrderMark19.toString();
        byte[] byteArray23 = byteOrderMark19.getBytes();
        byte[] byteArray24 = byteOrderMark19.getBytes();
        java.lang.String str25 = byteOrderMark19.getCharsetName();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean32 = byteOrderMark19.equals((java.lang.Object) "hi!");
        boolean boolean33 = byteOrderMark13.equals((java.lang.Object) byteOrderMark19);
        java.lang.String str34 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray36 = byteOrderMark35.getBytes();
        int int37 = byteOrderMark35.length();
        java.lang.String str38 = byteOrderMark35.getCharsetName();
        byte[] byteArray39 = byteOrderMark35.getBytes();
        boolean boolean40 = byteOrderMark13.equals((java.lang.Object) byteArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj42 = null;
        boolean boolean43 = byteOrderMark41.equals(obj42);
        int int44 = byteOrderMark41.length();
        boolean boolean46 = byteOrderMark41.equals((java.lang.Object) 0L);
        int int47 = byteOrderMark41.length();
        boolean boolean49 = byteOrderMark41.equals((java.lang.Object) 3);
        java.lang.String str50 = byteOrderMark41.getCharsetName();
        java.lang.String str51 = byteOrderMark41.getCharsetName();
        java.lang.String str52 = byteOrderMark41.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray54 = byteOrderMark53.getBytes();
        int int55 = byteOrderMark53.length();
        int[] intArray63 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("hi!", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray63);
        java.lang.String str68 = byteOrderMark67.toString();
        int int69 = byteOrderMark67.length();
        boolean boolean70 = byteOrderMark53.equals((java.lang.Object) int69);
        int int71 = byteOrderMark53.length();
        java.lang.String str72 = byteOrderMark53.toString();
        boolean boolean73 = byteOrderMark41.equals((java.lang.Object) str72);
        boolean boolean74 = byteOrderMark13.equals((java.lang.Object) boolean73);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UTF-16LE" + "'", str38, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteOrderMark41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2 + "'", int47 == 2);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16BE" + "'", str50, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "UTF-16BE" + "'", str51, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str52, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark53);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 4 + "'", int55 == 4);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str68, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 3 + "'", int69 == 3);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 4 + "'", int71 == 4);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str72, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        int int14 = byteOrderMark9.length();
        java.lang.Class<?> wildcardClass15 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.Class<?> wildcardClass25 = byteOrderMark24.getClass();
        boolean boolean26 = byteOrderMark23.equals((java.lang.Object) byteOrderMark24);
        java.lang.String str27 = byteOrderMark23.getCharsetName();
        java.lang.String str28 = byteOrderMark23.getCharsetName();
        byte[] byteArray29 = byteOrderMark23.getBytes();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str27, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str28, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        boolean boolean29 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        java.lang.String str30 = byteOrderMark0.getCharsetName();
        byte[] byteArray31 = byteOrderMark0.getBytes();
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        byte[] byteArray46 = byteOrderMark45.getBytes();
        int int47 = byteOrderMark45.length();
        java.lang.String str48 = byteOrderMark45.toString();
        int[] intArray54 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray54);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray54);
        byte[] byteArray57 = byteOrderMark56.getBytes();
        boolean boolean58 = byteOrderMark45.equals((java.lang.Object) byteOrderMark56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str60 = byteOrderMark59.toString();
        java.lang.String str61 = byteOrderMark59.toString();
        int int63 = byteOrderMark59.get(2);
        boolean boolean65 = byteOrderMark59.equals((java.lang.Object) (byte) 10);
        boolean boolean66 = byteOrderMark45.equals((java.lang.Object) boolean65);
        boolean boolean67 = byteOrderMark0.equals((java.lang.Object) boolean66);
        byte[] byteArray68 = byteOrderMark0.getBytes();
        java.lang.String str69 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(byteOrderMark59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str60, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str61, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 254 + "'", int63 == 254);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "UTF-16LE" + "'", str69, "UTF-16LE");
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray14 = byteOrderMark12.getBytes();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray23);
        java.lang.String str29 = byteOrderMark28.toString();
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) str29);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str29, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) 1L);
        java.lang.String str27 = byteOrderMark24.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) byteOrderMark28);
        boolean boolean30 = byteOrderMark22.equals((java.lang.Object) byteOrderMark24);
        java.lang.Class<?> wildcardClass31 = byteOrderMark24.getClass();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) wildcardClass31);
        int int33 = byteOrderMark0.length();
        java.lang.String str34 = byteOrderMark0.toString();
        int int36 = byteOrderMark0.get(0);
        java.lang.String str37 = byteOrderMark0.toString();
        int int39 = byteOrderMark0.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str34, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 254 + "'", int36 == 254);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str37, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 254 + "'", int39 == 254);
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) 1L);
        java.lang.String str27 = byteOrderMark24.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) byteOrderMark28);
        boolean boolean30 = byteOrderMark22.equals((java.lang.Object) byteOrderMark24);
        java.lang.Class<?> wildcardClass31 = byteOrderMark24.getClass();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) wildcardClass31);
        int int33 = byteOrderMark0.length();
        java.lang.String str34 = byteOrderMark0.toString();
        int int36 = byteOrderMark0.get(0);
        byte[] byteArray37 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str34, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 254 + "'", int36 == 254);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-2, -1]");
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        int int8 = byteOrderMark7.length();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.Class<?> wildcardClass19 = byteOrderMark17.getClass();
        boolean boolean20 = byteOrderMark7.equals((java.lang.Object) byteOrderMark17);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray33);
        int int44 = byteOrderMark42.get((int) (short) 1);
        boolean boolean45 = byteOrderMark7.equals((java.lang.Object) (short) 1);
        java.lang.String str46 = byteOrderMark7.toString();
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        int int64 = byteOrderMark62.get((int) (byte) 0);
        boolean boolean65 = byteOrderMark7.equals((java.lang.Object) byteOrderMark62);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 97 + "'", int44 == 97);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str46, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        int int18 = byteOrderMark17.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        java.lang.String str25 = byteOrderMark24.getCharsetName();
        java.lang.Object obj26 = null;
        boolean boolean27 = byteOrderMark24.equals(obj26);
        boolean boolean28 = byteOrderMark17.equals(obj26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean31 = byteOrderMark29.equals((java.lang.Object) (-1L));
        java.lang.String str32 = byteOrderMark29.getCharsetName();
        java.lang.String str33 = byteOrderMark29.getCharsetName();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) byteOrderMark29);
        byte[] byteArray36 = byteOrderMark29.getBytes();
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) byteOrderMark29);
        byte[] byteArray38 = byteOrderMark29.getBytes();
        byte[] byteArray39 = byteOrderMark29.getBytes();
        int int40 = byteOrderMark29.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-16LE" + "'", str32, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = byteOrderMark19.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        int[] intArray3 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        int int9 = byteOrderMark5.length();
        boolean boolean11 = byteOrderMark5.equals((java.lang.Object) (byte) -1);
        byte[] byteArray12 = byteOrderMark5.getBytes();
        java.lang.String str13 = byteOrderMark5.getCharsetName();
        java.lang.String str14 = byteOrderMark5.getCharsetName();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray22);
        boolean boolean27 = byteOrderMark5.equals((java.lang.Object) byteOrderMark26);
        java.lang.String str28 = byteOrderMark26.getCharsetName();
        int int30 = byteOrderMark26.get((int) (short) 0);
        boolean boolean31 = byteOrderMark4.equals((java.lang.Object) byteOrderMark26);
        int int33 = byteOrderMark26.get((int) (short) 1);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[239, 10]");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 97 + "'", int33 == 97);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        java.lang.String str8 = byteOrderMark4.toString();
        int int9 = byteOrderMark4.length();
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int12 = byteOrderMark0.length();
        java.lang.String str13 = byteOrderMark0.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int15 = byteOrderMark0.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        int int1 = byteOrderMark0.length();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) "UTF-32BE");
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        java.lang.String str22 = byteOrderMark20.getCharsetName();
        byte[] byteArray23 = byteOrderMark20.getBytes();
        java.lang.String str24 = byteOrderMark20.toString();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark20);
        byte[] byteArray26 = byteOrderMark20.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 4 + "'", int1 == 4);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[10, 97, 35]");
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("", intArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray5 = byteOrderMark4.getBytes();
        java.lang.String str6 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int9 = byteOrderMark7.get((int) (byte) 0);
        byte[] byteArray10 = byteOrderMark7.getBytes();
        byte[] byteArray11 = byteOrderMark7.getBytes();
        boolean boolean12 = byteOrderMark4.equals((java.lang.Object) byteOrderMark7);
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray22);
        boolean boolean29 = byteOrderMark4.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray22);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-32BE" + "'", str6, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 239 + "'", int9 == 239);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        boolean boolean16 = byteOrderMark12.equals((java.lang.Object) (short) 0);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int33 = byteOrderMark32.length();
        java.lang.String str34 = byteOrderMark32.toString();
        boolean boolean35 = byteOrderMark12.equals((java.lang.Object) str34);
        int int36 = byteOrderMark12.length();
        boolean boolean37 = byteOrderMark5.equals((java.lang.Object) int36);
        java.lang.String str38 = byteOrderMark5.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int40 = byteOrderMark5.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str34, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str38, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean18 = byteOrderMark16.equals((java.lang.Object) 1L);
        java.lang.String str19 = byteOrderMark16.getCharsetName();
        int int20 = byteOrderMark16.length();
        boolean boolean22 = byteOrderMark16.equals((java.lang.Object) (byte) -1);
        byte[] byteArray23 = byteOrderMark16.getBytes();
        java.lang.String str24 = byteOrderMark16.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        int int31 = byteOrderMark30.length();
        java.lang.Class<?> wildcardClass32 = byteOrderMark30.getClass();
        boolean boolean33 = byteOrderMark16.equals((java.lang.Object) byteOrderMark30);
        boolean boolean34 = byteOrderMark15.equals((java.lang.Object) boolean33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj36 = null;
        boolean boolean37 = byteOrderMark35.equals(obj36);
        int int38 = byteOrderMark35.length();
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) 0L);
        int int41 = byteOrderMark35.length();
        int int42 = byteOrderMark35.length();
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        boolean boolean53 = byteOrderMark35.equals((java.lang.Object) intArray49);
        int[] intArray61 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray61);
        int int66 = byteOrderMark65.length();
        boolean boolean67 = byteOrderMark35.equals((java.lang.Object) byteOrderMark65);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean70 = byteOrderMark68.equals((java.lang.Object) 1L);
        java.lang.String str71 = byteOrderMark68.getCharsetName();
        int int72 = byteOrderMark68.length();
        boolean boolean74 = byteOrderMark68.equals((java.lang.Object) (byte) -1);
        byte[] byteArray75 = byteOrderMark68.getBytes();
        java.lang.String str76 = byteOrderMark68.getCharsetName();
        java.lang.String str77 = byteOrderMark68.getCharsetName();
        java.lang.String str78 = byteOrderMark68.toString();
        int int79 = byteOrderMark68.length();
        int int80 = byteOrderMark68.length();
        boolean boolean81 = byteOrderMark65.equals((java.lang.Object) byteOrderMark68);
        int int82 = byteOrderMark65.length();
        java.lang.String str83 = byteOrderMark65.toString();
        byte[] byteArray84 = byteOrderMark65.getBytes();
        int int85 = byteOrderMark65.length();
        byte[] byteArray86 = byteOrderMark65.getBytes();
        boolean boolean87 = byteOrderMark15.equals((java.lang.Object) byteArray86);
        int int89 = byteOrderMark15.get(0);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteOrderMark68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-16LE" + "'", str71, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "UTF-16LE" + "'", str76, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UTF-16LE" + "'", str77, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str78, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 3 + "'", int82 == 3);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str83, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 3 + "'", int85 == 3);
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 10 + "'", int89 == 10);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        int[] intArray6 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray6);
        int int11 = byteOrderMark9.get(1);
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj29 = null;
        boolean boolean30 = byteOrderMark28.equals(obj29);
        int int31 = byteOrderMark28.length();
        boolean boolean33 = byteOrderMark28.equals((java.lang.Object) 0L);
        int int34 = byteOrderMark28.length();
        int int35 = byteOrderMark28.length();
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        boolean boolean46 = byteOrderMark28.equals((java.lang.Object) intArray42);
        boolean boolean47 = byteOrderMark27.equals((java.lang.Object) boolean46);
        java.lang.String str48 = byteOrderMark27.toString();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean15 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark0.getBytes();
        byte[] byteArray17 = byteOrderMark0.getBytes();
        java.lang.String str18 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) 1L);
        java.lang.String str22 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean24 = byteOrderMark19.equals((java.lang.Object) byteOrderMark23);
        byte[] byteArray25 = byteOrderMark23.getBytes();
        int int26 = byteOrderMark23.length();
        java.lang.String str27 = byteOrderMark23.getCharsetName();
        int int28 = byteOrderMark23.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray30 = byteOrderMark29.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean33 = byteOrderMark31.equals((java.lang.Object) 1L);
        java.lang.String str34 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean36 = byteOrderMark31.equals((java.lang.Object) byteOrderMark35);
        boolean boolean37 = byteOrderMark29.equals((java.lang.Object) byteOrderMark31);
        java.lang.String str38 = byteOrderMark31.toString();
        boolean boolean39 = byteOrderMark23.equals((java.lang.Object) str38);
        boolean boolean40 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int42 = byteOrderMark23.get(0);
        int[] intArray53 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray53);
        int int61 = byteOrderMark60.length();
        int[] intArray72 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("hi!", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray72);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray72);
        boolean boolean80 = byteOrderMark60.equals((java.lang.Object) byteOrderMark79);
        int int81 = byteOrderMark60.length();
        boolean boolean82 = byteOrderMark23.equals((java.lang.Object) byteOrderMark60);
        // The following exception was thrown during execution in test generation
        try {
            int int84 = byteOrderMark23.get(255);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 255 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16BE" + "'", str27, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-16LE" + "'", str34, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str38, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 254 + "'", int42 == 254);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 3 + "'", int61 == 3);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) 1L);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean11 = byteOrderMark6.equals((java.lang.Object) byteOrderMark10);
        byte[] byteArray12 = byteOrderMark10.getBytes();
        int int13 = byteOrderMark10.length();
        int int14 = byteOrderMark10.length();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        boolean boolean31 = byteOrderMark10.equals((java.lang.Object) intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        int int54 = byteOrderMark53.length();
        boolean boolean55 = byteOrderMark37.equals((java.lang.Object) int54);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        java.lang.String str21 = byteOrderMark20.getCharsetName();
        int int22 = byteOrderMark20.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray34);
        byte[] byteArray43 = byteOrderMark42.getBytes();
        boolean boolean44 = byteOrderMark20.equals((java.lang.Object) byteArray43);
        boolean boolean45 = byteOrderMark0.equals((java.lang.Object) boolean44);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray56);
        java.lang.Class<?> wildcardClass64 = byteOrderMark63.getClass();
        boolean boolean65 = byteOrderMark0.equals((java.lang.Object) byteOrderMark63);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16LE" + "'", str21, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        java.lang.String str13 = byteOrderMark4.toString();
        int int14 = byteOrderMark4.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.String str19 = byteOrderMark17.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean36 = byteOrderMark17.equals((java.lang.Object) "hi!");
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int38 = byteOrderMark37.length();
        int int40 = byteOrderMark37.get((int) (short) 0);
        boolean boolean41 = byteOrderMark17.equals((java.lang.Object) byteOrderMark37);
        int int42 = byteOrderMark37.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrderMark37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 254 + "'", int40 == 254);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray15);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        int int14 = byteOrderMark13.length();
        java.lang.String str15 = byteOrderMark13.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark13.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        int int1 = byteOrderMark0.length();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) "UTF-32BE");
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        java.lang.String str22 = byteOrderMark20.getCharsetName();
        byte[] byteArray23 = byteOrderMark20.getBytes();
        java.lang.String str24 = byteOrderMark20.toString();
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str26 = byteOrderMark20.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 4 + "'", int1 == 4);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str24, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) 1L);
        java.lang.String str9 = byteOrderMark6.getCharsetName();
        int int10 = byteOrderMark6.length();
        boolean boolean12 = byteOrderMark6.equals((java.lang.Object) (byte) -1);
        byte[] byteArray13 = byteOrderMark6.getBytes();
        java.lang.String str14 = byteOrderMark6.getCharsetName();
        java.lang.String str15 = byteOrderMark6.getCharsetName();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray23);
        boolean boolean28 = byteOrderMark6.equals((java.lang.Object) byteOrderMark27);
        java.lang.String str29 = byteOrderMark27.getCharsetName();
        int int31 = byteOrderMark27.get((int) (short) 0);
        java.lang.String str32 = byteOrderMark27.toString();
        byte[] byteArray33 = byteOrderMark27.getBytes();
        boolean boolean34 = byteOrderMark5.equals((java.lang.Object) byteArray33);
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray42);
        java.lang.Object obj47 = null;
        boolean boolean48 = byteOrderMark46.equals(obj47);
        boolean boolean49 = byteOrderMark5.equals((java.lang.Object) boolean48);
        // The following exception was thrown during execution in test generation
        try {
            int int51 = byteOrderMark5.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        byte[] byteArray18 = byteOrderMark15.getBytes();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        java.lang.Class<?> wildcardClass20 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        byte[] byteArray25 = byteOrderMark24.getBytes();
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) byteOrderMark24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str28 = byteOrderMark27.toString();
        java.lang.String str29 = byteOrderMark27.toString();
        int int31 = byteOrderMark27.get(2);
        boolean boolean33 = byteOrderMark27.equals((java.lang.Object) (byte) 10);
        boolean boolean34 = byteOrderMark13.equals((java.lang.Object) boolean33);
        int int35 = byteOrderMark13.length();
        java.lang.String str36 = byteOrderMark13.getCharsetName();
        int[] intArray46 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray46);
        boolean boolean53 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        java.lang.Class<?> wildcardClass54 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(byteOrderMark27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 254 + "'", int31 == 254);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-32BE" + "'", str36, "UTF-32BE");
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray16);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.toString();
        java.lang.String str19 = byteOrderMark17.toString();
        byte[] byteArray20 = byteOrderMark17.getBytes();
        java.lang.Class<?> wildcardClass21 = byteArray20.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        int int19 = byteOrderMark18.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str21 = byteOrderMark20.toString();
        java.lang.String str22 = byteOrderMark20.toString();
        int int24 = byteOrderMark20.get(2);
        java.lang.String str25 = byteOrderMark20.toString();
        int int27 = byteOrderMark20.get(1);
        byte[] byteArray28 = byteOrderMark20.getBytes();
        java.lang.String str29 = byteOrderMark20.toString();
        java.lang.String str30 = byteOrderMark20.toString();
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray44);
        boolean boolean55 = byteOrderMark20.equals((java.lang.Object) intArray44);
        boolean boolean56 = byteOrderMark18.equals((java.lang.Object) intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray44);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str22, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 254 + "'", int24 == 254);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray23 = byteOrderMark22.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean26 = byteOrderMark24.equals((java.lang.Object) 1L);
        java.lang.String str27 = byteOrderMark24.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean29 = byteOrderMark24.equals((java.lang.Object) byteOrderMark28);
        boolean boolean30 = byteOrderMark22.equals((java.lang.Object) byteOrderMark24);
        java.lang.Class<?> wildcardClass31 = byteOrderMark24.getClass();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) wildcardClass31);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        java.lang.String str45 = byteOrderMark44.getCharsetName();
        java.lang.String str46 = byteOrderMark44.getCharsetName();
        int int47 = byteOrderMark44.length();
        boolean boolean48 = byteOrderMark0.equals((java.lang.Object) int47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int51 = byteOrderMark49.get((int) (byte) 0);
        int[] intArray61 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray61);
        int int68 = byteOrderMark67.length();
        boolean boolean69 = byteOrderMark49.equals((java.lang.Object) byteOrderMark67);
        int[] intArray79 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("hi!", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark81 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark82 = new org.apache.commons.io.ByteOrderMark("hi!", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark83 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark84 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray79);
        org.apache.commons.io.ByteOrderMark byteOrderMark85 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray79);
        int int86 = byteOrderMark85.length();
        boolean boolean87 = byteOrderMark67.equals((java.lang.Object) int86);
        byte[] byteArray88 = byteOrderMark67.getBytes();
        int int89 = byteOrderMark67.length();
        boolean boolean90 = byteOrderMark0.equals((java.lang.Object) byteOrderMark67);
        java.lang.String str91 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-32BE" + "'", str45, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-32BE" + "'", str46, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteOrderMark49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 239 + "'", int51 == 239);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 3 + "'", int86 == 3);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(byteArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray88), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 3 + "'", int89 == 3);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "UTF-16BE" + "'", str91, "UTF-16BE");
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj5 = null;
        boolean boolean6 = byteOrderMark4.equals(obj5);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        java.lang.String str8 = byteOrderMark4.toString();
        int int9 = byteOrderMark4.length();
        int int10 = byteOrderMark4.length();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.Class<?> wildcardClass12 = byteOrderMark4.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int6 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean4 = byteOrderMark2.equals((java.lang.Object) (-1L));
        java.lang.String str5 = byteOrderMark2.getCharsetName();
        java.lang.String str6 = byteOrderMark2.getCharsetName();
        boolean boolean7 = byteOrderMark0.equals((java.lang.Object) str6);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        int int31 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int int19 = byteOrderMark17.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj21 = null;
        boolean boolean22 = byteOrderMark20.equals(obj21);
        byte[] byteArray23 = byteOrderMark20.getBytes();
        java.lang.String str24 = byteOrderMark20.toString();
        java.lang.String str25 = byteOrderMark20.getCharsetName();
        int int27 = byteOrderMark20.get(0);
        java.lang.String str28 = byteOrderMark20.toString();
        int int29 = byteOrderMark20.length();
        int int30 = byteOrderMark20.length();
        int int31 = byteOrderMark20.length();
        boolean boolean32 = byteOrderMark17.equals((java.lang.Object) int31);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16BE" + "'", str25, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 254 + "'", int27 == 254);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        java.lang.String str11 = byteOrderMark9.getCharsetName();
        java.lang.String str12 = byteOrderMark9.toString();
        int int13 = byteOrderMark9.length();
        java.lang.String str14 = byteOrderMark9.getCharsetName();
        java.lang.String str15 = byteOrderMark9.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean18 = byteOrderMark16.equals((java.lang.Object) 1L);
        java.lang.String str19 = byteOrderMark16.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean21 = byteOrderMark16.equals((java.lang.Object) byteOrderMark20);
        byte[] byteArray22 = byteOrderMark20.getBytes();
        int int23 = byteOrderMark20.length();
        int int24 = byteOrderMark20.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        boolean boolean41 = byteOrderMark20.equals((java.lang.Object) intArray34);
        byte[] byteArray42 = byteOrderMark20.getBytes();
        byte[] byteArray43 = byteOrderMark20.getBytes();
        boolean boolean44 = byteOrderMark9.equals((java.lang.Object) byteOrderMark20);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        int[] intArray52 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("hi!", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray52);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray52);
        java.lang.String str61 = byteOrderMark60.getCharsetName();
        boolean boolean62 = byteOrderMark40.equals((java.lang.Object) byteOrderMark60);
        boolean boolean63 = byteOrderMark17.equals((java.lang.Object) byteOrderMark40);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str61, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        byte[] byteArray3 = byteOrderMark0.getBytes();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        int[] intArray41 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray41);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray41);
        java.lang.String str47 = byteOrderMark46.getCharsetName();
        java.lang.String str48 = byteOrderMark46.getCharsetName();
        boolean boolean49 = byteOrderMark30.equals((java.lang.Object) byteOrderMark46);
        int[] intArray63 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("hi!", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark69 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark73 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray63);
        boolean boolean74 = byteOrderMark30.equals((java.lang.Object) byteOrderMark73);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str47, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str48, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int int14 = byteOrderMark13.length();
        int int15 = byteOrderMark13.length();
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark13.equals(obj16);
        int int18 = byteOrderMark13.length();
        byte[] byteArray19 = byteOrderMark13.getBytes();
        java.lang.Class<?> wildcardClass20 = byteArray19.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray29);
        int int36 = byteOrderMark35.length();
        byte[] byteArray37 = byteOrderMark35.getBytes();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray47);
        int int54 = byteOrderMark53.length();
        java.lang.String str55 = byteOrderMark53.toString();
        int int56 = byteOrderMark53.length();
        int int57 = byteOrderMark53.length();
        boolean boolean58 = byteOrderMark35.equals((java.lang.Object) byteOrderMark53);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str55, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 3 + "'", int57 == 3);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray9);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark15.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        int[] intArray5 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray5);
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        boolean boolean22 = byteOrderMark7.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        java.lang.String str23 = byteOrderMark7.toString();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[0, 10, -1]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]" + "'", str23, "ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]");
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) (-1L));
        java.lang.String str22 = byteOrderMark19.toString();
        java.lang.String str23 = byteOrderMark19.getCharsetName();
        boolean boolean24 = byteOrderMark18.equals((java.lang.Object) byteOrderMark19);
        java.lang.Class<?> wildcardClass25 = byteOrderMark18.getClass();
        boolean boolean26 = byteOrderMark0.equals((java.lang.Object) wildcardClass25);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str3, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16BE" + "'", str4, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16BE" + "'", str5, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray14);
        java.lang.String str26 = byteOrderMark25.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int28 = byteOrderMark25.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]");
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        int int12 = byteOrderMark11.length();
        java.lang.String str13 = byteOrderMark11.getCharsetName();
        int int14 = byteOrderMark11.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj3 = null;
        boolean boolean4 = byteOrderMark2.equals(obj3);
        byte[] byteArray5 = byteOrderMark2.getBytes();
        java.lang.String str6 = byteOrderMark2.toString();
        java.lang.String str7 = byteOrderMark2.getCharsetName();
        java.lang.String str8 = byteOrderMark2.toString();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        boolean boolean25 = byteOrderMark2.equals((java.lang.Object) intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray18);
        int int29 = byteOrderMark27.get((int) (short) 0);
        java.lang.String str30 = byteOrderMark27.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int32 = byteOrderMark27.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16BE" + "'", str7, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) 0L);
        int int18 = byteOrderMark12.length();
        int int19 = byteOrderMark12.length();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) intArray26);
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray38);
        int int43 = byteOrderMark42.length();
        boolean boolean44 = byteOrderMark12.equals((java.lang.Object) byteOrderMark42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int47 = byteOrderMark45.get(0);
        boolean boolean49 = byteOrderMark45.equals((java.lang.Object) (short) 0);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        boolean boolean60 = byteOrderMark45.equals((java.lang.Object) byteOrderMark59);
        boolean boolean61 = byteOrderMark12.equals((java.lang.Object) byteOrderMark45);
        byte[] byteArray62 = byteOrderMark45.getBytes();
        boolean boolean63 = byteOrderMark5.equals((java.lang.Object) byteArray62);
        java.lang.String str64 = byteOrderMark5.toString();
        java.lang.String str65 = byteOrderMark5.getCharsetName();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 255 + "'", int47 == 255);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str64, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        byte[] byteArray23 = byteOrderMark21.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int25 = byteOrderMark21.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        byte[] byteArray19 = byteOrderMark17.getBytes();
        int int21 = byteOrderMark17.get(0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray13);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int26 = byteOrderMark23.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]" + "'", str24, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]");
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray11);
        java.lang.Object obj20 = null;
        boolean boolean21 = byteOrderMark19.equals(obj20);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.toString();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        int int16 = byteOrderMark13.length();
        int int18 = byteOrderMark13.get((int) (short) 1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 97 + "'", int18 == 97);
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        int int22 = byteOrderMark21.length();
        int int23 = byteOrderMark21.length();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 3 + "'", int23 == 3);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        java.lang.String str15 = byteOrderMark14.toString();
        int int16 = byteOrderMark14.length();
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) int16);
        int int18 = byteOrderMark0.length();
        int int19 = byteOrderMark0.length();
        byte[] byteArray20 = byteOrderMark0.getBytes();
        int int22 = byteOrderMark0.get((int) (short) 1);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 4 + "'", int18 == 4);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 4 + "'", int19 == 4);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        int int26 = byteOrderMark25.length();
        java.lang.String str27 = byteOrderMark25.getCharsetName();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str27, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        java.lang.String str17 = byteOrderMark15.toString();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        int int5 = byteOrderMark0.length();
        int int6 = byteOrderMark0.length();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        int int9 = byteOrderMark0.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 255 + "'", int9 == 255);
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark19.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        java.lang.String str6 = byteOrderMark0.toString();
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray18);
        boolean boolean27 = byteOrderMark0.equals((java.lang.Object) byteOrderMark26);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        java.lang.String str10 = byteOrderMark9.toString();
        java.lang.String str11 = byteOrderMark9.toString();
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) true);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean16 = byteOrderMark14.equals((java.lang.Object) 1L);
        java.lang.String str17 = byteOrderMark14.getCharsetName();
        int int18 = byteOrderMark14.length();
        boolean boolean19 = byteOrderMark9.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray20 = byteOrderMark9.getBytes();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        boolean boolean40 = byteOrderMark19.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray31);
        java.lang.Class<?> wildcardClass43 = intArray31.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        java.lang.Class<?> wildcardClass18 = byteOrderMark17.getClass();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        byte[] byteArray9 = byteOrderMark3.getBytes();
        java.lang.String str10 = byteOrderMark3.toString();
        java.lang.String str11 = byteOrderMark3.toString();
        java.lang.String str12 = byteOrderMark3.toString();
        int int13 = byteOrderMark3.length();
        java.lang.Class<?> wildcardClass14 = byteOrderMark3.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str10, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str11, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str12, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark17.equals(obj19);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int9 = byteOrderMark8.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark8.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) wildcardClass10);
        int int12 = byteOrderMark0.length();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) "UTF-8");
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        java.lang.String str23 = byteOrderMark22.getCharsetName();
        java.lang.String str24 = byteOrderMark22.getCharsetName();
        java.lang.String str25 = byteOrderMark22.getCharsetName();
        int int26 = byteOrderMark22.length();
        int[] intArray30 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        boolean boolean32 = byteOrderMark22.equals((java.lang.Object) byteOrderMark31);
        int int33 = byteOrderMark31.length();
        boolean boolean34 = byteOrderMark0.equals((java.lang.Object) byteOrderMark31);
        java.lang.String str35 = byteOrderMark31.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[239, 10]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xEF,0xA]" + "'", str35, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xEF,0xA]");
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        boolean boolean20 = byteOrderMark2.equals((java.lang.Object) intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.Object obj30 = null;
        boolean boolean31 = byteOrderMark28.equals(obj30);
        byte[] byteArray32 = byteOrderMark28.getBytes();
        byte[] byteArray33 = byteOrderMark28.getBytes();
        int[] intArray38 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        boolean boolean40 = byteOrderMark28.equals((java.lang.Object) "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        boolean boolean41 = byteOrderMark22.equals((java.lang.Object) byteOrderMark28);
        byte[] byteArray42 = byteOrderMark22.getBytes();
        byte[] byteArray43 = byteOrderMark22.getBytes();
        byte[] byteArray44 = byteOrderMark22.getBytes();
        int int46 = byteOrderMark22.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10 + "'", int46 == 10);
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (-1.0f));
        java.lang.String str7 = byteOrderMark0.toString();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray20);
        int int29 = byteOrderMark28.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj31 = null;
        boolean boolean32 = byteOrderMark30.equals(obj31);
        int int33 = byteOrderMark30.length();
        boolean boolean35 = byteOrderMark30.equals((java.lang.Object) 0L);
        int int36 = byteOrderMark30.length();
        boolean boolean38 = byteOrderMark30.equals((java.lang.Object) 3);
        java.lang.String str39 = byteOrderMark30.getCharsetName();
        java.lang.String str40 = byteOrderMark30.getCharsetName();
        java.lang.String str41 = byteOrderMark30.toString();
        byte[] byteArray42 = byteOrderMark30.getBytes();
        boolean boolean43 = byteOrderMark28.equals((java.lang.Object) byteArray42);
        boolean boolean44 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        int int45 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-16BE" + "'", str39, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16BE" + "'", str40, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str41, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray14);
        java.lang.String str26 = byteOrderMark25.getCharsetName();
        java.lang.Class<?> wildcardClass27 = byteOrderMark25.getClass();
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        java.lang.String str14 = byteOrderMark0.toString();
        java.lang.String str15 = byteOrderMark0.toString();
        java.lang.String str16 = byteOrderMark0.getCharsetName();
        java.lang.String str17 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str14, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray33);
        boolean boolean38 = byteOrderMark0.equals((java.lang.Object) byteOrderMark37);
        java.lang.String str39 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str39, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        int int8 = byteOrderMark4.length();
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        boolean boolean29 = byteOrderMark4.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        byte[] byteArray30 = byteOrderMark4.getBytes();
        java.lang.String str31 = byteOrderMark4.toString();
        java.lang.String str32 = byteOrderMark4.toString();
        int int33 = byteOrderMark4.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str32, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) wildcardClass40);
        java.lang.String str42 = byteOrderMark0.getCharsetName();
        int int43 = byteOrderMark0.length();
        int int44 = byteOrderMark0.length();
        byte[] byteArray45 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-32BE" + "'", str42, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 4 + "'", int43 == 4);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 4 + "'", int44 == 4);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[0, 0, -2, -1]");
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        int int20 = byteOrderMark19.length();
        java.lang.String str21 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        int int25 = byteOrderMark21.get((int) (short) 0);
        java.lang.String str26 = byteOrderMark21.toString();
        byte[] byteArray27 = byteOrderMark21.getBytes();
        int int28 = byteOrderMark21.length();
        java.lang.Class<?> wildcardClass29 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        int[] intArray3 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray3);
        byte[] byteArray6 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[255]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1]");
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray22);
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark31);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean3 = byteOrderMark1.equals((java.lang.Object) 1L);
        java.lang.String str4 = byteOrderMark1.getCharsetName();
        int int5 = byteOrderMark1.length();
        java.lang.String str6 = byteOrderMark1.toString();
        byte[] byteArray7 = byteOrderMark1.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteArray7);
        int int9 = byteOrderMark0.length();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        byte[] byteArray11 = byteOrderMark0.getBytes();
        java.lang.String str12 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 2 + "'", int5 == 2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        java.lang.String str13 = byteOrderMark4.toString();
        byte[] byteArray14 = byteOrderMark4.getBytes();
        int int16 = byteOrderMark4.get(0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 254 + "'", int16 == 254);
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        byte[] byteArray17 = byteOrderMark15.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark18.equals(obj19);
        int int21 = byteOrderMark18.length();
        boolean boolean23 = byteOrderMark18.equals((java.lang.Object) 0L);
        int int24 = byteOrderMark18.length();
        int int25 = byteOrderMark18.length();
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        boolean boolean36 = byteOrderMark18.equals((java.lang.Object) intArray32);
        boolean boolean37 = byteOrderMark15.equals((java.lang.Object) intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray32);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray56);
        boolean boolean68 = byteOrderMark41.equals((java.lang.Object) intArray56);
        int int69 = byteOrderMark41.length();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 3 + "'", int69 == 3);
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray40);
        boolean boolean48 = byteOrderMark29.equals((java.lang.Object) byteOrderMark47);
        java.lang.Class<?> wildcardClass49 = byteOrderMark29.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        int[] intArray4 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray4);
        int int7 = byteOrderMark5.get((int) (short) 1);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str9 = byteOrderMark8.toString();
        java.lang.String str10 = byteOrderMark8.toString();
        int int12 = byteOrderMark8.get(2);
        boolean boolean14 = byteOrderMark8.equals((java.lang.Object) (byte) 10);
        byte[] byteArray15 = byteOrderMark8.getBytes();
        byte[] byteArray16 = byteOrderMark8.getBytes();
        java.lang.Class<?> wildcardClass17 = byteOrderMark8.getClass();
        boolean boolean18 = byteOrderMark5.equals((java.lang.Object) wildcardClass17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) (-1L));
        java.lang.String str22 = byteOrderMark19.toString();
        java.lang.String str23 = byteOrderMark19.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        int int32 = byteOrderMark31.length();
        boolean boolean33 = byteOrderMark19.equals((java.lang.Object) int32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean36 = byteOrderMark34.equals((java.lang.Object) 1L);
        java.lang.String str37 = byteOrderMark34.getCharsetName();
        int int38 = byteOrderMark34.length();
        boolean boolean40 = byteOrderMark34.equals((java.lang.Object) (byte) -1);
        byte[] byteArray41 = byteOrderMark34.getBytes();
        java.lang.String str42 = byteOrderMark34.getCharsetName();
        java.lang.Class<?> wildcardClass43 = byteOrderMark34.getClass();
        boolean boolean44 = byteOrderMark19.equals((java.lang.Object) byteOrderMark34);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray56);
        boolean boolean65 = byteOrderMark19.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        byte[] byteArray66 = byteOrderMark19.getBytes();
        boolean boolean67 = byteOrderMark5.equals((java.lang.Object) byteArray66);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 254, 100]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 254 + "'", int7 == 254);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str9, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str10, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 254 + "'", int12 == 254);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UTF-16LE" + "'", str37, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        int int17 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0x0,0xA,0xFF]", intArray8);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = byteOrderMark21.get(239);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 239 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        byte[] byteArray7 = byteOrderMark5.getBytes();
        int int8 = byteOrderMark5.length();
        java.lang.Class<?> wildcardClass9 = byteOrderMark5.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 3 + "'", int8 == 3);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray17 = byteOrderMark16.getBytes();
        java.lang.String str18 = byteOrderMark16.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int21 = byteOrderMark19.get((int) (byte) 0);
        byte[] byteArray22 = byteOrderMark19.getBytes();
        byte[] byteArray23 = byteOrderMark19.getBytes();
        boolean boolean24 = byteOrderMark16.equals((java.lang.Object) byteOrderMark19);
        boolean boolean26 = byteOrderMark19.equals((java.lang.Object) '\ufeff');
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray38);
        boolean boolean47 = byteOrderMark19.equals((java.lang.Object) intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xA,0x61,0x23]", intArray38);
        boolean boolean50 = byteOrderMark12.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 239 + "'", int21 == 239);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int int8 = byteOrderMark0.length();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        java.lang.String str10 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 4 + "'", int6 == 4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 4 + "'", int8 == 4);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str10, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        int int15 = byteOrderMark13.length();
        int int16 = byteOrderMark13.length();
        java.lang.String str17 = byteOrderMark13.getCharsetName();
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) str17);
        java.lang.String str19 = byteOrderMark0.toString();
        byte[] byteArray20 = byteOrderMark0.getBytes();
        java.lang.String str21 = byteOrderMark0.toString();
        java.lang.String str22 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str19, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16BE" + "'", str22, "UTF-16BE");
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xEF,0xA]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        byte[] byteArray3 = byteOrderMark0.getBytes();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark5);
        int int10 = byteOrderMark5.length();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        int int12 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray8);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        byte[] byteArray9 = byteOrderMark3.getBytes();
        java.lang.String str10 = byteOrderMark3.toString();
        java.lang.String str11 = byteOrderMark3.toString();
        java.lang.String str12 = byteOrderMark3.toString();
        java.lang.String str13 = byteOrderMark3.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str10, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str11, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str12, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str13, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        boolean boolean34 = byteOrderMark17.equals((java.lang.Object) byteOrderMark31);
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        java.lang.String str41 = byteOrderMark40.getCharsetName();
        java.lang.Object obj42 = null;
        boolean boolean43 = byteOrderMark40.equals(obj42);
        int int44 = byteOrderMark40.length();
        byte[] byteArray45 = byteOrderMark40.getBytes();
        java.lang.Class<?> wildcardClass46 = byteOrderMark40.getClass();
        boolean boolean47 = byteOrderMark31.equals((java.lang.Object) wildcardClass46);
        java.lang.String str48 = byteOrderMark31.getCharsetName();
        java.lang.String str49 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark50.equals(obj51);
        int int53 = byteOrderMark50.length();
        boolean boolean55 = byteOrderMark50.equals((java.lang.Object) 0L);
        int int56 = byteOrderMark50.length();
        int int57 = byteOrderMark50.length();
        int[] intArray64 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        boolean boolean68 = byteOrderMark50.equals((java.lang.Object) intArray64);
        int[] intArray76 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("hi!", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("hi!", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray76);
        int int81 = byteOrderMark80.length();
        boolean boolean82 = byteOrderMark50.equals((java.lang.Object) byteOrderMark80);
        boolean boolean83 = byteOrderMark31.equals((java.lang.Object) byteOrderMark50);
        int int84 = byteOrderMark50.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-32BE" + "'", str48, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-32BE" + "'", str49, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 2 + "'", int84 == 2);
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray14);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32LE;
        int int1 = byteOrderMark0.length();
        byte[] byteArray2 = byteOrderMark0.getBytes();
        int int3 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 4 + "'", int1 == 4);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[-1, -2, 0, 0]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray10);
        int int18 = byteOrderMark17.length();
        int int19 = byteOrderMark17.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        int int9 = byteOrderMark4.length();
        byte[] byteArray10 = byteOrderMark4.getBytes();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray21);
        java.lang.String str29 = byteOrderMark28.getCharsetName();
        java.lang.String str30 = byteOrderMark28.getCharsetName();
        int[] intArray40 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray40);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("hi!", intArray40);
        boolean boolean47 = byteOrderMark28.equals((java.lang.Object) "hi!");
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        int int49 = byteOrderMark48.length();
        int int51 = byteOrderMark48.get((int) (short) 0);
        boolean boolean52 = byteOrderMark28.equals((java.lang.Object) byteOrderMark48);
        boolean boolean53 = byteOrderMark4.equals((java.lang.Object) byteOrderMark48);
        java.lang.String str54 = byteOrderMark4.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj58 = null;
        boolean boolean59 = byteOrderMark57.equals(obj58);
        byte[] byteArray60 = byteOrderMark57.getBytes();
        java.lang.String str61 = byteOrderMark57.toString();
        java.lang.String str62 = byteOrderMark57.getCharsetName();
        java.lang.String str63 = byteOrderMark57.toString();
        int[] intArray73 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("hi!", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("hi!", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("hi!", intArray73);
        boolean boolean80 = byteOrderMark57.equals((java.lang.Object) intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark81 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark82 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray73);
        java.lang.String str83 = byteOrderMark82.toString();
        boolean boolean84 = byteOrderMark4.equals((java.lang.Object) str83);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str29, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteOrderMark48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 254 + "'", int51 == 254);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str54, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str61, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UTF-16BE" + "'", str62, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str63, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str83, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray9);
        int int16 = byteOrderMark15.length();
        int int17 = byteOrderMark15.length();
        java.lang.String str18 = byteOrderMark15.getCharsetName();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        java.lang.String str56 = byteOrderMark47.getCharsetName();
        java.lang.String str57 = byteOrderMark47.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "UTF-16LE" + "'", str56, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "UTF-16LE" + "'", str57, "UTF-16LE");
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str5 = byteOrderMark4.toString();
        java.lang.String str6 = byteOrderMark4.toString();
        int int8 = byteOrderMark4.get(2);
        boolean boolean10 = byteOrderMark4.equals((java.lang.Object) (byte) 10);
        byte[] byteArray11 = byteOrderMark4.getBytes();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        boolean boolean28 = byteOrderMark4.equals((java.lang.Object) byteOrderMark27);
        byte[] byteArray29 = byteOrderMark27.getBytes();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteArray29);
        int int31 = byteOrderMark0.length();
        int int32 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean38 = byteOrderMark33.equals((java.lang.Object) byteOrderMark37);
        byte[] byteArray39 = byteOrderMark37.getBytes();
        boolean boolean40 = byteOrderMark0.equals((java.lang.Object) byteOrderMark37);
        java.lang.String str41 = byteOrderMark37.toString();
        java.lang.String str42 = byteOrderMark37.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 254 + "'", int8 == 254);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 4 + "'", int32 == 4);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str41, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16BE" + "'", str42, "UTF-16BE");
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        byte[] byteArray15 = byteOrderMark13.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark13.get(4);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 4 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (-1.0f));
        int int7 = byteOrderMark0.length();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) 100.0f);
        int[] intArray16 = new int[] { (byte) 0, 10, (-1) };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        byte[] byteArray21 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj23 = null;
        boolean boolean24 = byteOrderMark22.equals(obj23);
        byte[] byteArray25 = byteOrderMark22.getBytes();
        java.lang.String str26 = byteOrderMark22.toString();
        java.lang.String str27 = byteOrderMark22.getCharsetName();
        java.lang.String str28 = byteOrderMark22.toString();
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        boolean boolean45 = byteOrderMark22.equals((java.lang.Object) intArray38);
        java.lang.Class<?> wildcardClass46 = intArray38.getClass();
        boolean boolean47 = byteOrderMark0.equals((java.lang.Object) wildcardClass46);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[0, 10, -1]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str26, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16BE" + "'", str27, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str28, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        byte[] byteArray20 = byteOrderMark17.getBytes();
        java.lang.String str21 = byteOrderMark17.toString();
        int int23 = byteOrderMark17.get((int) (byte) 0);
        boolean boolean24 = byteOrderMark15.equals((java.lang.Object) byteOrderMark17);
        java.lang.String str25 = byteOrderMark15.toString();
        java.lang.String str26 = byteOrderMark15.toString();
        int int27 = byteOrderMark15.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int30 = byteOrderMark28.get((int) (byte) 0);
        byte[] byteArray31 = byteOrderMark28.getBytes();
        boolean boolean32 = byteOrderMark15.equals((java.lang.Object) byteOrderMark28);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) (-1L));
        java.lang.String str36 = byteOrderMark33.toString();
        byte[] byteArray37 = byteOrderMark33.getBytes();
        byte[] byteArray38 = byteOrderMark33.getBytes();
        java.lang.String str39 = byteOrderMark33.getCharsetName();
        java.lang.String str40 = byteOrderMark33.toString();
        java.lang.Class<?> wildcardClass41 = byteOrderMark33.getClass();
        boolean boolean42 = byteOrderMark15.equals((java.lang.Object) byteOrderMark33);
        java.lang.String str43 = byteOrderMark33.getCharsetName();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 254 + "'", int23 == 254);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 239 + "'", int30 == 239);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str36, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UTF-16LE" + "'", str39, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str40, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16LE" + "'", str43, "UTF-16LE");
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (short) 1);
        int int3 = byteOrderMark0.length();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 187 + "'", int2 == 187);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str6, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean7 = byteOrderMark5.equals((java.lang.Object) 1L);
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean10 = byteOrderMark5.equals((java.lang.Object) byteOrderMark9);
        byte[] byteArray11 = byteOrderMark9.getBytes();
        int int12 = byteOrderMark9.length();
        int int13 = byteOrderMark9.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        boolean boolean30 = byteOrderMark9.equals((java.lang.Object) intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray23);
        byte[] byteArray36 = byteOrderMark35.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[10, 97, 35]");
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        java.lang.String str7 = byteOrderMark6.getCharsetName();
        java.lang.Object obj8 = null;
        boolean boolean9 = byteOrderMark6.equals(obj8);
        byte[] byteArray10 = byteOrderMark6.getBytes();
        byte[] byteArray11 = byteOrderMark6.getBytes();
        byte[] byteArray12 = byteOrderMark6.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj14 = null;
        boolean boolean15 = byteOrderMark13.equals(obj14);
        int int16 = byteOrderMark13.length();
        boolean boolean18 = byteOrderMark13.equals((java.lang.Object) 0L);
        int int19 = byteOrderMark13.length();
        int int20 = byteOrderMark13.length();
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        boolean boolean31 = byteOrderMark13.equals((java.lang.Object) intArray27);
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray39);
        int int44 = byteOrderMark43.length();
        boolean boolean45 = byteOrderMark13.equals((java.lang.Object) byteOrderMark43);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int48 = byteOrderMark46.get(0);
        boolean boolean50 = byteOrderMark46.equals((java.lang.Object) (short) 0);
        int[] intArray57 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("hi!", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray57);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray57);
        boolean boolean61 = byteOrderMark46.equals((java.lang.Object) byteOrderMark60);
        boolean boolean62 = byteOrderMark13.equals((java.lang.Object) byteOrderMark46);
        byte[] byteArray63 = byteOrderMark46.getBytes();
        boolean boolean64 = byteOrderMark6.equals((java.lang.Object) byteArray63);
        int[] intArray74 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("hi!", intArray74);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray74);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("hi!", intArray74);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray74);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray74);
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray74);
        boolean boolean81 = byteOrderMark6.equals((java.lang.Object) intArray74);
        org.apache.commons.io.ByteOrderMark byteOrderMark82 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray74);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteOrderMark46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 255 + "'", int48 == 255);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray31);
        boolean boolean40 = byteOrderMark19.equals((java.lang.Object) intArray31);
        int int41 = byteOrderMark19.length();
        byte[] byteArray42 = byteOrderMark19.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int44 = byteOrderMark19.get(97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 3 + "'", int41 == 3);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[10, 97, 35]");
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        boolean boolean12 = byteOrderMark5.equals((java.lang.Object) '\ufeff');
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray24);
        boolean boolean33 = byteOrderMark5.equals((java.lang.Object) intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xA,0x61,0x23]", intArray24);
        java.lang.Class<?> wildcardClass36 = intArray24.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        int int3 = byteOrderMark0.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray15);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        java.lang.String str25 = byteOrderMark0.getCharsetName();
        int int26 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        byte[] byteArray39 = byteOrderMark38.getBytes();
        java.lang.String str40 = byteOrderMark38.toString();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) str40);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 4 + "'", int2 == 4);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 4 + "'", int3 == 4);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-32BE" + "'", str25, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("", intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean6 = byteOrderMark4.equals((java.lang.Object) 1L);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean9 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray10 = byteOrderMark8.getBytes();
        int int11 = byteOrderMark8.length();
        int int12 = byteOrderMark8.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        boolean boolean29 = byteOrderMark8.equals((java.lang.Object) intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("", intArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray8);
        int int14 = byteOrderMark13.length();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str15 = byteOrderMark14.toString();
        java.lang.String str16 = byteOrderMark14.toString();
        int int18 = byteOrderMark14.get(2);
        boolean boolean20 = byteOrderMark14.equals((java.lang.Object) (byte) 10);
        byte[] byteArray21 = byteOrderMark14.getBytes();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        boolean boolean38 = byteOrderMark14.equals((java.lang.Object) byteOrderMark37);
        int int39 = byteOrderMark14.length();
        int int41 = byteOrderMark14.get(0);
        boolean boolean42 = byteOrderMark13.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str43 = byteOrderMark14.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str16, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 254 + "'", int18 == 254);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 4 + "'", int39 == 4);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-32BE" + "'", str43, "UTF-32BE");
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.String str7 = byteOrderMark0.getCharsetName();
        int int9 = byteOrderMark0.get((int) (short) 0);
        java.lang.Class<?> wildcardClass10 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 255 + "'", int9 == 255);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        boolean boolean26 = byteOrderMark1.equals((java.lang.Object) intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        java.lang.String str28 = byteOrderMark27.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str30 = byteOrderMark29.toString();
        boolean boolean32 = byteOrderMark29.equals((java.lang.Object) ' ');
        java.lang.String str33 = byteOrderMark29.toString();
        java.lang.String str34 = byteOrderMark29.getCharsetName();
        byte[] byteArray35 = byteOrderMark29.getBytes();
        boolean boolean36 = byteOrderMark27.equals((java.lang.Object) byteArray35);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean39 = byteOrderMark37.equals((java.lang.Object) 1L);
        java.lang.String str40 = byteOrderMark37.getCharsetName();
        int int41 = byteOrderMark37.length();
        boolean boolean43 = byteOrderMark37.equals((java.lang.Object) (byte) -1);
        byte[] byteArray44 = byteOrderMark37.getBytes();
        java.lang.String str45 = byteOrderMark37.getCharsetName();
        java.lang.String str46 = byteOrderMark37.getCharsetName();
        java.lang.String str47 = byteOrderMark37.toString();
        boolean boolean48 = byteOrderMark27.equals((java.lang.Object) str47);
        java.lang.String str49 = byteOrderMark27.toString();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str28, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str33, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-32BE" + "'", str34, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrderMark37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UTF-16LE" + "'", str40, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "UTF-16LE" + "'", str45, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "UTF-16LE" + "'", str46, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str47, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str49, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int17 = byteOrderMark16.length();
        int[] intArray27 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray27);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray27);
        boolean boolean34 = byteOrderMark16.equals((java.lang.Object) byteOrderMark33);
        java.lang.String str35 = byteOrderMark16.getCharsetName();
        int int36 = byteOrderMark16.length();
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) byteOrderMark16);
        int int38 = byteOrderMark16.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str35, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2855");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        java.lang.String str9 = byteOrderMark7.getCharsetName();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        java.lang.String str11 = byteOrderMark7.toString();
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray19);
        byte[] byteArray24 = byteOrderMark23.getBytes();
        java.lang.String str25 = byteOrderMark23.getCharsetName();
        java.lang.Class<?> wildcardClass26 = byteOrderMark23.getClass();
        boolean boolean27 = byteOrderMark7.equals((java.lang.Object) wildcardClass26);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-32BE" + "'", str9, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2856");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        java.lang.String str9 = byteOrderMark5.toString();
        java.lang.String str10 = byteOrderMark5.getCharsetName();
        java.lang.String str11 = byteOrderMark5.toString();
        java.lang.String str12 = byteOrderMark5.getCharsetName();
        int int14 = byteOrderMark5.get(0);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2857");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        int int12 = byteOrderMark11.length();
        java.lang.String str13 = byteOrderMark11.getCharsetName();
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2858");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        byte[] byteArray19 = byteOrderMark0.getBytes();
        byte[] byteArray20 = byteOrderMark0.getBytes();
        byte[] byteArray21 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[-2, -1]");
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2859");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        int int13 = byteOrderMark0.length();
        int int14 = byteOrderMark0.length();
        java.lang.String str15 = byteOrderMark0.toString();
        int[] intArray28 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        byte[] byteArray38 = byteOrderMark37.getBytes();
        boolean boolean39 = byteOrderMark0.equals((java.lang.Object) byteOrderMark37);
        java.lang.String str40 = byteOrderMark37.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 2 + "'", int13 == 2);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2860");
        int[] intArray7 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray7);
        int[] intArray25 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray25);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray25);
        byte[] byteArray30 = byteOrderMark29.getBytes();
        byte[] byteArray31 = byteOrderMark29.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj33 = null;
        boolean boolean34 = byteOrderMark32.equals(obj33);
        int int35 = byteOrderMark32.length();
        boolean boolean37 = byteOrderMark32.equals((java.lang.Object) 0L);
        int int38 = byteOrderMark32.length();
        int int39 = byteOrderMark32.length();
        int[] intArray46 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray46);
        boolean boolean50 = byteOrderMark32.equals((java.lang.Object) intArray46);
        boolean boolean51 = byteOrderMark29.equals((java.lang.Object) intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray46);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray46);
        boolean boolean58 = byteOrderMark11.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        int int59 = byteOrderMark11.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 254]");
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 3 + "'", int59 == 3);
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2861");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        java.lang.Class<?> wildcardClass25 = byteOrderMark21.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str24, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2862");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int20 = byteOrderMark18.get((int) (short) 1);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int23 = byteOrderMark21.get(0);
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj26 = null;
        boolean boolean27 = byteOrderMark25.equals(obj26);
        int int28 = byteOrderMark25.length();
        boolean boolean30 = byteOrderMark25.equals((java.lang.Object) 0L);
        int int31 = byteOrderMark25.length();
        boolean boolean32 = byteOrderMark21.equals((java.lang.Object) int31);
        boolean boolean33 = byteOrderMark18.equals((java.lang.Object) boolean32);
        java.lang.String str34 = byteOrderMark18.getCharsetName();
        java.lang.String str35 = byteOrderMark18.getCharsetName();
        boolean boolean36 = byteOrderMark17.equals((java.lang.Object) str35);
        java.lang.String str37 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 187 + "'", int20 == 187);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 255 + "'", int23 == 255);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "UTF-8" + "'", str34, "UTF-8");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-8" + "'", str35, "UTF-8");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str37, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2863");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray33);
        java.lang.String str42 = byteOrderMark41.getCharsetName();
        boolean boolean43 = byteOrderMark21.equals((java.lang.Object) byteOrderMark41);
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray49);
        boolean boolean52 = byteOrderMark41.equals((java.lang.Object) byteOrderMark51);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str54 = byteOrderMark53.toString();
        java.lang.String str55 = byteOrderMark53.toString();
        int int57 = byteOrderMark53.get(2);
        boolean boolean59 = byteOrderMark53.equals((java.lang.Object) (byte) 10);
        byte[] byteArray60 = byteOrderMark53.getBytes();
        byte[] byteArray61 = byteOrderMark53.getBytes();
        int int62 = byteOrderMark53.length();
        int[] intArray69 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark70 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        org.apache.commons.io.ByteOrderMark byteOrderMark71 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray69);
        org.apache.commons.io.ByteOrderMark byteOrderMark72 = new org.apache.commons.io.ByteOrderMark("hi!", intArray69);
        boolean boolean73 = byteOrderMark53.equals((java.lang.Object) "hi!");
        int int75 = byteOrderMark53.get((int) (short) 0);
        boolean boolean76 = byteOrderMark51.equals((java.lang.Object) byteOrderMark53);
        java.lang.String str77 = byteOrderMark51.getCharsetName();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str42, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(byteOrderMark53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str54, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str55, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 254 + "'", int57 == 254);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 4 + "'", int62 == 4);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str77, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2864");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        boolean boolean12 = byteOrderMark5.equals((java.lang.Object) '\ufeff');
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray24);
        boolean boolean33 = byteOrderMark5.equals((java.lang.Object) intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray24);
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2865");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        java.lang.String str24 = byteOrderMark23.getCharsetName();
        int int25 = byteOrderMark23.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj27 = null;
        boolean boolean28 = byteOrderMark26.equals(obj27);
        int int29 = byteOrderMark26.length();
        boolean boolean31 = byteOrderMark26.equals((java.lang.Object) 0L);
        int int32 = byteOrderMark26.length();
        boolean boolean34 = byteOrderMark26.equals((java.lang.Object) 3);
        int int36 = byteOrderMark26.get(0);
        boolean boolean37 = byteOrderMark23.equals((java.lang.Object) int36);
        java.lang.Class<?> wildcardClass38 = byteOrderMark23.getClass();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str24, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 3 + "'", int25 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 2 + "'", int29 == 2);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 254 + "'", int36 == 254);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2866");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        byte[] byteArray19 = byteOrderMark17.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj21 = null;
        boolean boolean22 = byteOrderMark20.equals(obj21);
        int int23 = byteOrderMark20.length();
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) 0L);
        int int26 = byteOrderMark20.length();
        int int27 = byteOrderMark20.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        boolean boolean38 = byteOrderMark20.equals((java.lang.Object) intArray34);
        boolean boolean39 = byteOrderMark17.equals((java.lang.Object) intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xFF]", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray34);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2867");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int int10 = byteOrderMark4.length();
        java.lang.String str11 = byteOrderMark4.toString();
        java.lang.String str12 = byteOrderMark4.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str11, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str12, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2868");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        java.lang.Class<?> wildcardClass22 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2869");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        int int6 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int8 = byteOrderMark0.get((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2870");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray3 = byteOrderMark2.getBytes();
        java.lang.String str4 = byteOrderMark2.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int7 = byteOrderMark5.get((int) (byte) 0);
        byte[] byteArray8 = byteOrderMark5.getBytes();
        byte[] byteArray9 = byteOrderMark5.getBytes();
        boolean boolean10 = byteOrderMark2.equals((java.lang.Object) byteOrderMark5);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean27 = byteOrderMark2.equals((java.lang.Object) intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0x0,0xA,0xFF]", intArray20);
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-32BE" + "'", str4, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 239 + "'", int7 == 239);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2871");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        byte[] byteArray20 = byteOrderMark19.getBytes();
        java.lang.String str21 = byteOrderMark19.getCharsetName();
        java.lang.Object obj22 = null;
        boolean boolean23 = byteOrderMark19.equals(obj22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str25 = byteOrderMark24.toString();
        java.lang.String str26 = byteOrderMark24.toString();
        int int28 = byteOrderMark24.get(2);
        byte[] byteArray29 = byteOrderMark24.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int32 = byteOrderMark30.get(0);
        java.lang.String str33 = byteOrderMark30.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj35 = null;
        boolean boolean36 = byteOrderMark34.equals(obj35);
        int int37 = byteOrderMark34.length();
        boolean boolean39 = byteOrderMark34.equals((java.lang.Object) 0L);
        int int40 = byteOrderMark34.length();
        boolean boolean41 = byteOrderMark30.equals((java.lang.Object) int40);
        boolean boolean42 = byteOrderMark24.equals((java.lang.Object) byteOrderMark30);
        java.lang.String str43 = byteOrderMark30.getCharsetName();
        int[] intArray53 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("hi!", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray53);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str61 = byteOrderMark60.toString();
        java.lang.String str62 = byteOrderMark60.toString();
        int int64 = byteOrderMark60.get(2);
        boolean boolean66 = byteOrderMark60.equals((java.lang.Object) (byte) 10);
        byte[] byteArray67 = byteOrderMark60.getBytes();
        byte[] byteArray68 = byteOrderMark60.getBytes();
        int int69 = byteOrderMark60.length();
        byte[] byteArray70 = byteOrderMark60.getBytes();
        java.lang.Class<?> wildcardClass71 = byteOrderMark60.getClass();
        boolean boolean72 = byteOrderMark59.equals((java.lang.Object) byteOrderMark60);
        byte[] byteArray73 = byteOrderMark59.getBytes();
        boolean boolean74 = byteOrderMark30.equals((java.lang.Object) byteOrderMark59);
        int int75 = byteOrderMark30.length();
        boolean boolean76 = byteOrderMark19.equals((java.lang.Object) int75);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str26, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 254 + "'", int28 == 254);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 255 + "'", int32 == 255);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-16LE" + "'", str33, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UTF-16LE" + "'", str43, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str61, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str62, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 254 + "'", int64 == 254);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 4 + "'", int69 == 4);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2 + "'", int75 == 2);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2872");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean14 = byteOrderMark12.equals((java.lang.Object) (-1L));
        java.lang.String str15 = byteOrderMark12.toString();
        java.lang.String str16 = byteOrderMark12.getCharsetName();
        boolean boolean17 = byteOrderMark11.equals((java.lang.Object) byteOrderMark12);
        java.lang.String str18 = byteOrderMark12.toString();
        java.lang.String str19 = byteOrderMark12.toString();
        byte[] byteArray20 = byteOrderMark12.getBytes();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str15, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str19, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-1, -2]");
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2873");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        byte[] byteArray19 = byteOrderMark0.getBytes();
        int int20 = byteOrderMark0.length();
        java.lang.String str21 = byteOrderMark0.getCharsetName();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        java.lang.String str24 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass25 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UTF-16BE" + "'", str21, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16BE" + "'", str24, "UTF-16BE");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2874");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean9 = byteOrderMark7.equals((java.lang.Object) (-1L));
        java.lang.String str10 = byteOrderMark7.getCharsetName();
        java.lang.String str11 = byteOrderMark7.getCharsetName();
        java.lang.String str12 = byteOrderMark7.getCharsetName();
        java.lang.String str13 = byteOrderMark7.getCharsetName();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) str13);
        byte[] byteArray15 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2875");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        int int47 = byteOrderMark30.length();
        int int48 = byteOrderMark30.length();
        java.lang.String str49 = byteOrderMark30.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 3 + "'", int47 == 3);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 3 + "'", int48 == 3);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str49, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2876");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray16);
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        byte[] byteArray24 = byteOrderMark0.getBytes();
        java.lang.String str25 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str25, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2877");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2878");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xA,0x61,0x23]", intArray9);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = byteOrderMark15.get(187);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 187 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2879");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int9 = byteOrderMark8.length();
        java.lang.Class<?> wildcardClass10 = byteOrderMark8.getClass();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) wildcardClass10);
        int int12 = byteOrderMark0.length();
        boolean boolean14 = byteOrderMark0.equals((java.lang.Object) "UTF-8");
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        java.lang.String str23 = byteOrderMark22.getCharsetName();
        java.lang.String str24 = byteOrderMark22.getCharsetName();
        java.lang.String str25 = byteOrderMark22.getCharsetName();
        int int26 = byteOrderMark22.length();
        int[] intArray30 = new int[] { 239, (byte) 10 };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        boolean boolean32 = byteOrderMark22.equals((java.lang.Object) byteOrderMark31);
        int int33 = byteOrderMark31.length();
        boolean boolean34 = byteOrderMark0.equals((java.lang.Object) byteOrderMark31);
        int int35 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 3 + "'", int26 == 3);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[239, 10]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2880");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray10);
        java.lang.String str18 = byteOrderMark17.getCharsetName();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]" + "'", str18, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]");
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2881");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int int19 = byteOrderMark18.length();
        boolean boolean20 = byteOrderMark0.equals((java.lang.Object) byteOrderMark18);
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray30);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray30);
        int int37 = byteOrderMark36.length();
        boolean boolean38 = byteOrderMark18.equals((java.lang.Object) int37);
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        byte[] byteArray53 = byteOrderMark52.getBytes();
        boolean boolean54 = byteOrderMark18.equals((java.lang.Object) byteOrderMark52);
        int[] intArray63 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("hi!", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray63);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray63);
        java.lang.String str69 = byteOrderMark68.getCharsetName();
        byte[] byteArray70 = byteOrderMark68.getBytes();
        boolean boolean71 = byteOrderMark18.equals((java.lang.Object) byteOrderMark68);
        int int72 = byteOrderMark18.length();
        // The following exception was thrown during execution in test generation
        try {
            int int74 = byteOrderMark18.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 3 + "'", int37 == 3);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "UTF-16BE" + "'", str69, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 3 + "'", int72 == 3);
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2882");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray10);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2883");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        java.lang.String str6 = byteOrderMark0.getCharsetName();
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) "hi!");
        int int15 = byteOrderMark0.get((int) (short) 1);
        int int16 = byteOrderMark0.length();
        byte[] byteArray17 = byteOrderMark0.getBytes();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray31);
        boolean boolean42 = byteOrderMark0.equals((java.lang.Object) intArray31);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 254 + "'", int15 == 254);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2884");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int11 = byteOrderMark10.length();
        java.lang.String str12 = byteOrderMark10.getCharsetName();
        java.lang.String str13 = byteOrderMark10.toString();
        java.lang.String str14 = byteOrderMark10.toString();
        java.lang.String str15 = byteOrderMark10.toString();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        boolean boolean30 = byteOrderMark10.equals((java.lang.Object) intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = byteOrderMark31.get(3);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2885");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray23);
        java.lang.String str31 = byteOrderMark30.getCharsetName();
        boolean boolean32 = byteOrderMark4.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj34 = null;
        boolean boolean35 = byteOrderMark33.equals(obj34);
        int int36 = byteOrderMark33.length();
        boolean boolean38 = byteOrderMark33.equals((java.lang.Object) 0L);
        int int39 = byteOrderMark33.length();
        int int40 = byteOrderMark33.length();
        int[] intArray47 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray47);
        boolean boolean51 = byteOrderMark33.equals((java.lang.Object) intArray47);
        int[] intArray59 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray59);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray59);
        int int64 = byteOrderMark63.length();
        boolean boolean65 = byteOrderMark33.equals((java.lang.Object) byteOrderMark63);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int68 = byteOrderMark66.get(0);
        boolean boolean70 = byteOrderMark66.equals((java.lang.Object) (short) 0);
        int[] intArray77 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("hi!", intArray77);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray77);
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("hi!", intArray77);
        boolean boolean81 = byteOrderMark66.equals((java.lang.Object) byteOrderMark80);
        boolean boolean82 = byteOrderMark33.equals((java.lang.Object) byteOrderMark66);
        boolean boolean83 = byteOrderMark4.equals((java.lang.Object) byteOrderMark66);
        org.apache.commons.io.ByteOrderMark byteOrderMark84 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int86 = byteOrderMark84.get(0);
        byte[] byteArray87 = byteOrderMark84.getBytes();
        java.lang.String str88 = byteOrderMark84.getCharsetName();
        int int89 = byteOrderMark84.length();
        java.lang.String str90 = byteOrderMark84.toString();
        byte[] byteArray91 = byteOrderMark84.getBytes();
        boolean boolean92 = byteOrderMark4.equals((java.lang.Object) byteArray91);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str31, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(byteOrderMark66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 255 + "'", int68 == 255);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(byteOrderMark84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 255 + "'", int86 == 255);
        org.junit.Assert.assertNotNull(byteArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray87), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "UTF-16LE" + "'", str88, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str90, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray91), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test2886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2886");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray5);
        java.lang.String str8 = byteOrderMark7.getCharsetName();
        byte[] byteArray9 = byteOrderMark7.getBytes();
        java.lang.String str10 = byteOrderMark7.toString();
        int int11 = byteOrderMark7.length();
        java.lang.String str12 = byteOrderMark7.toString();
        byte[] byteArray13 = byteOrderMark7.getBytes();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str10, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str12, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
    }

    @Test
    public void test2887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2887");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xFF,0x0,0xFE]", intArray11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("", intArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: No charsetName specified");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test2888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2888");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        int int13 = byteOrderMark12.length();
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) byteOrderMark29);
        int int31 = byteOrderMark12.length();
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray42);
        boolean boolean50 = byteOrderMark12.equals((java.lang.Object) intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray42);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test2889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2889");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        java.lang.Class<?> wildcardClass20 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2890");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        boolean boolean34 = byteOrderMark17.equals((java.lang.Object) byteOrderMark31);
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        java.lang.String str41 = byteOrderMark40.getCharsetName();
        java.lang.Object obj42 = null;
        boolean boolean43 = byteOrderMark40.equals(obj42);
        int int44 = byteOrderMark40.length();
        byte[] byteArray45 = byteOrderMark40.getBytes();
        java.lang.Class<?> wildcardClass46 = byteOrderMark40.getClass();
        boolean boolean47 = byteOrderMark31.equals((java.lang.Object) wildcardClass46);
        java.lang.String str48 = byteOrderMark31.getCharsetName();
        java.lang.String str49 = byteOrderMark31.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj51 = null;
        boolean boolean52 = byteOrderMark50.equals(obj51);
        int int53 = byteOrderMark50.length();
        boolean boolean55 = byteOrderMark50.equals((java.lang.Object) 0L);
        int int56 = byteOrderMark50.length();
        int int57 = byteOrderMark50.length();
        int[] intArray64 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray64);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("hi!", intArray64);
        boolean boolean68 = byteOrderMark50.equals((java.lang.Object) intArray64);
        int[] intArray76 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("hi!", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("hi!", intArray76);
        org.apache.commons.io.ByteOrderMark byteOrderMark80 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray76);
        int int81 = byteOrderMark80.length();
        boolean boolean82 = byteOrderMark50.equals((java.lang.Object) byteOrderMark80);
        boolean boolean83 = byteOrderMark31.equals((java.lang.Object) byteOrderMark50);
        java.lang.String str84 = byteOrderMark31.getCharsetName();
        java.lang.String str85 = byteOrderMark31.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "UTF-32BE" + "'", str48, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "UTF-32BE" + "'", str49, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 2 + "'", int53 == 2);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2 + "'", int57 == 2);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 3 + "'", int81 == 3);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "UTF-32BE" + "'", str84, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str85, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2891");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        int int17 = byteOrderMark15.length();
        int int18 = byteOrderMark15.length();
        int int19 = byteOrderMark15.length();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
    }

    @Test
    public void test2892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2892");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray12);
        int int23 = byteOrderMark21.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
    }

    @Test
    public void test2893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2893");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        java.lang.Class<?> wildcardClass20 = intArray11.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2894");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.getCharsetName();
        java.lang.String str19 = byteOrderMark13.toString();
        java.lang.Class<?> wildcardClass20 = byteOrderMark13.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str19, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2895");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        int int7 = byteOrderMark0.get((int) (byte) 0);
        java.lang.Class<?> wildcardClass8 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 255 + "'", int7 == 255);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2896");
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray16);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
    }

    @Test
    public void test2897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2897");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean4 = byteOrderMark2.equals((java.lang.Object) (-1L));
        java.lang.String str5 = byteOrderMark2.getCharsetName();
        java.lang.String str6 = byteOrderMark2.getCharsetName();
        boolean boolean7 = byteOrderMark0.equals((java.lang.Object) str6);
        int[] intArray20 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray20);
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str31 = byteOrderMark0.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int33 = byteOrderMark0.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 4");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-16LE" + "'", str6, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str31, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2898");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str27 = byteOrderMark13.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str29 = byteOrderMark28.toString();
        java.lang.String str30 = byteOrderMark28.toString();
        int int32 = byteOrderMark28.get(2);
        java.lang.String str33 = byteOrderMark28.toString();
        int int35 = byteOrderMark28.get(1);
        java.lang.Class<?> wildcardClass36 = byteOrderMark28.getClass();
        boolean boolean37 = byteOrderMark13.equals((java.lang.Object) wildcardClass36);
        byte[] byteArray38 = byteOrderMark13.getBytes();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-32BE" + "'", str27, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str30, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 254 + "'", int32 == 254);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str33, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[10, 97, 35]");
    }

    @Test
    public void test2899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2899");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        byte[] byteArray15 = byteOrderMark14.getBytes();
        byte[] byteArray16 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        boolean boolean22 = byteOrderMark17.equals((java.lang.Object) 0L);
        int int23 = byteOrderMark17.length();
        int int24 = byteOrderMark17.length();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) intArray31);
        boolean boolean36 = byteOrderMark14.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray31);
        java.lang.String str40 = byteOrderMark39.toString();
        byte[] byteArray41 = byteOrderMark39.getBytes();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[10, 97, 35]");
    }

    @Test
    public void test2900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2900");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        int int2 = byteOrderMark0.length();
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
    }

    @Test
    public void test2901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2901");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) (-1L));
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int14 = byteOrderMark12.get(0);
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        byte[] byteArray16 = byteOrderMark12.getBytes();
        boolean boolean17 = byteOrderMark8.equals((java.lang.Object) byteOrderMark12);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) boolean17);
        java.lang.String str19 = byteOrderMark0.getCharsetName();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj23 = null;
        boolean boolean24 = byteOrderMark22.equals(obj23);
        int int25 = byteOrderMark22.length();
        boolean boolean27 = byteOrderMark22.equals((java.lang.Object) 0L);
        byte[] byteArray28 = byteOrderMark22.getBytes();
        int[] intArray37 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray37);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray37);
        byte[] byteArray43 = byteOrderMark42.getBytes();
        int int44 = byteOrderMark42.length();
        java.lang.String str45 = byteOrderMark42.toString();
        int[] intArray51 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray51);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray51);
        byte[] byteArray54 = byteOrderMark53.getBytes();
        boolean boolean55 = byteOrderMark42.equals((java.lang.Object) byteOrderMark53);
        boolean boolean56 = byteOrderMark22.equals((java.lang.Object) boolean55);
        byte[] byteArray57 = byteOrderMark22.getBytes();
        boolean boolean58 = byteOrderMark0.equals((java.lang.Object) byteOrderMark22);
        java.lang.String str59 = byteOrderMark22.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 255 + "'", int14 == 255);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-16LE" + "'", str15, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[-2, -1]");
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 3 + "'", int44 == 3);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str45, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "UTF-16BE" + "'", str59, "UTF-16BE");
    }

    @Test
    public void test2902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2902");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        java.lang.String str23 = byteOrderMark21.toString();
        java.lang.String str24 = byteOrderMark21.getCharsetName();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
    }

    @Test
    public void test2903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2903");
        int[] intArray3 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray3);
        java.lang.String str6 = byteOrderMark5.toString();
        int int7 = byteOrderMark5.length();
        byte[] byteArray8 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[255]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-8: 0xFF]" + "'", str6, "ByteOrderMark[UTF-8: 0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1]");
    }

    @Test
    public void test2904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2904");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        java.lang.String str4 = byteOrderMark0.toString();
        java.lang.String str5 = byteOrderMark0.toString();
        int int6 = byteOrderMark0.length();
        byte[] byteArray7 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str4, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str5, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
    }

    @Test
    public void test2905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2905");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        int int20 = byteOrderMark19.length();
        java.lang.String str21 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean24 = byteOrderMark22.equals((java.lang.Object) 1L);
        java.lang.String str25 = byteOrderMark22.getCharsetName();
        int int26 = byteOrderMark22.length();
        boolean boolean28 = byteOrderMark22.equals((java.lang.Object) (byte) -1);
        byte[] byteArray29 = byteOrderMark22.getBytes();
        java.lang.String str30 = byteOrderMark22.getCharsetName();
        java.lang.String str31 = byteOrderMark22.getCharsetName();
        java.lang.String str32 = byteOrderMark22.toString();
        int[] intArray43 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("hi!", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray43);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray43);
        boolean boolean51 = byteOrderMark22.equals((java.lang.Object) byteOrderMark50);
        java.lang.String str52 = byteOrderMark22.toString();
        java.lang.Class<?> wildcardClass53 = byteOrderMark22.getClass();
        boolean boolean54 = byteOrderMark19.equals((java.lang.Object) wildcardClass53);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "UTF-16LE" + "'", str31, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str32, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str52, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test2906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2906");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0x0,0xA,0xFF]", intArray9);
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        java.lang.String str30 = byteOrderMark29.getCharsetName();
        byte[] byteArray31 = byteOrderMark29.getBytes();
        boolean boolean32 = byteOrderMark15.equals((java.lang.Object) byteOrderMark29);
        int[] intArray48 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("hi!", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray48);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray48);
        boolean boolean61 = byteOrderMark29.equals((java.lang.Object) intArray48);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "UTF-16LE" + "'", str30, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test2907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2907");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray8);
        byte[] byteArray13 = byteOrderMark12.getBytes();
        byte[] byteArray14 = byteOrderMark12.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj16 = null;
        boolean boolean17 = byteOrderMark15.equals(obj16);
        int int18 = byteOrderMark15.length();
        boolean boolean20 = byteOrderMark15.equals((java.lang.Object) 0L);
        int int21 = byteOrderMark15.length();
        int int22 = byteOrderMark15.length();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        boolean boolean33 = byteOrderMark15.equals((java.lang.Object) intArray29);
        boolean boolean34 = byteOrderMark12.equals((java.lang.Object) intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray29);
        int int36 = byteOrderMark35.length();
        java.lang.String str37 = byteOrderMark35.getCharsetName();
        java.lang.String str38 = byteOrderMark35.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 3 + "'", int36 == 3);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str37, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str38, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2908");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean18 = byteOrderMark16.equals((java.lang.Object) 1L);
        java.lang.String str19 = byteOrderMark16.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean21 = byteOrderMark16.equals((java.lang.Object) byteOrderMark20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean24 = byteOrderMark22.equals((java.lang.Object) (-1L));
        java.lang.String str25 = byteOrderMark22.toString();
        int int26 = byteOrderMark22.length();
        boolean boolean27 = byteOrderMark20.equals((java.lang.Object) int26);
        int int28 = byteOrderMark20.length();
        boolean boolean29 = byteOrderMark15.equals((java.lang.Object) int28);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str25, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2909");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        java.lang.String str26 = byteOrderMark25.getCharsetName();
        java.lang.Object obj27 = null;
        boolean boolean28 = byteOrderMark25.equals(obj27);
        int int29 = byteOrderMark25.length();
        byte[] byteArray30 = byteOrderMark25.getBytes();
        byte[] byteArray31 = byteOrderMark25.getBytes();
        boolean boolean32 = byteOrderMark19.equals((java.lang.Object) byteOrderMark25);
        java.lang.String str33 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 3 + "'", int29 == 3);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str33, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2910");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray10 = byteOrderMark9.getBytes();
        boolean boolean11 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        int int13 = byteOrderMark0.get((int) (short) 0);
        java.lang.String str14 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 255 + "'", int13 == 255);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UTF-16LE" + "'", str14, "UTF-16LE");
    }

    @Test
    public void test2911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2911");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        byte[] byteArray32 = byteOrderMark31.getBytes();
        java.lang.String str33 = byteOrderMark31.getCharsetName();
        boolean boolean34 = byteOrderMark17.equals((java.lang.Object) byteOrderMark31);
        java.lang.String str35 = byteOrderMark17.toString();
        // The following exception was thrown during execution in test generation
        try {
            int int37 = byteOrderMark17.get((int) '\ufeff');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 65279 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "UTF-32BE" + "'", str33, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str35, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2912");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        int int20 = byteOrderMark17.get(0);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
    }

    @Test
    public void test2913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2913");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean8 = byteOrderMark6.equals((java.lang.Object) (-1L));
        java.lang.String str9 = byteOrderMark6.toString();
        int int10 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) int10);
        java.lang.String str12 = byteOrderMark4.getCharsetName();
        java.lang.String str13 = byteOrderMark4.toString();
        byte[] byteArray14 = byteOrderMark4.getBytes();
        java.lang.String str15 = byteOrderMark4.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16BE" + "'", str12, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
    }

    @Test
    public void test2914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2914");
        int[] intArray6 = new int[] { 10, 254, 100 };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray6);
        int int11 = byteOrderMark9.get(0);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 254, 100]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test2915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2915");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray7);
        java.lang.String str12 = byteOrderMark11.getCharsetName();
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark11.equals(obj13);
        byte[] byteArray15 = byteOrderMark11.getBytes();
        java.lang.Class<?> wildcardClass16 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-32BE" + "'", str12, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2916");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray11);
        int int20 = byteOrderMark19.length();
        java.lang.String str21 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 3 + "'", int20 == 3);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
    }

    @Test
    public void test2917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2917");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray33);
        java.lang.String str42 = byteOrderMark41.getCharsetName();
        boolean boolean43 = byteOrderMark21.equals((java.lang.Object) byteOrderMark41);
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray49);
        boolean boolean52 = byteOrderMark41.equals((java.lang.Object) byteOrderMark51);
        java.lang.String str53 = byteOrderMark41.toString();
        java.lang.String str54 = byteOrderMark41.toString();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str42, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str53, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str54, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2918");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        boolean boolean18 = byteOrderMark0.equals((java.lang.Object) intArray14);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int31 = byteOrderMark30.length();
        boolean boolean32 = byteOrderMark0.equals((java.lang.Object) byteOrderMark30);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean35 = byteOrderMark33.equals((java.lang.Object) 1L);
        java.lang.String str36 = byteOrderMark33.getCharsetName();
        int int37 = byteOrderMark33.length();
        boolean boolean39 = byteOrderMark33.equals((java.lang.Object) (byte) -1);
        byte[] byteArray40 = byteOrderMark33.getBytes();
        java.lang.String str41 = byteOrderMark33.getCharsetName();
        java.lang.String str42 = byteOrderMark33.getCharsetName();
        java.lang.String str43 = byteOrderMark33.toString();
        int int44 = byteOrderMark33.length();
        int int45 = byteOrderMark33.length();
        boolean boolean46 = byteOrderMark30.equals((java.lang.Object) byteOrderMark33);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean49 = byteOrderMark47.equals((java.lang.Object) (-1L));
        java.lang.String str50 = byteOrderMark47.toString();
        byte[] byteArray51 = byteOrderMark47.getBytes();
        byte[] byteArray52 = byteOrderMark47.getBytes();
        byte[] byteArray53 = byteOrderMark47.getBytes();
        java.lang.String str54 = byteOrderMark47.getCharsetName();
        boolean boolean55 = byteOrderMark33.equals((java.lang.Object) byteOrderMark47);
        int int56 = byteOrderMark47.length();
        java.lang.String str57 = byteOrderMark47.toString();
        int int58 = byteOrderMark47.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(byteOrderMark33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-16LE" + "'", str36, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UTF-16LE" + "'", str41, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-16LE" + "'", str42, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str43, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2 + "'", int44 == 2);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(byteOrderMark47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str50, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "UTF-16LE" + "'", str54, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 2 + "'", int56 == 2);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str57, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
    }

    @Test
    public void test2919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2919");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        int int4 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray6 = byteOrderMark5.getBytes();
        int int7 = byteOrderMark5.length();
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        java.lang.String str9 = byteOrderMark5.getCharsetName();
        java.lang.String str10 = byteOrderMark5.getCharsetName();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        boolean boolean12 = byteOrderMark0.equals((java.lang.Object) byteOrderMark5);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str14 = byteOrderMark13.toString();
        boolean boolean16 = byteOrderMark13.equals((java.lang.Object) ' ');
        java.lang.String str17 = byteOrderMark13.toString();
        java.lang.String str18 = byteOrderMark13.getCharsetName();
        byte[] byteArray19 = byteOrderMark13.getBytes();
        int int20 = byteOrderMark13.length();
        boolean boolean21 = byteOrderMark5.equals((java.lang.Object) int20);
        java.lang.String str22 = byteOrderMark5.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16LE" + "'", str10, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-32BE" + "'", str18, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 4 + "'", int20 == 4);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UTF-16LE" + "'", str22, "UTF-16LE");
    }

    @Test
    public void test2920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2920");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) wildcardClass40);
        int int43 = byteOrderMark0.get(0);
        byte[] byteArray44 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[0, 0, -2, -1]");
    }

    @Test
    public void test2921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2921");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        byte[] byteArray12 = byteOrderMark11.getBytes();
        byte[] byteArray13 = byteOrderMark11.getBytes();
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        boolean boolean16 = byteOrderMark11.equals((java.lang.Object) (short) -1);
        java.lang.String str17 = byteOrderMark11.toString();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray29);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray29);
        int int38 = byteOrderMark37.length();
        boolean boolean39 = byteOrderMark11.equals((java.lang.Object) byteOrderMark37);
        int[] intArray47 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray47);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray47);
        boolean boolean52 = byteOrderMark37.equals((java.lang.Object) byteOrderMark51);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = byteOrderMark51.get(10);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 10 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str14, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 3 + "'", int38 == 3);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2922");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.toString();
        byte[] byteArray4 = byteOrderMark0.getBytes();
        byte[] byteArray5 = byteOrderMark0.getBytes();
        byte[] byteArray6 = byteOrderMark0.getBytes();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark0.equals(obj7);
        int int10 = byteOrderMark0.get((int) (short) 0);
        int int11 = byteOrderMark0.length();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str3, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 255 + "'", int10 == 255);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-1, -2]");
    }

    @Test
    public void test2923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2923");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int int10 = byteOrderMark0.length();
        java.lang.String str11 = byteOrderMark0.getCharsetName();
        java.lang.String str12 = byteOrderMark0.toString();
        int int14 = byteOrderMark0.get((int) (byte) 0);
        java.lang.Class<?> wildcardClass15 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16BE" + "'", str11, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str12, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 254 + "'", int14 == 254);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test2924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2924");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        int int24 = byteOrderMark23.length();
        byte[] byteArray25 = byteOrderMark23.getBytes();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[10, 97, 35]");
    }

    @Test
    public void test2925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2925");
        org.apache.commons.io.ByteOrderMark byteOrderMark2 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int4 = byteOrderMark2.get((int) (byte) 0);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        boolean boolean22 = byteOrderMark2.equals((java.lang.Object) byteOrderMark20);
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray32);
        boolean boolean39 = byteOrderMark2.equals((java.lang.Object) intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj43 = null;
        boolean boolean44 = byteOrderMark42.equals(obj43);
        int int45 = byteOrderMark42.length();
        boolean boolean47 = byteOrderMark42.equals((java.lang.Object) 0L);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray56);
        byte[] byteArray62 = byteOrderMark61.getBytes();
        boolean boolean63 = byteOrderMark42.equals((java.lang.Object) byteOrderMark61);
        byte[] byteArray64 = byteOrderMark61.getBytes();
        byte[] byteArray65 = byteOrderMark61.getBytes();
        int int66 = byteOrderMark61.length();
        boolean boolean67 = byteOrderMark41.equals((java.lang.Object) byteOrderMark61);
        int int68 = byteOrderMark41.length();
        org.junit.Assert.assertNotNull(byteOrderMark2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 239 + "'", int4 == 239);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(byteOrderMark42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 3 + "'", int68 == 3);
    }

    @Test
    public void test2926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2926");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        byte[] byteArray14 = byteOrderMark12.getBytes();
        java.lang.String str15 = byteOrderMark12.getCharsetName();
        java.lang.String str16 = byteOrderMark12.toString();
        byte[] byteArray17 = byteOrderMark12.getBytes();
        java.lang.String str18 = byteOrderMark12.toString();
        int[] intArray28 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray28);
        int int35 = byteOrderMark34.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj37 = null;
        boolean boolean38 = byteOrderMark36.equals(obj37);
        byte[] byteArray39 = byteOrderMark36.getBytes();
        java.lang.String str40 = byteOrderMark36.toString();
        int int42 = byteOrderMark36.get((int) (byte) 0);
        boolean boolean43 = byteOrderMark34.equals((java.lang.Object) byteOrderMark36);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int46 = byteOrderMark44.get(0);
        byte[] byteArray47 = byteOrderMark44.getBytes();
        byte[] byteArray48 = byteOrderMark44.getBytes();
        int int49 = byteOrderMark44.length();
        int[] intArray60 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark66 = new org.apache.commons.io.ByteOrderMark("hi!", intArray60);
        org.apache.commons.io.ByteOrderMark byteOrderMark67 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray60);
        boolean boolean68 = byteOrderMark44.equals((java.lang.Object) byteOrderMark67);
        boolean boolean69 = byteOrderMark34.equals((java.lang.Object) byteOrderMark67);
        boolean boolean70 = byteOrderMark12.equals((java.lang.Object) byteOrderMark67);
        java.lang.String str71 = byteOrderMark67.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UTF-8" + "'", str15, "UTF-8");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str16, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[-17, -69, -65]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str18, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str40, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 254 + "'", int42 == 254);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(byteOrderMark44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 255 + "'", int46 == 255);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "ByteOrderMark[UTF-8: 0xA,0x61,0x23]" + "'", str71, "ByteOrderMark[UTF-8: 0xA,0x61,0x23]");
    }

    @Test
    public void test2927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2927");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.toString();
        int int11 = byteOrderMark0.length();
        int int13 = byteOrderMark0.get((int) (byte) 1);
        int[] intArray19 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray19);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray19);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        java.lang.String str23 = byteOrderMark0.toString();
        int int24 = byteOrderMark0.length();
        java.lang.String str25 = byteOrderMark0.toString();
        byte[] byteArray26 = byteOrderMark0.getBytes();
        int int27 = byteOrderMark0.length();
        java.lang.String str28 = byteOrderMark0.getCharsetName();
        byte[] byteArray29 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str10, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 254 + "'", int13 == 254);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str25, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-16LE" + "'", str28, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[-1, -2]");
    }

    @Test
    public void test2928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2928");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        java.lang.Class<?> wildcardClass20 = byteOrderMark19.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2929");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        int int10 = byteOrderMark9.length();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        java.lang.String str17 = byteOrderMark16.getCharsetName();
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark16.equals(obj18);
        boolean boolean20 = byteOrderMark9.equals(obj18);
        byte[] byteArray21 = byteOrderMark9.getBytes();
        byte[] byteArray22 = byteOrderMark9.getBytes();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 3 + "'", int10 == 3);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[10, 97, 35]");
    }

    @Test
    public void test2930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2930");
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray15);
        int int28 = byteOrderMark27.length();
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
    }

    @Test
    public void test2931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2931");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray6 = byteOrderMark4.getBytes();
        int int7 = byteOrderMark4.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean10 = byteOrderMark8.equals((java.lang.Object) 1L);
        java.lang.String str11 = byteOrderMark8.getCharsetName();
        int int12 = byteOrderMark8.length();
        boolean boolean14 = byteOrderMark8.equals((java.lang.Object) (byte) -1);
        byte[] byteArray15 = byteOrderMark8.getBytes();
        java.lang.String str16 = byteOrderMark8.getCharsetName();
        java.lang.String str17 = byteOrderMark8.getCharsetName();
        java.lang.String str18 = byteOrderMark8.getCharsetName();
        boolean boolean19 = byteOrderMark4.equals((java.lang.Object) byteOrderMark8);
        byte[] byteArray20 = byteOrderMark4.getBytes();
        java.lang.String str21 = byteOrderMark4.toString();
        boolean boolean23 = byteOrderMark4.equals((java.lang.Object) "UTF-32BE");
        java.lang.String str24 = byteOrderMark4.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16LE" + "'", str11, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "UTF-16LE" + "'", str17, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16LE" + "'", str18, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str21, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16BE" + "'", str24, "UTF-16BE");
    }

    @Test
    public void test2932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2932");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int13 = byteOrderMark11.get((int) (short) 1);
        java.lang.String str14 = byteOrderMark11.getCharsetName();
        byte[] byteArray15 = byteOrderMark11.getBytes();
        int int16 = byteOrderMark11.length();
        java.lang.String str17 = byteOrderMark11.toString();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        int int28 = byteOrderMark27.length();
        java.lang.String str29 = byteOrderMark27.getCharsetName();
        java.lang.String str30 = byteOrderMark27.toString();
        java.lang.String str31 = byteOrderMark27.toString();
        java.lang.String str32 = byteOrderMark27.toString();
        byte[] byteArray33 = byteOrderMark27.getBytes();
        boolean boolean34 = byteOrderMark11.equals((java.lang.Object) byteOrderMark27);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str17, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 3 + "'", int28 == 3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str31, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str32, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test2933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2933");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        byte[] byteArray9 = byteOrderMark0.getBytes();
        byte[] byteArray10 = byteOrderMark0.getBytes();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        java.lang.Class<?> wildcardClass29 = byteOrderMark28.getClass();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        int int31 = byteOrderMark0.length();
        java.lang.String str32 = byteOrderMark0.getCharsetName();
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        boolean boolean53 = byteOrderMark0.equals((java.lang.Object) byteOrderMark52);
        int int54 = byteOrderMark52.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 4 + "'", int31 == 4);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-32BE" + "'", str32, "UTF-32BE");
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 3 + "'", int54 == 3);
    }

    @Test
    public void test2934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2934");
        int[] intArray4 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray4);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray4);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[255]");
    }

    @Test
    public void test2935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2935");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.toString();
        byte[] byteArray12 = byteOrderMark5.getBytes();
        int int13 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
    }

    @Test
    public void test2936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2936");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        java.lang.String str14 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
    }

    @Test
    public void test2937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2937");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        java.lang.String str5 = byteOrderMark0.toString();
        java.lang.String str6 = byteOrderMark0.toString();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str5, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 4 + "'", int7 == 4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-32BE" + "'", str8, "UTF-32BE");
    }

    @Test
    public void test2938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2938");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        int int13 = byteOrderMark11.get((int) (byte) 0);
        java.lang.String str14 = byteOrderMark11.toString();
        java.lang.String str15 = byteOrderMark11.toString();
        java.lang.Class<?> wildcardClass16 = byteOrderMark11.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2939");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        java.lang.String str9 = byteOrderMark7.toString();
        byte[] byteArray10 = byteOrderMark7.getBytes();
        int int11 = byteOrderMark7.length();
        int int12 = byteOrderMark7.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean15 = byteOrderMark13.equals((java.lang.Object) 1L);
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        int int17 = byteOrderMark13.length();
        java.lang.String str18 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) 1L);
        java.lang.String str23 = byteOrderMark20.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) byteOrderMark24);
        byte[] byteArray26 = byteOrderMark24.getBytes();
        int int27 = byteOrderMark24.length();
        int int28 = byteOrderMark24.length();
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        boolean boolean45 = byteOrderMark24.equals((java.lang.Object) intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray38);
        boolean boolean47 = byteOrderMark13.equals((java.lang.Object) intArray38);
        boolean boolean48 = byteOrderMark7.equals((java.lang.Object) boolean47);
        byte[] byteArray49 = byteOrderMark7.getBytes();
        int[] intArray58 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark60 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray58);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("hi!", intArray58);
        byte[] byteArray64 = byteOrderMark63.getBytes();
        byte[] byteArray65 = byteOrderMark63.getBytes();
        java.lang.Class<?> wildcardClass66 = byteOrderMark63.getClass();
        boolean boolean67 = byteOrderMark7.equals((java.lang.Object) wildcardClass66);
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str9, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str18, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 2 + "'", int27 == 2);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2940");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray8);
        java.lang.String str14 = byteOrderMark13.toString();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str16, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test2941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2941");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        int int21 = byteOrderMark19.get((int) (byte) 0);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
    }

    @Test
    public void test2942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2942");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray10);
        byte[] byteArray15 = byteOrderMark14.getBytes();
        byte[] byteArray16 = byteOrderMark14.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        boolean boolean22 = byteOrderMark17.equals((java.lang.Object) 0L);
        int int23 = byteOrderMark17.length();
        int int24 = byteOrderMark17.length();
        int[] intArray31 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray31);
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) intArray31);
        boolean boolean36 = byteOrderMark14.equals((java.lang.Object) intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray31);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray31);
        java.lang.String str40 = byteOrderMark39.toString();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]: 0xA,0x61,0x23]" + "'", str40, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2943");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        byte[] byteArray14 = byteOrderMark13.getBytes();
        int int15 = byteOrderMark13.length();
        java.lang.String str16 = byteOrderMark13.toString();
        byte[] byteArray17 = byteOrderMark13.getBytes();
        java.lang.String str18 = byteOrderMark13.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean21 = byteOrderMark19.equals((java.lang.Object) (-1L));
        java.lang.String str22 = byteOrderMark19.toString();
        byte[] byteArray23 = byteOrderMark19.getBytes();
        byte[] byteArray24 = byteOrderMark19.getBytes();
        java.lang.String str25 = byteOrderMark19.getCharsetName();
        int[] intArray30 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray30);
        boolean boolean32 = byteOrderMark19.equals((java.lang.Object) "hi!");
        boolean boolean33 = byteOrderMark13.equals((java.lang.Object) byteOrderMark19);
        java.lang.String str34 = byteOrderMark19.toString();
        java.lang.String str35 = byteOrderMark19.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = org.apache.commons.io.ByteOrderMark.UTF_8;
        byte[] byteArray37 = byteOrderMark36.getBytes();
        boolean boolean38 = byteOrderMark19.equals((java.lang.Object) byteOrderMark36);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str16, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str18, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteOrderMark19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "UTF-16LE" + "'", str25, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str34, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UTF-16LE" + "'", str35, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark36);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2944");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray1 = byteOrderMark0.getBytes();
        java.lang.String str2 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int5 = byteOrderMark3.get((int) (byte) 0);
        byte[] byteArray6 = byteOrderMark3.getBytes();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int[] intArray18 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("hi!", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray18);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray18);
        boolean boolean25 = byteOrderMark0.equals((java.lang.Object) intArray18);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray33);
        boolean boolean38 = byteOrderMark0.equals((java.lang.Object) byteOrderMark37);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        byte[] byteArray40 = byteOrderMark39.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean43 = byteOrderMark41.equals((java.lang.Object) 1L);
        java.lang.String str44 = byteOrderMark41.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean46 = byteOrderMark41.equals((java.lang.Object) byteOrderMark45);
        boolean boolean47 = byteOrderMark39.equals((java.lang.Object) byteOrderMark41);
        byte[] byteArray48 = byteOrderMark41.getBytes();
        boolean boolean49 = byteOrderMark37.equals((java.lang.Object) byteOrderMark41);
        java.lang.String str50 = byteOrderMark41.getCharsetName();
        int int51 = byteOrderMark41.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "UTF-32BE" + "'", str2, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 239 + "'", int5 == 239);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrderMark39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "UTF-16LE" + "'", str44, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "UTF-16LE" + "'", str50, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 2 + "'", int51 == 2);
    }

    @Test
    public void test2945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2945");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        byte[] byteArray9 = byteOrderMark5.getBytes();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        byte[] byteArray11 = byteOrderMark5.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj13 = null;
        boolean boolean14 = byteOrderMark12.equals(obj13);
        int int15 = byteOrderMark12.length();
        boolean boolean17 = byteOrderMark12.equals((java.lang.Object) 0L);
        int int18 = byteOrderMark12.length();
        int int19 = byteOrderMark12.length();
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        boolean boolean30 = byteOrderMark12.equals((java.lang.Object) intArray26);
        int[] intArray38 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("hi!", intArray38);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray38);
        int int43 = byteOrderMark42.length();
        boolean boolean44 = byteOrderMark12.equals((java.lang.Object) byteOrderMark42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int47 = byteOrderMark45.get(0);
        boolean boolean49 = byteOrderMark45.equals((java.lang.Object) (short) 0);
        int[] intArray56 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray56);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("hi!", intArray56);
        boolean boolean60 = byteOrderMark45.equals((java.lang.Object) byteOrderMark59);
        boolean boolean61 = byteOrderMark12.equals((java.lang.Object) byteOrderMark45);
        byte[] byteArray62 = byteOrderMark45.getBytes();
        boolean boolean63 = byteOrderMark5.equals((java.lang.Object) byteArray62);
        int[] intArray73 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark74 = new org.apache.commons.io.ByteOrderMark("hi!", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("hi!", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark78 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray73);
        org.apache.commons.io.ByteOrderMark byteOrderMark79 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray73);
        boolean boolean80 = byteOrderMark5.equals((java.lang.Object) intArray73);
        java.lang.String str81 = byteOrderMark5.toString();
        byte[] byteArray82 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 3 + "'", int43 == 3);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(byteOrderMark45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 255 + "'", int47 == 255);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str81, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[10, 97, 35]");
    }

    @Test
    public void test2946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2946");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test2947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2947");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xEF,0xA]", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test2948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2948");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) ' ');
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str6 = byteOrderMark0.toString();
        int int8 = byteOrderMark0.get((int) (short) 0);
        byte[] byteArray9 = byteOrderMark0.getBytes();
        byte[] byteArray10 = byteOrderMark0.getBytes();
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        java.lang.Class<?> wildcardClass29 = byteOrderMark28.getClass();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark28);
        byte[] byteArray31 = byteOrderMark28.getBytes();
        java.lang.Class<?> wildcardClass32 = byteOrderMark28.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str6, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2949");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        java.lang.String str5 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark6.equals(obj7);
        int int9 = byteOrderMark6.length();
        boolean boolean11 = byteOrderMark6.equals((java.lang.Object) 0L);
        byte[] byteArray12 = byteOrderMark6.getBytes();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteArray12);
        int int14 = byteOrderMark0.length();
        int int15 = byteOrderMark0.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-16LE" + "'", str5, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
    }

    @Test
    public void test2950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2950");
        int[] intArray6 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("hi!", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray6);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray6);
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[10, 97, 35]");
    }

    @Test
    public void test2951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2951");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test2952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2952");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]", intArray13);
        int int24 = byteOrderMark23.length();
        java.lang.String str25 = byteOrderMark23.toString();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 3 + "'", int24 == 3);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str25, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2953");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
    }

    @Test
    public void test2954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2954");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int2 = byteOrderMark0.get((int) (byte) 0);
        int int3 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray5 = byteOrderMark4.getBytes();
        java.lang.String str6 = byteOrderMark4.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int9 = byteOrderMark7.get((int) (byte) 0);
        byte[] byteArray10 = byteOrderMark7.getBytes();
        byte[] byteArray11 = byteOrderMark7.getBytes();
        boolean boolean12 = byteOrderMark4.equals((java.lang.Object) byteOrderMark7);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int15 = byteOrderMark13.get(0);
        java.lang.String str16 = byteOrderMark13.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj18 = null;
        boolean boolean19 = byteOrderMark17.equals(obj18);
        int int20 = byteOrderMark17.length();
        boolean boolean22 = byteOrderMark17.equals((java.lang.Object) 0L);
        int int23 = byteOrderMark17.length();
        boolean boolean24 = byteOrderMark13.equals((java.lang.Object) int23);
        int int26 = byteOrderMark13.get(0);
        boolean boolean27 = byteOrderMark4.equals((java.lang.Object) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean30 = byteOrderMark28.equals((java.lang.Object) (-1L));
        java.lang.String str31 = byteOrderMark28.toString();
        byte[] byteArray32 = byteOrderMark28.getBytes();
        java.lang.Class<?> wildcardClass33 = byteArray32.getClass();
        boolean boolean34 = byteOrderMark4.equals((java.lang.Object) wildcardClass33);
        int int35 = byteOrderMark4.length();
        java.lang.String str36 = byteOrderMark4.getCharsetName();
        boolean boolean37 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        int[] intArray50 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark53 = new org.apache.commons.io.ByteOrderMark("hi!", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark54 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark55 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark56 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark58 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray50);
        org.apache.commons.io.ByteOrderMark byteOrderMark59 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray50);
        byte[] byteArray60 = byteOrderMark59.getBytes();
        boolean boolean61 = byteOrderMark4.equals((java.lang.Object) byteArray60);
        java.lang.String str62 = byteOrderMark4.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 239 + "'", int2 == 239);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 3 + "'", int3 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UTF-32BE" + "'", str6, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 239 + "'", int9 == 239);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(byteOrderMark13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 255 + "'", int15 == 255);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 255 + "'", int26 == 255);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrderMark28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str31, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[-1, -2]");
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 4 + "'", int35 == 4);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "UTF-32BE" + "'", str36, "UTF-32BE");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UTF-32BE" + "'", str62, "UTF-32BE");
    }

    @Test
    public void test2955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2955");
        int[] intArray8 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str15 = byteOrderMark14.toString();
        boolean boolean17 = byteOrderMark14.equals((java.lang.Object) ' ');
        java.lang.String str18 = byteOrderMark14.toString();
        java.lang.String str19 = byteOrderMark14.getCharsetName();
        byte[] byteArray20 = byteOrderMark14.getBytes();
        java.lang.Class<?> wildcardClass21 = byteOrderMark14.getClass();
        boolean boolean22 = byteOrderMark13.equals((java.lang.Object) byteOrderMark14);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 254]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str15, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-32BE" + "'", str19, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2956");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int10 = byteOrderMark0.length();
        int int12 = byteOrderMark0.get((int) (short) 0);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 255 + "'", int12 == 255);
    }

    @Test
    public void test2957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2957");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.getCharsetName();
        int int22 = byteOrderMark19.get((int) (byte) 1);
        java.lang.String str23 = byteOrderMark19.toString();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 97 + "'", int22 == 97);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str23, "ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2958");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xFF,0x0,0xFE]", intArray11);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
    }

    @Test
    public void test2959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2959");
        int[] intArray3 = new int[] { 255 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray3);
        java.lang.String str6 = byteOrderMark5.toString();
        int int7 = byteOrderMark5.length();
        java.lang.String str8 = byteOrderMark5.getCharsetName();
        int int9 = byteOrderMark5.length();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[255]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-8: 0xFF]" + "'", str6, "ByteOrderMark[UTF-8: 0xFF]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-8" + "'", str8, "UTF-8");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
    }

    @Test
    public void test2960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2960");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray10);
        int int18 = byteOrderMark17.length();
        int int19 = byteOrderMark17.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 3 + "'", int19 == 3);
    }

    @Test
    public void test2961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2961");
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray16);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
    }

    @Test
    public void test2962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2962");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray9);
        int int16 = byteOrderMark15.length();
        java.lang.String str17 = byteOrderMark15.getCharsetName();
        byte[] byteArray18 = byteOrderMark15.getBytes();
        byte[] byteArray19 = byteOrderMark15.getBytes();
        java.lang.String str20 = byteOrderMark15.getCharsetName();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = byteOrderMark15.get(35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 35 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str20, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2963");
        int[] intArray16 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray16);
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str53 = byteOrderMark52.toString();
        java.lang.String str54 = byteOrderMark52.toString();
        int int56 = byteOrderMark52.get(2);
        boolean boolean58 = byteOrderMark52.equals((java.lang.Object) (byte) 10);
        byte[] byteArray59 = byteOrderMark52.getBytes();
        boolean boolean60 = byteOrderMark51.equals((java.lang.Object) byteOrderMark52);
        org.apache.commons.io.ByteOrderMark byteOrderMark61 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean63 = byteOrderMark61.equals((java.lang.Object) (-1L));
        java.lang.String str64 = byteOrderMark61.getCharsetName();
        java.lang.String str65 = byteOrderMark61.getCharsetName();
        java.lang.String str66 = byteOrderMark61.getCharsetName();
        java.lang.String str67 = byteOrderMark61.toString();
        int[] intArray74 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark75 = new org.apache.commons.io.ByteOrderMark("hi!", intArray74);
        org.apache.commons.io.ByteOrderMark byteOrderMark76 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray74);
        org.apache.commons.io.ByteOrderMark byteOrderMark77 = new org.apache.commons.io.ByteOrderMark("hi!", intArray74);
        int int78 = byteOrderMark77.length();
        int[] intArray83 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark84 = new org.apache.commons.io.ByteOrderMark("hi!", intArray83);
        java.lang.String str85 = byteOrderMark84.getCharsetName();
        java.lang.Object obj86 = null;
        boolean boolean87 = byteOrderMark84.equals(obj86);
        boolean boolean88 = byteOrderMark77.equals(obj86);
        org.apache.commons.io.ByteOrderMark byteOrderMark89 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean91 = byteOrderMark89.equals((java.lang.Object) (-1L));
        java.lang.String str92 = byteOrderMark89.getCharsetName();
        java.lang.String str93 = byteOrderMark89.getCharsetName();
        java.lang.String str94 = byteOrderMark89.getCharsetName();
        boolean boolean95 = byteOrderMark77.equals((java.lang.Object) byteOrderMark89);
        boolean boolean96 = byteOrderMark61.equals((java.lang.Object) byteOrderMark89);
        boolean boolean97 = byteOrderMark52.equals((java.lang.Object) byteOrderMark61);
        boolean boolean98 = byteOrderMark29.equals((java.lang.Object) boolean97);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str53, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str54, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 254 + "'", int56 == 254);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteOrderMark61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "UTF-16LE" + "'", str64, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "UTF-16LE" + "'", str65, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "UTF-16LE" + "'", str66, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str67, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 3 + "'", int78 == 3);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!" + "'", str85, "hi!");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(byteOrderMark89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "UTF-16LE" + "'", str92, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "UTF-16LE" + "'", str93, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "UTF-16LE" + "'", str94, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test2964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2964");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        int int10 = byteOrderMark0.get(0);
        java.lang.String str11 = byteOrderMark0.getCharsetName();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        java.lang.Class<?> wildcardClass13 = byteArray12.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 254 + "'", int10 == 254);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UTF-16BE" + "'", str11, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2965");
        int[] intArray4 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("hi!", intArray4);
        java.lang.String str6 = byteOrderMark5.getCharsetName();
        java.lang.Object obj7 = null;
        boolean boolean8 = byteOrderMark5.equals(obj7);
        int int9 = byteOrderMark5.length();
        byte[] byteArray10 = byteOrderMark5.getBytes();
        java.lang.String str11 = byteOrderMark5.toString();
        byte[] byteArray12 = byteOrderMark5.getBytes();
        java.lang.String str13 = byteOrderMark5.toString();
        java.lang.String str14 = byteOrderMark5.toString();
        byte[] byteArray15 = byteOrderMark5.getBytes();
        int int16 = byteOrderMark5.length();
        java.lang.Class<?> wildcardClass17 = byteOrderMark5.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 3 + "'", int9 == 3);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str11, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2966");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray9);
        java.lang.Class<?> wildcardClass16 = intArray9.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2967");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) (-1L));
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int6 = byteOrderMark4.get(0);
        java.lang.String str7 = byteOrderMark4.getCharsetName();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        byte[] byteArray10 = byteOrderMark4.getBytes();
        int[] intArray16 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray16);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray16);
        int int20 = byteOrderMark18.get((int) (short) 0);
        boolean boolean21 = byteOrderMark4.equals((java.lang.Object) (short) 0);
        java.lang.String str22 = byteOrderMark4.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 255 + "'", int6 == 255);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "UTF-16LE" + "'", str7, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-1, -2]");
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str22, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
    }

    @Test
    public void test2968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2968");
        int[] intArray7 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray7);
        int int12 = byteOrderMark11.length();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
    }

    @Test
    public void test2969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2969");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int13 = byteOrderMark11.get((int) (short) 1);
        int[] intArray20 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray20);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray20);
        boolean boolean24 = byteOrderMark11.equals((java.lang.Object) intArray20);
        java.lang.Class<?> wildcardClass25 = intArray20.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 97 + "'", int13 == 97);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test2970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2970");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray11);
        byte[] byteArray16 = byteOrderMark15.getBytes();
        byte[] byteArray17 = byteOrderMark15.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj19 = null;
        boolean boolean20 = byteOrderMark18.equals(obj19);
        int int21 = byteOrderMark18.length();
        boolean boolean23 = byteOrderMark18.equals((java.lang.Object) 0L);
        int int24 = byteOrderMark18.length();
        int int25 = byteOrderMark18.length();
        int[] intArray32 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray32);
        boolean boolean36 = byteOrderMark18.equals((java.lang.Object) intArray32);
        boolean boolean37 = byteOrderMark15.equals((java.lang.Object) intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xFF]", intArray32);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray32);
        java.lang.Class<?> wildcardClass42 = intArray32.getClass();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test2971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2971");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray17);
        boolean boolean22 = byteOrderMark0.equals((java.lang.Object) byteOrderMark21);
        java.lang.String str23 = byteOrderMark21.getCharsetName();
        byte[] byteArray24 = byteOrderMark21.getBytes();
        java.lang.String str25 = byteOrderMark21.getCharsetName();
        java.lang.String str26 = byteOrderMark21.toString();
        int[] intArray39 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark42 = new org.apache.commons.io.ByteOrderMark("hi!", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray39);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray39);
        java.lang.Class<?> wildcardClass49 = byteOrderMark48.getClass();
        boolean boolean50 = byteOrderMark21.equals((java.lang.Object) byteOrderMark48);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16LE" + "'", str9, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str23, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str25, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str26, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test2972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2972");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        int int11 = byteOrderMark10.length();
        java.lang.String str12 = byteOrderMark10.getCharsetName();
        java.lang.String str13 = byteOrderMark10.toString();
        java.lang.String str14 = byteOrderMark10.toString();
        java.lang.String str15 = byteOrderMark10.toString();
        int[] intArray24 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray24);
        boolean boolean30 = byteOrderMark10.equals((java.lang.Object) intArray24);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray24);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 3 + "'", int11 == 3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str13, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str14, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ByteOrderMark[hi!: 0xA,0x61,0x23]" + "'", str15, "ByteOrderMark[hi!: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2973");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        java.lang.String str22 = byteOrderMark21.toString();
        byte[] byteArray23 = byteOrderMark21.getBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int25 = byteOrderMark21.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 97 out of bounds for length 3");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[10, 97, 35]");
    }

    @Test
    public void test2974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2974");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        boolean boolean4 = byteOrderMark0.equals((java.lang.Object) (short) 0);
        int[] intArray14 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("hi!", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray14);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray14);
        int int21 = byteOrderMark20.length();
        java.lang.String str22 = byteOrderMark20.toString();
        boolean boolean23 = byteOrderMark0.equals((java.lang.Object) str22);
        java.lang.String str24 = byteOrderMark0.getCharsetName();
        byte[] byteArray25 = byteOrderMark0.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 3 + "'", int21 == 3);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str22, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[-1, -2]");
    }

    @Test
    public void test2975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2975");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]: 0xA,0x61,0x23]", intArray7);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
    }

    @Test
    public void test2976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2976");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str17 = byteOrderMark16.toString();
        java.lang.String str18 = byteOrderMark16.toString();
        int int20 = byteOrderMark16.get(2);
        boolean boolean22 = byteOrderMark16.equals((java.lang.Object) (byte) 10);
        byte[] byteArray23 = byteOrderMark16.getBytes();
        byte[] byteArray24 = byteOrderMark16.getBytes();
        int int25 = byteOrderMark16.length();
        byte[] byteArray26 = byteOrderMark16.getBytes();
        java.lang.Class<?> wildcardClass27 = byteOrderMark16.getClass();
        boolean boolean28 = byteOrderMark15.equals((java.lang.Object) byteOrderMark16);
        byte[] byteArray29 = byteOrderMark15.getBytes();
        java.lang.Class<?> wildcardClass30 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str17, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str18, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 254 + "'", int20 == 254);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2977");
        int[] intArray12 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("hi!", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray12);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean24 = byteOrderMark22.equals((java.lang.Object) (-1L));
        java.lang.String str25 = byteOrderMark22.toString();
        byte[] byteArray26 = byteOrderMark22.getBytes();
        java.lang.String str27 = byteOrderMark22.getCharsetName();
        int int28 = byteOrderMark22.length();
        boolean boolean29 = byteOrderMark21.equals((java.lang.Object) byteOrderMark22);
        java.lang.String str30 = byteOrderMark21.toString();
        int int31 = byteOrderMark21.length();
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str25, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UTF-16LE" + "'", str27, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
    }

    @Test
    public void test2978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2978");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray11);
        int[] intArray26 = new int[] { (short) -1, (byte) 0, 254 };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray26);
        boolean boolean31 = byteOrderMark18.equals((java.lang.Object) intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xFF]", intArray26);
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 254]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2979");
        org.apache.commons.io.ByteOrderMark byteOrderMark1 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray2 = byteOrderMark1.getBytes();
        java.lang.String str3 = byteOrderMark1.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int6 = byteOrderMark4.get((int) (byte) 0);
        byte[] byteArray7 = byteOrderMark4.getBytes();
        byte[] byteArray8 = byteOrderMark4.getBytes();
        boolean boolean9 = byteOrderMark1.equals((java.lang.Object) byteOrderMark4);
        boolean boolean11 = byteOrderMark4.equals((java.lang.Object) '\ufeff');
        int[] intArray23 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("hi!", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]", intArray23);
        boolean boolean32 = byteOrderMark4.equals((java.lang.Object) intArray23);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xFF]", intArray23);
        int int34 = byteOrderMark33.length();
        org.junit.Assert.assertNotNull(byteOrderMark1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-32BE" + "'", str3, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 239 + "'", int6 == 239);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
    }

    @Test
    public void test2980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2980");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str1 = byteOrderMark0.getCharsetName();
        boolean boolean3 = byteOrderMark0.equals((java.lang.Object) 1.0d);
        java.lang.String str4 = byteOrderMark0.getCharsetName();
        java.lang.Class<?> wildcardClass5 = byteOrderMark0.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "UTF-16LE" + "'", str1, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "UTF-16LE" + "'", str4, "UTF-16LE");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2981");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean26 = byteOrderMark13.equals((java.lang.Object) "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        java.lang.String str27 = byteOrderMark13.toString();
        java.lang.String str28 = byteOrderMark13.getCharsetName();
        java.lang.String str29 = byteOrderMark13.getCharsetName();
        java.lang.String str30 = byteOrderMark13.toString();
        byte[] byteArray31 = byteOrderMark13.getBytes();
        java.lang.String str32 = byteOrderMark13.getCharsetName();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str27, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "UTF-32BE" + "'", str28, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "UTF-32BE" + "'", str29, "UTF-32BE");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]" + "'", str30, "ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "UTF-32BE" + "'", str32, "UTF-32BE");
    }

    @Test
    public void test2982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2982");
        int[] intArray5 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = new org.apache.commons.io.ByteOrderMark("hi!", intArray5);
        org.apache.commons.io.ByteOrderMark byteOrderMark7 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]", intArray5);
        byte[] byteArray8 = byteOrderMark7.getBytes();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[10, 97, 35]");
    }

    @Test
    public void test2983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2983");
        int[] intArray3 = new int[] { (byte) -1 };
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray3);
        org.apache.commons.io.ByteOrderMark byteOrderMark5 = new org.apache.commons.io.ByteOrderMark("UTF-32LE", intArray3);
        byte[] byteArray6 = byteOrderMark5.getBytes();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1]");
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[-1]");
    }

    @Test
    public void test2984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2984");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        int int18 = byteOrderMark17.length();
        int[] intArray28 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark33 = new org.apache.commons.io.ByteOrderMark("hi!", intArray28);
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray28);
        boolean boolean35 = byteOrderMark17.equals((java.lang.Object) byteOrderMark34);
        int[] intArray42 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray42);
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray42);
        int int46 = byteOrderMark45.length();
        int[] intArray51 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray51);
        java.lang.String str53 = byteOrderMark52.getCharsetName();
        java.lang.Object obj54 = null;
        boolean boolean55 = byteOrderMark52.equals(obj54);
        boolean boolean56 = byteOrderMark45.equals(obj54);
        org.apache.commons.io.ByteOrderMark byteOrderMark57 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean59 = byteOrderMark57.equals((java.lang.Object) (-1L));
        java.lang.String str60 = byteOrderMark57.getCharsetName();
        java.lang.String str61 = byteOrderMark57.getCharsetName();
        java.lang.String str62 = byteOrderMark57.getCharsetName();
        boolean boolean63 = byteOrderMark45.equals((java.lang.Object) byteOrderMark57);
        byte[] byteArray64 = byteOrderMark45.getBytes();
        boolean boolean65 = byteOrderMark34.equals((java.lang.Object) byteArray64);
        int int66 = byteOrderMark34.length();
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 3 + "'", int18 == 3);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 3 + "'", int46 == 3);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteOrderMark57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "UTF-16LE" + "'", str60, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UTF-16LE" + "'", str61, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "UTF-16LE" + "'", str62, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
    }

    @Test
    public void test2985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2985");
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        byte[] byteArray4 = byteOrderMark3.getBytes();
        java.lang.String str5 = byteOrderMark3.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark6 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int8 = byteOrderMark6.get((int) (byte) 0);
        byte[] byteArray9 = byteOrderMark6.getBytes();
        byte[] byteArray10 = byteOrderMark6.getBytes();
        boolean boolean11 = byteOrderMark3.equals((java.lang.Object) byteOrderMark6);
        int[] intArray21 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("hi!", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        boolean boolean28 = byteOrderMark3.equals((java.lang.Object) intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]", intArray21);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-32BE: 0xFF,0x0,0xFE]: 0xA,0x61,0x23]", intArray21);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "UTF-32BE" + "'", str5, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteOrderMark6);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 239 + "'", int8 == 239);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-17, -69, -65]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[-17, -69, -65]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2986");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) 3);
        java.lang.String str9 = byteOrderMark0.getCharsetName();
        java.lang.String str10 = byteOrderMark0.getCharsetName();
        java.lang.String str11 = byteOrderMark0.toString();
        byte[] byteArray12 = byteOrderMark0.getBytes();
        java.lang.String str13 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_8;
        int int16 = byteOrderMark14.get((int) (byte) 0);
        int[] intArray26 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark29 = new org.apache.commons.io.ByteOrderMark("hi!", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark31 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray26);
        org.apache.commons.io.ByteOrderMark byteOrderMark32 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray26);
        int int33 = byteOrderMark32.length();
        boolean boolean34 = byteOrderMark14.equals((java.lang.Object) byteOrderMark32);
        int[] intArray44 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark45 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark46 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark47 = new org.apache.commons.io.ByteOrderMark("hi!", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark48 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark49 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray44);
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray44);
        boolean boolean51 = byteOrderMark14.equals((java.lang.Object) intArray44);
        boolean boolean52 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        java.lang.String str53 = byteOrderMark14.getCharsetName();
        java.lang.String str54 = byteOrderMark14.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "UTF-16BE" + "'", str9, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UTF-16BE" + "'", str10, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str11, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[-2, -1]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str13, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 239 + "'", int16 == 239);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 3 + "'", int33 == 3);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "UTF-8" + "'", str53, "UTF-8");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]" + "'", str54, "ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]");
    }

    @Test
    public void test2987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2987");
        int[] intArray11 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray11);
        java.lang.String str20 = byteOrderMark19.toString();
        java.lang.String str21 = byteOrderMark19.getCharsetName();
        org.junit.Assert.assertNotNull(intArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray11), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str20, "ByteOrderMark[ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]" + "'", str21, "ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]");
    }

    @Test
    public void test2988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2988");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray13);
        int[] intArray33 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark34 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("hi!", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark40 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark41 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16BE: 0xFE,0xFF]", intArray33);
        boolean boolean42 = byteOrderMark21.equals((java.lang.Object) intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark43 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray33);
        org.apache.commons.io.ByteOrderMark byteOrderMark44 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray33);
        java.lang.String str45 = byteOrderMark44.toString();
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]" + "'", str45, "ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-8: 0xEF,0xBB,0xBF]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]");
    }

    @Test
    public void test2989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2989");
        int[] intArray9 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("hi!", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray9);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean18 = byteOrderMark16.equals((java.lang.Object) 1L);
        java.lang.String str19 = byteOrderMark16.getCharsetName();
        int int20 = byteOrderMark16.length();
        boolean boolean22 = byteOrderMark16.equals((java.lang.Object) (byte) -1);
        byte[] byteArray23 = byteOrderMark16.getBytes();
        java.lang.String str24 = byteOrderMark16.getCharsetName();
        int[] intArray29 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark30 = new org.apache.commons.io.ByteOrderMark("hi!", intArray29);
        int int31 = byteOrderMark30.length();
        java.lang.Class<?> wildcardClass32 = byteOrderMark30.getClass();
        boolean boolean33 = byteOrderMark16.equals((java.lang.Object) byteOrderMark30);
        boolean boolean34 = byteOrderMark15.equals((java.lang.Object) boolean33);
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj36 = null;
        boolean boolean37 = byteOrderMark35.equals(obj36);
        int int38 = byteOrderMark35.length();
        boolean boolean40 = byteOrderMark35.equals((java.lang.Object) 0L);
        int int41 = byteOrderMark35.length();
        int int42 = byteOrderMark35.length();
        int[] intArray49 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark50 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark51 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray49);
        org.apache.commons.io.ByteOrderMark byteOrderMark52 = new org.apache.commons.io.ByteOrderMark("hi!", intArray49);
        boolean boolean53 = byteOrderMark35.equals((java.lang.Object) intArray49);
        int[] intArray61 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark62 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark63 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark64 = new org.apache.commons.io.ByteOrderMark("hi!", intArray61);
        org.apache.commons.io.ByteOrderMark byteOrderMark65 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray61);
        int int66 = byteOrderMark65.length();
        boolean boolean67 = byteOrderMark35.equals((java.lang.Object) byteOrderMark65);
        org.apache.commons.io.ByteOrderMark byteOrderMark68 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean70 = byteOrderMark68.equals((java.lang.Object) 1L);
        java.lang.String str71 = byteOrderMark68.getCharsetName();
        int int72 = byteOrderMark68.length();
        boolean boolean74 = byteOrderMark68.equals((java.lang.Object) (byte) -1);
        byte[] byteArray75 = byteOrderMark68.getBytes();
        java.lang.String str76 = byteOrderMark68.getCharsetName();
        java.lang.String str77 = byteOrderMark68.getCharsetName();
        java.lang.String str78 = byteOrderMark68.toString();
        int int79 = byteOrderMark68.length();
        int int80 = byteOrderMark68.length();
        boolean boolean81 = byteOrderMark65.equals((java.lang.Object) byteOrderMark68);
        int int82 = byteOrderMark65.length();
        java.lang.String str83 = byteOrderMark65.toString();
        byte[] byteArray84 = byteOrderMark65.getBytes();
        int int85 = byteOrderMark65.length();
        byte[] byteArray86 = byteOrderMark65.getBytes();
        boolean boolean87 = byteOrderMark15.equals((java.lang.Object) byteArray86);
        java.lang.Class<?> wildcardClass88 = byteOrderMark15.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16LE" + "'", str19, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2 + "'", int20 == 2);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(byteOrderMark35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2 + "'", int38 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 3 + "'", int66 == 3);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(byteOrderMark68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "UTF-16LE" + "'", str71, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2 + "'", int72 == 2);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "UTF-16LE" + "'", str76, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "UTF-16LE" + "'", str77, "UTF-16LE");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str78, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2 + "'", int79 == 2);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 3 + "'", int82 == 3);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]" + "'", str83, "ByteOrderMark[ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]: 0xA,0x61,0x23]");
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 3 + "'", int85 == 3);
        org.junit.Assert.assertNotNull(byteArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray86), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2990");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        boolean boolean7 = byteOrderMark4.equals((java.lang.Object) (short) -1);
        java.lang.String str8 = byteOrderMark4.getCharsetName();
        int int9 = byteOrderMark4.length();
        int int10 = byteOrderMark4.length();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16BE" + "'", str8, "UTF-16BE");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
    }

    @Test
    public void test2991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2991");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int2 = byteOrderMark0.get(0);
        org.apache.commons.io.ByteOrderMark byteOrderMark3 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean5 = byteOrderMark3.equals((java.lang.Object) (-1L));
        java.lang.String str6 = byteOrderMark3.toString();
        byte[] byteArray7 = byteOrderMark3.getBytes();
        boolean boolean8 = byteOrderMark0.equals((java.lang.Object) byteOrderMark3);
        int int9 = byteOrderMark0.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean12 = byteOrderMark10.equals((java.lang.Object) 1L);
        java.lang.String str13 = byteOrderMark10.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean15 = byteOrderMark10.equals((java.lang.Object) byteOrderMark14);
        byte[] byteArray16 = byteOrderMark14.getBytes();
        int int17 = byteOrderMark14.length();
        java.lang.String str18 = byteOrderMark14.getCharsetName();
        java.lang.String str19 = byteOrderMark14.getCharsetName();
        byte[] byteArray20 = byteOrderMark14.getBytes();
        boolean boolean21 = byteOrderMark0.equals((java.lang.Object) byteOrderMark14);
        int int22 = byteOrderMark0.length();
        java.lang.String str23 = byteOrderMark0.getCharsetName();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 255 + "'", int2 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 2 + "'", int9 == 2);
        org.junit.Assert.assertNotNull(byteOrderMark10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UTF-16LE" + "'", str13, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UTF-16BE" + "'", str18, "UTF-16BE");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "UTF-16BE" + "'", str19, "UTF-16BE");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[-2, -1]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UTF-16LE" + "'", str23, "UTF-16LE");
    }

    @Test
    public void test2992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2992");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) -1);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        java.lang.String str8 = byteOrderMark0.getCharsetName();
        byte[] byteArray9 = byteOrderMark0.getBytes();
        int int11 = byteOrderMark0.get((int) (short) 0);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = org.apache.commons.io.ByteOrderMark.UTF_8;
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark12);
        int int14 = byteOrderMark12.length();
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        java.lang.String str16 = byteOrderMark15.getCharsetName();
        int int17 = byteOrderMark15.length();
        byte[] byteArray18 = byteOrderMark15.getBytes();
        boolean boolean19 = byteOrderMark12.equals((java.lang.Object) byteOrderMark15);
        java.lang.Object obj20 = null;
        boolean boolean21 = byteOrderMark15.equals(obj20);
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[-1, -2]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "UTF-16LE" + "'", str8, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertNotNull(byteOrderMark12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 3 + "'", int14 == 3);
        org.junit.Assert.assertNotNull(byteOrderMark15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "UTF-16LE" + "'", str16, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2 + "'", int17 == 2);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2993");
        int[] intArray8 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("hi!", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0x61,0x23]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16BE: 0xFE,0xFF]: 0xA,0xFE,0x64]", intArray8);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[hi!: 0xA,0x61,0x23]: 0x0,0xA,0xFF]", intArray8);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[10, 97, 35]");
    }

    @Test
    public void test2994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2994");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        java.lang.String str1 = byteOrderMark0.toString();
        java.lang.String str2 = byteOrderMark0.toString();
        int int4 = byteOrderMark0.get(2);
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (byte) 10);
        byte[] byteArray7 = byteOrderMark0.getBytes();
        int[] intArray17 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("hi!", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray17);
        boolean boolean24 = byteOrderMark0.equals((java.lang.Object) byteOrderMark23);
        int int25 = byteOrderMark0.length();
        int[] intArray34 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark35 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark36 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark37 = new org.apache.commons.io.ByteOrderMark("hi!", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark38 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray34);
        org.apache.commons.io.ByteOrderMark byteOrderMark39 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray34);
        java.lang.Class<?> wildcardClass40 = byteOrderMark39.getClass();
        boolean boolean41 = byteOrderMark0.equals((java.lang.Object) wildcardClass40);
        java.lang.String str42 = byteOrderMark0.getCharsetName();
        byte[] byteArray43 = byteOrderMark0.getBytes();
        java.lang.String str44 = byteOrderMark0.toString();
        java.lang.String str45 = byteOrderMark0.toString();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str1, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str2, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 254 + "'", int4 == 254);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[0, 0, -2, -1]");
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 4 + "'", int25 == 4);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "UTF-32BE" + "'", str42, "UTF-32BE");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[0, 0, -2, -1]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str44, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str45, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
    }

    @Test
    public void test2995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2995");
        int[] intArray7 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark8 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark10 = new org.apache.commons.io.ByteOrderMark("hi!", intArray7);
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray7);
        int int12 = byteOrderMark11.length();
        int[] intArray22 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark24 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark25 = new org.apache.commons.io.ByteOrderMark("hi!", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark26 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark27 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        org.apache.commons.io.ByteOrderMark byteOrderMark28 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray22);
        boolean boolean29 = byteOrderMark11.equals((java.lang.Object) byteOrderMark28);
        byte[] byteArray30 = byteOrderMark11.getBytes();
        int int31 = byteOrderMark11.length();
        int int32 = byteOrderMark11.length();
        int int34 = byteOrderMark11.get(0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 3 + "'", int12 == 3);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[10, 97, 35]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 3 + "'", int31 == 3);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 3 + "'", int32 == 3);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
    }

    @Test
    public void test2996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2996");
        int[] intArray13 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[hi!: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("hi!", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = new org.apache.commons.io.ByteOrderMark("UTF-8", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark22 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-16LE: 0xFF,0xFE]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.apache.commons.io.ByteOrderMark byteOrderMark23 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[ByteOrderMark[ByteOrderMark[ByteOrderMark[UTF-32BE: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]: 0xA,0x61,0x23]", intArray13);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[10, 97, 35]");
    }

    @Test
    public void test2997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2997");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        int int4 = byteOrderMark0.length();
        boolean boolean6 = byteOrderMark0.equals((java.lang.Object) (-1.0f));
        java.lang.String str7 = byteOrderMark0.toString();
        byte[] byteArray8 = byteOrderMark0.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean11 = byteOrderMark9.equals((java.lang.Object) (-1L));
        java.lang.String str12 = byteOrderMark9.getCharsetName();
        boolean boolean13 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        int int14 = byteOrderMark0.length();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = byteOrderMark0.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index -1 out of bounds for length 2");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 2 + "'", int4 == 2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[-1, -2]");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UTF-16LE" + "'", str12, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
    }

    @Test
    public void test2998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2998");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        java.lang.Object obj1 = null;
        boolean boolean2 = byteOrderMark0.equals(obj1);
        int int3 = byteOrderMark0.length();
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) 0L);
        int int6 = byteOrderMark0.length();
        int int7 = byteOrderMark0.length();
        java.lang.String str8 = byteOrderMark0.toString();
        org.apache.commons.io.ByteOrderMark byteOrderMark9 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        int int11 = byteOrderMark9.get(0);
        boolean boolean13 = byteOrderMark9.equals((java.lang.Object) (short) 0);
        byte[] byteArray14 = byteOrderMark9.getBytes();
        int int16 = byteOrderMark9.get(1);
        boolean boolean17 = byteOrderMark0.equals((java.lang.Object) byteOrderMark9);
        java.lang.Class<?> wildcardClass18 = byteOrderMark9.getClass();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ByteOrderMark[UTF-16BE: 0xFE,0xFF]" + "'", str8, "ByteOrderMark[UTF-16BE: 0xFE,0xFF]");
        org.junit.Assert.assertNotNull(byteOrderMark9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 255 + "'", int11 == 255);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[-1, -2]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 254 + "'", int16 == 254);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2999");
        int[] intArray10 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark11 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark12 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark13 = new org.apache.commons.io.ByteOrderMark("hi!", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark14 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xFF,0xFE]", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark15 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("UTF-32BE", intArray10);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-16LE: 0xA,0x61,0x23]", intArray10);
        byte[] byteArray18 = byteOrderMark17.getBytes();
        byte[] byteArray19 = byteOrderMark17.getBytes();
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_32BE;
        org.apache.commons.io.ByteOrderMark byteOrderMark21 = org.apache.commons.io.ByteOrderMark.UTF_32LE;
        boolean boolean23 = byteOrderMark21.equals((java.lang.Object) "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        java.lang.Class<?> wildcardClass24 = byteOrderMark21.getClass();
        boolean boolean25 = byteOrderMark20.equals((java.lang.Object) byteOrderMark21);
        byte[] byteArray26 = byteOrderMark20.getBytes();
        boolean boolean27 = byteOrderMark17.equals((java.lang.Object) byteOrderMark20);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertNotNull(byteOrderMark21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[0, 0, -2, -1]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test3000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test3000");
        org.apache.commons.io.ByteOrderMark byteOrderMark0 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean2 = byteOrderMark0.equals((java.lang.Object) 1L);
        java.lang.String str3 = byteOrderMark0.getCharsetName();
        org.apache.commons.io.ByteOrderMark byteOrderMark4 = org.apache.commons.io.ByteOrderMark.UTF_16BE;
        boolean boolean5 = byteOrderMark0.equals((java.lang.Object) byteOrderMark4);
        java.lang.String str6 = byteOrderMark0.toString();
        java.lang.String str7 = byteOrderMark0.toString();
        int[] intArray15 = new int[] { 10, 'a', '#' };
        org.apache.commons.io.ByteOrderMark byteOrderMark16 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark17 = new org.apache.commons.io.ByteOrderMark("UTF-16LE", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark18 = new org.apache.commons.io.ByteOrderMark("hi!", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark19 = new org.apache.commons.io.ByteOrderMark("ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]", intArray15);
        org.apache.commons.io.ByteOrderMark byteOrderMark20 = org.apache.commons.io.ByteOrderMark.UTF_16LE;
        boolean boolean22 = byteOrderMark20.equals((java.lang.Object) (-1L));
        java.lang.String str23 = byteOrderMark20.toString();
        java.lang.String str24 = byteOrderMark20.getCharsetName();
        boolean boolean25 = byteOrderMark19.equals((java.lang.Object) byteOrderMark20);
        java.lang.String str26 = byteOrderMark19.getCharsetName();
        int int27 = byteOrderMark19.length();
        byte[] byteArray28 = byteOrderMark19.getBytes();
        java.lang.String str29 = byteOrderMark19.getCharsetName();
        boolean boolean30 = byteOrderMark0.equals((java.lang.Object) byteOrderMark19);
        byte[] byteArray31 = byteOrderMark19.getBytes();
        org.junit.Assert.assertNotNull(byteOrderMark0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "UTF-16LE" + "'", str3, "UTF-16LE");
        org.junit.Assert.assertNotNull(byteOrderMark4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str6, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str7, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[10, 97, 35]");
        org.junit.Assert.assertNotNull(byteOrderMark20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ByteOrderMark[UTF-16LE: 0xFF,0xFE]" + "'", str23, "ByteOrderMark[UTF-16LE: 0xFF,0xFE]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "UTF-16LE" + "'", str24, "UTF-16LE");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str26, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 3 + "'", int27 == 3);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[10, 97, 35]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]" + "'", str29, "ByteOrderMark[UTF-32BE: 0x0,0x0,0xFE,0xFF]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[10, 97, 35]");
    }
}

